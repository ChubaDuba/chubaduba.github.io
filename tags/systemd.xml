<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"
    xmlns:dc="http://purl.org/dc/elements/1.1/">
    <channel>
        <title>ChubaDuba - Посты с тегом systemd</title>
        <link>https://chubaduba.github.io/</link>
        <description><![CDATA[Блог ChubaDuba]]></description>
        <atom:link href="https://chubaduba.github.io//tags/systemd.xml" rel="self"
                   type="application/rss+xml" />
        <lastBuildDate>Thu, 02 Apr 2020 00:00:00 UT</lastBuildDate>
        <item>
    <title>Сервис systemd для noip2.</title>
    <link>https://chubaduba.github.io//posts/2020-04-02-1.html</link>
    <description><![CDATA[<p>Создаём в <code>/etc/systemd/system</code> сервис с именем <code>noip2.service</code>:</p>
<hr />
<pre><code>[Unit]
Description=No-ip.com dynamic IP address updater
After=network.target
After=syslog.target

[Install]
WantedBy=multi-user.target
Alias=noip.service

[Service]
# Start main service
ExecStart=/usr/local/bin/noip2
Restart=always
Type=forking
</code></pre>
<hr />
<p>Обновляем сервисы, ставим новый сервис в автозагрузку, запускаем сервис:</p>
<pre><code>$ sudo systemctl daemon-reload
$ sudo systemctl enable noip2
$ sudo systemctl start noip2
</code></pre>]]></description>
    <pubDate>Thu, 02 Apr 2020 00:00:00 UT</pubDate>
    <guid>https://chubaduba.github.io//posts/2020-04-02-1.html</guid>
    <dc:creator>ChubaDuba</dc:creator>
</item>
<item>
    <title>Русская консоль (tty) в Debian 9 Stratch i386</title>
    <link>https://chubaduba.github.io//posts/2018-06-15-1.html</link>
    <description><![CDATA[<p>Сразу отмечу, что баг был замечен при неоднократных установках Debian. Во всех случаях использовался образ диска <code>netinstall</code>, устанавливалась минимальная конфигурация без графического интерфейса. Проявляется баг только на дистрибутиве <code>Debian 9 Stratch i386</code>, на 64-х битной версии он отсутствует. Заключается он в некорректном отображении кириллицы (вместо букв квадраты) при правильно сконфигурированной русской локали.</p>
<p>Проблема решилась после изменения юнита <code>systemd</code> под названием <code>console-setup.service</code>. Расположен он в <code>/etc/systemd/system/multi-user.target.wants/</code>. Вот его содержимое по умолчанию:</p>
<pre><code>[Unit]
Description=Set console font and keymap
DefaultDependencies=no
After=console-screen.service kbd.service local-fs.target
RequiresMountsFor=/usr
ConditionPathExists=/bin/setupcon

[Service]
Type=oneshot
ExecStart=/lib/console-setup/console-setup.sh
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
</code></pre>
<p>Нужно изменить одну строчку:</p>
<pre><code>ExecStart=/lib/console-setup/console-setup.sh
</code></pre>
<p>на</p>
<pre><code>ExecStart=/bin/setupcon
</code></pre>
<p>После перезапуска юнита всё встаёт на свои места, и в консоли теперь русские буквы отображаются корректно.</p>]]></description>
    <pubDate>Fri, 15 Jun 2018 00:00:00 UT</pubDate>
    <guid>https://chubaduba.github.io//posts/2018-06-15-1.html</guid>
    <dc:creator>ChubaDuba</dc:creator>
</item>
<item>
    <title>Systemd. Запуск задач по расписанию.</title>
    <link>https://chubaduba.github.io//posts/2018-04-08-1.html</link>
    <description><![CDATA[<p>Чтобы systemd запускал нужный нам сервис по таймеру, у сервиса должен быть соответствующий unit-файл (файл конфигурации службы для systemd), он должен иметь расширение <code>.service</code>, а также специальный одноименный unit-файл, но с расширением <code>.timer</code>, описывающий, когда указанный сервис должен быть запущен. Освоив <code>systemd.timer</code>, вполне можно отказаться от использования <code>Cron</code>.</p>
<p>Для примера автоматизируем такую задачу, как обновление списка пакетов из источников, перечисленных в нашем файле <code>sources.list</code>. Ни для кого не секрет, что в Debian для обновления списка пакетов используется следующая команда:</p>
<pre><code># apt-get update
</code></pre>
<p>Первое, что мы сделаем - это завернём данную команду в скрипт:</p>
<hr />
<div class="sourceCode" id="cb2"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb2-1"><a href="#cb2-1"></a><span class="co">#!/bin/bash</span></span>
<span id="cb2-2"><a href="#cb2-2"></a></span>
<span id="cb2-3"><a href="#cb2-3"></a><span class="ex">apt-get</span> update</span></code></pre></div>
<hr />
<p>Скрипт так и назовём <code>update</code> и сохраним его в <code>/opt</code>. Обязательно нужно сделать скрипт исполняемым:</p>
<pre><code># chmod +x /opt/update
</code></pre>
<p>Вторым шагом нужно создать unit-файл, описывающий наш сервис, и сохранить его в <code>/lib/systemd/system</code>:</p>
<p><code>xmobar_update.service</code>:</p>
<hr />
<pre><code>[Unit]
Description=Update script for xmobar
 
[Service]
ExecStart=/opt/update
</code></pre>
<hr />
<p>где<br />
<code>Description=</code> - произвольное описание;<br />
<code>ExecStart=</code> - директива, которая описывает, что будет запускаться.</p>
<p>Описание должно быть таким, чтобы спустя какое-то время понимать для каких целей вы создавали данный unit-файл. С директивой <code>ExecStart=</code>, думаю, всё понятно. В данном случае запускается ранее созданный нами скрипт.</p>
<p>Наконец, осталось создать unit-файл типа <code>timer</code> и положить туда же с тем же названием, сменив только расширение с <code>.service</code> на <code>.timer</code>:</p>
<p><code>xmobar_update.timer</code>:</p>
<hr />
<pre><code>[Unit]
Description=timer for xmobar update script
 
[Timer]
OnStartupSec=60
 
[Install]
WantedBy=timers.target
</code></pre>
<hr />
<p>Здесь стоит обратить внимание на директиву <code>OnStartupSec=</code>, которая показывает, что запускать сервис надо после первого запуска systemd и, поскольку, ничего иного не указано, с задержкой в 60 секунд. Ничего - не значит ничего. На самом деле systemd просто остальные переменные сам заменит на <code>*</code>, означающую <font color="#91E2E6">всегда</font> - точно так же, как и в Cron’e. Иными словами всегда, после первого запуска systemd, а это происходит каждый раз при запуске компьютера, с задержкой в 60 секунд будет выполняться наш сервис.</p>
<blockquote>
<p>Существуют разные директивы, о которых можно прочитать <a href="https://www.freedesktop.org/software/systemd/man/systemd.timer">в документации к systemd</a>.</p>
</blockquote>
<p>Приведу несколько примеров для директивы <code>OnCalendar=</code>, которая запускает сервис по календарю:</p>
<table>
<colgroup>
<col style="width: 66%" />
<col style="width: 33%" />
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;">Событие</th>
<th style="text-align: left;">Синтаксис</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">Пн-Вт,СБ и ВС в 00:00:00</td>
<td style="text-align: left;"><code>Sat,Thu,Mon-Wed,Sat-Sun</code></td>
</tr>
<tr class="even">
<td style="text-align: left;">Все Пн и Вс в 2018-ом в 01:23 и в 02:23</td>
<td style="text-align: left;"><code>Mon,Sun 18-*-* 2,1:23</code></td>
</tr>
<tr class="odd">
<td style="text-align: left;">1-ого числа каждого месяца, но только если это среда в 00:00:00</td>
<td style="text-align: left;"><code>Wed *-1</code></td>
</tr>
<tr class="even">
<td style="text-align: left;">То же самое</td>
<td style="text-align: left;"><code>Wed-Wed,Wed *-1</code></td>
</tr>
<tr class="odd">
<td style="text-align: left;">По средам 17:48:00</td>
<td style="text-align: left;"><code>Wed, 17:48</code></td>
</tr>
<tr class="even">
<td style="text-align: left;">15-ого октября 2018-ого в 01:02:03, но только, если это Вт, Ср, Чт, Пт, Сб</td>
<td style="text-align: left;"><code>Wed-Sat,Tue 12-10-18 1:2:3</code></td>
</tr>
<tr class="odd">
<td style="text-align: left;">7-ого числа каждого месяца в 00:00</td>
<td style="text-align: left;"><code>*-*-7 0:0:0</code></td>
</tr>
<tr class="even">
<td style="text-align: left;">Каждый год 15-ого октября в 00:00</td>
<td style="text-align: left;"><code>*-10-15 00:00:00</code></td>
</tr>
<tr class="odd">
<td style="text-align: left;">Каждой 5-ое марта в 08:05:40</td>
<td style="text-align: left;"><code>03-05 08:05:40</code></td>
</tr>
<tr class="even">
<td style="text-align: left;">Ежедневно в 08:05:40</td>
<td style="text-align: left;"><code>08:05:40</code></td>
</tr>
<tr class="odd">
<td style="text-align: left;">Ежедневно в 5:40</td>
<td style="text-align: left;"><code>*-*-* 05:40:00</code></td>
</tr>
<tr class="even">
<td style="text-align: left;">В 2018-ом 3-его мая в 00:00</td>
<td style="text-align: left;"><code>2018-03-05</code></td>
</tr>
<tr class="odd">
<td style="text-align: left;">Ежегодно 3-его мая в 00:00</td>
<td style="text-align: left;"><code>03-05</code></td>
</tr>
<tr class="even">
<td style="text-align: left;">Ежечастно в 0 минут</td>
<td style="text-align: left;"><code>hourly</code></td>
</tr>
<tr class="odd">
<td style="text-align: left;">Ежедневно в 00:00</td>
<td style="text-align: left;"><code>daily</code></td>
</tr>
<tr class="even">
<td style="text-align: left;">Ежемесяно 1-ого числа в 00:00</td>
<td style="text-align: left;"><code>monthly</code></td>
</tr>
<tr class="odd">
<td style="text-align: left;">Еженедельно в понедельник в 00:00</td>
<td style="text-align: left;"><code>weekly</code></td>
</tr>
<tr class="even">
<td style="text-align: left;">Ежегодно 1-ого января в 00:00</td>
<td style="text-align: left;"><code>yearly</code></td>
</tr>
<tr class="odd">
<td style="text-align: left;">Тоже самое</td>
<td style="text-align: left;"><code>annually</code></td>
</tr>
</tbody>
</table>
<p>Директиву <code>OnCalendar=</code> можно комбинировать с другими типами таймеров, что даёт возможность настроить практически любую вариацию.</p>
<p>Директива <code>WantedBy=timers.target</code> никак не влияет на работу, она нужна для того, чтобы при следующей перезагрузке наш таймер заработал автоматически.</p>
<p>Теперь всё готово для запуска сервиса по таймеру. Обновляем конфигурацию systemd командой:</p>
<pre><code># systemctl daemon-reload
</code></pre>
<p>Ставим таймер в автозагрузку:</p>
<pre><code># systemctl enable xmobar_update.timer
</code></pre>
<p>И наконец, перезагружаемся или включаем таймер командой:</p>
<pre><code># systemctl start xmobar_update.timer
</code></pre>
<p>Всё! <code>xmobar_update.timer</code> будет отслеживать заданное событие и, по наступлению нужного момента, запустит <code>xmobar_update.service</code>.</p>]]></description>
    <pubDate>Sun, 08 Apr 2018 00:00:00 UT</pubDate>
    <guid>https://chubaduba.github.io//posts/2018-04-08-1.html</guid>
    <dc:creator>ChubaDuba</dc:creator>
</item>
<item>
    <title>Автологин и "startx" без дисплейного менеджера - Debian 9 Stretch</title>
    <link>https://chubaduba.github.io//posts/2018-03-06-1.html</link>
    <description><![CDATA[<p>Этот пост предназначен для пользователей, которые хотят автоматически войти в свою систему Debian 9 Stretch и запустить Xserver без необходимости вводить <code>startx</code> в командной строке.</p>
<blockquote>
<p>Естественно, в качестве системы инициализации выступает <code>systemd</code> - изкоробочный вариант в Debian 9 Stretch.</p>
</blockquote>
<p>Для автологина создаём файл <code>/etc/systemd/system/getty@tty1.service.d/override.conf</code> (от имени root) со следующим содержимым:</p>
<pre><code>[Service]
ExecStart=
ExecStart=-/sbin/agetty --autologin user_name --noclear %I $TERM
</code></pre>
<p>Здесь нужно заменить <code>user_name</code> на ваше имя пользователя.</p>
<p>Для автозапуска <code>startx</code> добавляем строчку в конец нашего файла <code>~/.profile</code>:</p>
<pre><code>[ &quot;$(tty)&quot; = &quot;/dev/tty1&quot; ] &amp;&amp; exec startx
</code></pre>
<p>В заключении нужно установить правильный параметр <code>default.target</code>, чтобы система загружалась на консоль (TTY), а не в диспетчер дисплея:</p>
<pre><code># systemctl set-default multi-user.target
</code></pre>
<p>Если вы всё сделали правильно, и при условии того, что у вас всё работало в ручном режиме, т.е. вы могли залогинится после старта системы и потом запустить <code>startx</code>, то после перезагрузки вы автоматически загрузитесь под своим именем в свой оконный менеджер.</p>
<p>Отменить изменение значения <code>default.target</code> можно с помощью команды:</p>
<pre><code># systemctl set-default graphical.target
</code></pre>]]></description>
    <pubDate>Tue, 06 Mar 2018 00:00:00 UT</pubDate>
    <guid>https://chubaduba.github.io//posts/2018-03-06-1.html</guid>
    <dc:creator>ChubaDuba</dc:creator>
</item>

    </channel>
</rss>
