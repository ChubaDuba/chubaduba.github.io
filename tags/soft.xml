<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"
    xmlns:dc="http://purl.org/dc/elements/1.1/">
    <channel>
        <title>ChubaDuba - Посты с тегом soft</title>
        <link>https://chubaduba.github.io/</link>
        <description><![CDATA[Блог ChubaDuba]]></description>
        <atom:link href="https://chubaduba.github.io//tags/soft.xml" rel="self"
                   type="application/rss+xml" />
        <lastBuildDate>Wed, 15 Apr 2020 00:00:00 UT</lastBuildDate>
        <item>
    <title>Teamviewer в топку!</title>
    <link>https://chubaduba.github.io//posts/2020-04-15-1.html</link>
    <description><![CDATA[<p>Уже на протяжении нескольких лет в <a href="https://www.teamviewer.com/ru/">Teamviewer</a> присутствует баг, а может это их фирменная <a href="https://www.youtube.com/watch?v=w9laH3q1hBM">фисечка</a>? Дело в том, что по непонятным причинам современный <code>Teamviewer</code> требует в системе <i>обязательного</i> присутствия установленного <a href="https://wiki.debian.org/DisplayManager">DM (Display Manager)</a>. Говоря простым языком, если вход в графический интерфейс выполняется без использования <code>Display  Manager</code>, а настроен, например, <a href="https://chubaduba.github.io/posts/2018-03-06-1.html">таким образом</a>, или вы просто пользуетесь командой <code>startx</code>, то <code>Teamviewer</code> работать не будет Он тупо не запустится! Пользоваться или не пользоваться программой с таким ограничением, решать только вам. Я давно отказался от его использования. Последняя установленная на моём ПК версия была <code>v10.0.223993</code>.</p>
<p>Сейчас я использую <a href="https://anydesk.com/ru">AnyDesk</a>. Отличный вариант, если нет возможности настроить <code>VNC</code> на удалённом компьютере. Мультиплатформенный - можно установить на: <code>Windows</code>, <code>macOS</code>, <code>iOS</code>, <code>Android</code>, <code>Linux</code>, <code>FreeBSD</code>, <code>Raspberry Pi</code>, <code>Chrome OS</code>. В работе точно не хуже <code>Teamviewer'a</code>. Одним словом рекомендую попробовать!</p>
<blockquote>
<p>Пока не разобрался почему AnyDesk полностью не подхватывает мою тёмную тему GTK2, ниже на скриншоте это можно заметить. Но, как говорится, на ход поршней это не влияет…</p>
</blockquote>
<p>В <code>Debian</code> его можно установить по фэншую - из репозитория. Добавляем в наш источник пакетов репозиторий, добавляем ключ, обновляемся и устанавливаем программу:</p>
<hr />
<pre><code># wget -qO - https://keys.anydesk.com/repos/DEB-GPG-KEY | apt-key add -
# echo &quot;deb http://deb.anydesk.com/ all main&quot; &gt; /etc/apt/sources.list.d/anydesk-stable.list
# apt-get update
# apt-get install anydesk
</code></pre>
<hr />
<p>Запуск программы осуществляется командой <code>anydesk</code>.</p>
<p><a href="http://www.imagebam.com/image/f707371340444636"><img src="https://thumbs2.imagebam.com/d8/cb/1b/f707371340444636.jpg" alt="imagebam.com"></a></p>]]></description>
    <pubDate>Wed, 15 Apr 2020 00:00:00 UT</pubDate>
    <guid>https://chubaduba.github.io//posts/2020-04-15-1.html</guid>
    <dc:creator>ChubaDuba</dc:creator>
</item>
<item>
    <title>FFmpeg + Winff. Как перекодировать аудио дорожку видеофайла в формат MP3.</title>
    <link>https://chubaduba.github.io//posts/2020-04-12-1.html</link>
    <description><![CDATA[<p>Я, как и многие, в связи с переходом на цифровое телевидение, купил для своих старых телеков ТВ приставки. При выборе делал упор на качество сигнала, а на другие “навороты” особо не смотрел. Как известно, практически во всех этих приставках есть видео плеер, который позволяет смотреть видео с USB носителей. Но не все приставки умеют проигрывать видеофайлы, у которых звук записан в формате не <code>mp3</code>. Т.е. картинка есть, а звука нет.</p>
<p>Как же перекодировать в Debian отдельно аудио дорожку в формат mp3, а формат видео оставить без изменений?</p>
<p>Я попробовал два варианта. Первый - это программа <a href="http://avidemux.sourceforge.net/">Avidemux</a>. В Debian её можно найти, если подключить репозиторий <a href="http://www.deb-multimedia.org/">deb-multimedia</a>. Скажу сразу, что именно с моей задачей она справлялась нелучшим образом, а может я просто не осилил её. В готовом файле звук постоянно или отставал от видео, или наоборот - опережал. В настройках есть пункт, в котором можно указать в милисекундах время синхронизации. Но от чего это время зависит, я так и не понял. А если перекодировать многосерийный сериал и для каждого файла подбирать этот параметр, то это становится жутко не удобно.</p>
<p>Поэтому для себя я остановился на втором варианте - это <a href="https://packages.debian.org/stretch/ffmpeg">ffmpeg</a> и графическая оболочка для него <a href="https://packages.debian.org/stretch/winff">winff</a>. В репозитории есть два варианта оболочки: для <code>Qt</code> и <code>GTK2</code>. Я буду использовать второй. Устанавливаем:</p>
<hr />
<pre><code>$ sudo apt-get install winff-gtk2
</code></pre>
<hr />
<blockquote>
<p>Для работы с разными кодеками, они долны быть установлены у вас в системе. Например, для кодирования аудио в формат <code>mp3</code> должен быть установлен пакет <a href="https://packages.debian.org/stretch/lame">lame</a>.</p>
</blockquote>
<p>Запускаем редактор командой:</p>
<pre><code>winff-gtk2
</code></pre>
<figure>
<img src="https://images2.imagebam.com/19/16/ea/5c06ce1339910329.png" alt="" /><figcaption>Главное окно видео редактора Winnf</figcaption>
</figure>
<p>Чтобы при использовании редактора постоянно не вводить мудрёные команды для <code>ffmpeg</code>, существуют готовые настройки, так называемые <code>пресеты</code>, которые можно редактировать в соответствии с вашими задачами:</p>
<p><img src="https://images2.imagebam.com/9b/09/65/d79ed41339876707.png" /></p>
<figure>
<img src="https://images2.imagebam.com/dd/80/b4/be1a6a1339911770.png" alt="" /><figcaption>Окно редактирования пресетов</figcaption>
</figure>
<p>В категорию <code>Audio</code> я добавил два пресета: <code>AVI with MP3 audio</code> и <code>MKV with MP3 audio</code>:</p>
<p><img src="https://images2.imagebam.com/d5/52/01/795af61339912978.png" /></p>
<p>Отличаются они друг от друга только параметром <code>Расширение  выходного файла</code>, а параметр <code>Командная строка</code> у них одинаковый и имеет такой вид:</p>
<hr />
<pre><code>-vcodec copy -acodec libmp3lame -ar 44100 -ac 2 -ab 192k
</code></pre>
<hr />
<figure>
<img src="https://images2.imagebam.com/58/7e/4a/c25f501339914927.png" alt="" /><figcaption>Пресет “AVI with MP3 audio”</figcaption>
</figure>
<figure>
<img src="https://images2.imagebam.com/86/0f/ec/8e7da81339915463.png" alt="" /><figcaption>Пресет “MKV with MP3 audio”</figcaption>
</figure>
<p>Пресеты готовы, можно приступать к кодированию. Добавляем файл и в соответствии с его расширением выбераем пресет:</p>
<p><img src="https://images2.imagebam.com/58/c8/9b/44d7f31339917943.png" /></p>
<p>Ради интереса посмотрим в терминале какую звуковую дорожку имеет этот файл:</p>
<pre><code>chubaduba:~$ mediainfo video_1.mkv | sed -n &#39;/Audio/,$p&#39;
Audio
ID                      : 2
Format                  : AAC
Format/Info             : Advanced Audio Codec
Format profile          : LC
Codec ID                : A_AAC
Duration                : 49 min 23 s
Channel(s)              : 2 channels
Channel positions       : Front: L R
Sampling rate           : 48.0 kHz
Frame rate              : 46.875 FPS (1024 spf)
Compression mode        : Lossy
Delay relative to video : 9 ms
Default                 : Yes
Forced                  : No
 </code></pre>
<p>Нажимаем кнопку <code>Преобразовать</code> и ждём результат… В настройках можно выбрать с каким приоритетом будет проходить процесс кодирования. Отмечу, что при выбранном приоритете “Нормальный” <code>Winff</code> справляется с задачей быстрее, чем <code>Avidemux</code>.</p>
<p>Посмотрим характеристики аудио новоиспечённого файла:</p>
<pre><code>chubaduba:~/temp$ mediainfo video_1.mkv | sed -n &#39;/Audio/,$p&#39;
Audio
ID                      : 2
Format                  : MPEG Audio
Format version          : Version 1
Format profile          : Layer 3
Mode                    : Joint stereo
Mode extension          : MS Stereo
Codec ID                : A_MPEG/L3
Codec ID/Hint           : MP3
Duration                : 49 min 23 s
Bit rate mode           : Constant
Bit rate                : 192 kb/s
Channel(s)              : 2 channels
Sampling rate           : 44.1 kHz
Compression mode        : Lossy
Stream size             : 67.8 MiB (11%)
Writing library         : Lavc57.64.101 libmp3lame
Default                 : Yes
Forced                  : No
DURATION                : 00:49:23.843000000
</code></pre>
<p>Остаётся записать файл на флешку, воткнуть её в приставку, развалиться на диване и посмотреть наше видео :)</p>]]></description>
    <pubDate>Sun, 12 Apr 2020 00:00:00 UT</pubDate>
    <guid>https://chubaduba.github.io//posts/2020-04-12-1.html</guid>
    <dc:creator>ChubaDuba</dc:creator>
</item>
<item>
    <title>Сервис systemd для noip2.</title>
    <link>https://chubaduba.github.io//posts/2020-04-02-1.html</link>
    <description><![CDATA[<p>Создаём в <code>/etc/systemd/system</code> сервис с именем <code>noip2.service</code>:</p>
<hr />
<pre><code>[Unit]
Description=No-ip.com dynamic IP address updater
After=network.target
After=syslog.target

[Install]
WantedBy=multi-user.target
Alias=noip.service

[Service]
# Start main service
ExecStart=/usr/local/bin/noip2
Restart=always
Type=forking
</code></pre>
<hr />
<p>Обновляем сервисы, ставим новый сервис в автозагрузку, запускаем сервис:</p>
<pre><code>$ sudo systemctl daemon-reload
$ sudo systemctl enable noip2
$ sudo systemctl start noip2
</code></pre>]]></description>
    <pubDate>Thu, 02 Apr 2020 00:00:00 UT</pubDate>
    <guid>https://chubaduba.github.io//posts/2020-04-02-1.html</guid>
    <dc:creator>ChubaDuba</dc:creator>
</item>
<item>
    <title>Audacious Winamp v.1.x skin.</title>
    <link>https://chubaduba.github.io//posts/2020-03-16-1.html</link>
    <description><![CDATA[<p>Для любителей олдскульного интерфейса скин для аудио проигрывателя <code>Audacious</code> на основе скина Winamp v.1.x.<br />
Забрать можно <a href="https://www.dropbox.com/s/dqdtikyt0ir6qyh/winamp1_rus.tar.gz?dl=0">тут</a><br />
P.S. Использую на Audacious v.3.2 (GTK2)</p>
<p><img src="https://images2.imagebam.com/13/db/1f/a064521337266800.png" /></p>]]></description>
    <pubDate>Mon, 16 Mar 2020 00:00:00 UT</pubDate>
    <guid>https://chubaduba.github.io//posts/2020-03-16-1.html</guid>
    <dc:creator>ChubaDuba</dc:creator>
</item>
<item>
    <title>Rtorrent color patch.</title>
    <link>https://chubaduba.github.io//posts/2018-11-11-1.html</link>
    <description><![CDATA[<p>Патч, который будет описан ниже позволяет rtorrent’у отображать раздачи разными цветами, в зависимости от их статуса.</p>
<blockquote>
<p>Патч старый как г..но мамонта. Почему разработчики rtorrent’а не сделают это фишкой по умолчанию, остаётся загадкой.</p>
</blockquote>
<p>Непосредственно сам патч:</p>
<details>
<p><summary><code>rtorrent-0.9.6_color.patch</code></summary></p>
<hr />
<div class="sourceCode" id="cb1"><pre class="sourceCode php"><code class="sourceCode php"><span id="cb1-1"><a href="#cb1-1"></a>diff --git a/src/command_network.cc b/src/command_network.cc</span>
<span id="cb1-2"><a href="#cb1-2"></a>index c445c38..24ad5c0 <span class="dv">100644</span></span>
<span id="cb1-3"><a href="#cb1-3"></a>--- a/src/command_network.cc</span>
<span id="cb1-4"><a href="#cb1-4"></a>+++ b/src/command_network.cc</span>
<span id="cb1-5"><a href="#cb1-5"></a><span class="er">@@</span> <span class="dv">-241</span><span class="ot">,</span><span class="dv">6</span> +<span class="dv">241</span><span class="ot">,</span><span class="dv">26</span> <span class="er">@@</span> initialize_command_network<span class="ot">()</span> {</span>
<span id="cb1-6"><a href="#cb1-6"></a>   <span class="kw">CMD2_ANY</span>         <span class="ot">(</span><span class="st">&quot;strings.connection_type&quot;</span><span class="ot">,</span> tr1::bind<span class="ot">(</span>&amp;torrent::option_list_strings<span class="ot">,</span> torrent::<span class="kw">OPTION_CONNECTION_TYPE</span><span class="ot">));</span></span>
<span id="cb1-7"><a href="#cb1-7"></a>   <span class="kw">CMD2_ANY</span>         <span class="ot">(</span><span class="st">&quot;strings.encryption&quot;</span><span class="ot">,</span>      tr1::bind<span class="ot">(</span>&amp;torrent::option_list_strings<span class="ot">,</span> torrent::<span class="kw">OPTION_ENCRYPTION</span><span class="ot">));</span></span>
<span id="cb1-8"><a href="#cb1-8"></a> </span>
<span id="cb1-9"><a href="#cb1-9"></a>+  <span class="kw">CMD2_ANY</span>         <span class="ot">(</span><span class="st">&quot;colors.color_inactive_fg&quot;</span><span class="ot">,</span>       tr1::bind<span class="ot">(</span>&amp;ui::Root::get_color_inactive_fg<span class="ot">,</span>   control-&gt;ui<span class="ot">()));</span></span>
<span id="cb1-10"><a href="#cb1-10"></a>+  <span class="kw">CMD2_ANY_VALUE_V</span> <span class="ot">(</span><span class="st">&quot;colors.color_inactive_fg.set&quot;</span><span class="ot">,</span>   tr1::bind<span class="ot">(</span>&amp;ui::Root::set_color_inactive_fg<span class="ot">,</span>   control-&gt;ui<span class="ot">(),</span> tr1::placeholders::_2<span class="ot">));</span></span>
<span id="cb1-11"><a href="#cb1-11"></a>+  <span class="kw">CMD2_ANY</span>         <span class="ot">(</span><span class="st">&quot;colors.color_inactive_bg&quot;</span><span class="ot">,</span>       tr1::bind<span class="ot">(</span>&amp;ui::Root::get_color_inactive_bg<span class="ot">,</span>   control-&gt;ui<span class="ot">()));</span></span>
<span id="cb1-12"><a href="#cb1-12"></a>+  <span class="kw">CMD2_ANY_VALUE_V</span> <span class="ot">(</span><span class="st">&quot;colors.color_inactive_bg.set&quot;</span><span class="ot">,</span>   tr1::bind<span class="ot">(</span>&amp;ui::Root::set_color_inactive_bg<span class="ot">,</span>   control-&gt;ui<span class="ot">(),</span> tr1::placeholders::_2<span class="ot">));</span></span>
<span id="cb1-13"><a href="#cb1-13"></a>+  </span>
<span id="cb1-14"><a href="#cb1-14"></a>+  <span class="kw">CMD2_ANY</span>         <span class="ot">(</span><span class="st">&quot;colors.color_dead_fg&quot;</span><span class="ot">,</span>       tr1::bind<span class="ot">(</span>&amp;ui::Root::get_color_dead_fg<span class="ot">,</span>   control-&gt;ui<span class="ot">()));</span></span>
<span id="cb1-15"><a href="#cb1-15"></a>+  <span class="kw">CMD2_ANY_VALUE_V</span> <span class="ot">(</span><span class="st">&quot;colors.color_dead_fg.set&quot;</span><span class="ot">,</span>   tr1::bind<span class="ot">(</span>&amp;ui::Root::set_color_dead_fg<span class="ot">,</span>   control-&gt;ui<span class="ot">(),</span> tr1::placeholders::_2<span class="ot">));</span></span>
<span id="cb1-16"><a href="#cb1-16"></a>+  <span class="kw">CMD2_ANY</span>         <span class="ot">(</span><span class="st">&quot;colors.color_dead_bg&quot;</span><span class="ot">,</span>       tr1::bind<span class="ot">(</span>&amp;ui::Root::get_color_dead_bg<span class="ot">,</span>   control-&gt;ui<span class="ot">()));</span></span>
<span id="cb1-17"><a href="#cb1-17"></a>+  <span class="kw">CMD2_ANY_VALUE_V</span> <span class="ot">(</span><span class="st">&quot;colors.color_dead_bg.set&quot;</span><span class="ot">,</span>   tr1::bind<span class="ot">(</span>&amp;ui::Root::set_color_dead_bg<span class="ot">,</span>   control-&gt;ui<span class="ot">(),</span> tr1::placeholders::_2<span class="ot">));</span></span>
<span id="cb1-18"><a href="#cb1-18"></a>+</span>
<span id="cb1-19"><a href="#cb1-19"></a>+  <span class="kw">CMD2_ANY</span>         <span class="ot">(</span><span class="st">&quot;colors.color_active_fg&quot;</span><span class="ot">,</span>       tr1::bind<span class="ot">(</span>&amp;ui::Root::get_color_active_fg<span class="ot">,</span>   control-&gt;ui<span class="ot">()));</span></span>
<span id="cb1-20"><a href="#cb1-20"></a>+  <span class="kw">CMD2_ANY_VALUE_V</span> <span class="ot">(</span><span class="st">&quot;colors.color_active_fg.set&quot;</span><span class="ot">,</span>   tr1::bind<span class="ot">(</span>&amp;ui::Root::set_color_active_fg<span class="ot">,</span>   control-&gt;ui<span class="ot">(),</span> tr1::placeholders::_2<span class="ot">));</span></span>
<span id="cb1-21"><a href="#cb1-21"></a>+  <span class="kw">CMD2_ANY</span>         <span class="ot">(</span><span class="st">&quot;colors.color_active_bg&quot;</span><span class="ot">,</span>       tr1::bind<span class="ot">(</span>&amp;ui::Root::get_color_active_bg<span class="ot">,</span>   control-&gt;ui<span class="ot">()));</span></span>
<span id="cb1-22"><a href="#cb1-22"></a>+  <span class="kw">CMD2_ANY_VALUE_V</span> <span class="ot">(</span><span class="st">&quot;colors.color_active_bg.set&quot;</span><span class="ot">,</span>   tr1::bind<span class="ot">(</span>&amp;ui::Root::set_color_active_bg<span class="ot">,</span>   control-&gt;ui<span class="ot">(),</span> tr1::placeholders::_2<span class="ot">));</span></span>
<span id="cb1-23"><a href="#cb1-23"></a>+</span>
<span id="cb1-24"><a href="#cb1-24"></a>+  <span class="kw">CMD2_ANY</span>         <span class="ot">(</span><span class="st">&quot;colors.color_finished_fg&quot;</span><span class="ot">,</span>       tr1::bind<span class="ot">(</span>&amp;ui::Root::get_color_finished_fg<span class="ot">,</span>   control-&gt;ui<span class="ot">()));</span></span>
<span id="cb1-25"><a href="#cb1-25"></a>+  <span class="kw">CMD2_ANY_VALUE_V</span> <span class="ot">(</span><span class="st">&quot;colors.color_finished_fg.set&quot;</span><span class="ot">,</span>   tr1::bind<span class="ot">(</span>&amp;ui::Root::set_color_finished_fg<span class="ot">,</span>   control-&gt;ui<span class="ot">(),</span> tr1::placeholders::_2<span class="ot">));</span></span>
<span id="cb1-26"><a href="#cb1-26"></a>+  <span class="kw">CMD2_ANY</span>         <span class="ot">(</span><span class="st">&quot;colors.color_finished_bg&quot;</span><span class="ot">,</span>       tr1::bind<span class="ot">(</span>&amp;ui::Root::get_color_finished_bg<span class="ot">,</span>   control-&gt;ui<span class="ot">()));</span></span>
<span id="cb1-27"><a href="#cb1-27"></a>+  <span class="kw">CMD2_ANY_VALUE_V</span> <span class="ot">(</span><span class="st">&quot;colors.color_finished_bg.set&quot;</span><span class="ot">,</span>   tr1::bind<span class="ot">(</span>&amp;ui::Root::set_color_finished_bg<span class="ot">,</span>   control-&gt;ui<span class="ot">(),</span> tr1::placeholders::_2<span class="ot">));</span></span>
<span id="cb1-28"><a href="#cb1-28"></a>+</span>
<span id="cb1-29"><a href="#cb1-29"></a>   <span class="co">// CMD2_ANY_STRING  (&quot;encoding_list&quot;,    tr1::bind(&amp;apply_encoding_list, tr1::placeholders::_2));</span></span>
<span id="cb1-30"><a href="#cb1-30"></a>   <span class="kw">CMD2_ANY_STRING</span>  <span class="ot">(</span><span class="st">&quot;encoding.add&quot;</span><span class="ot">,</span> tr1::bind<span class="ot">(</span>&amp;apply_encoding_list<span class="ot">,</span> tr1::placeholders::_2<span class="ot">));</span></span>
<span id="cb1-31"><a href="#cb1-31"></a> </span>
<span id="cb1-32"><a href="#cb1-32"></a>diff --git a/src/display/canvas.cc b/src/display/canvas.cc</span>
<span id="cb1-33"><a href="#cb1-33"></a>index 31db4ad..<span class="fl">255e7</span>c3 <span class="dv">100644</span></span>
<span id="cb1-34"><a href="#cb1-34"></a>--- a/src/display/canvas.cc</span>
<span id="cb1-35"><a href="#cb1-35"></a>+++ b/src/display/canvas.cc</span>
<span id="cb1-36"><a href="#cb1-36"></a><span class="er">@@</span> <span class="dv">-99</span><span class="ot">,</span><span class="dv">6</span> +<span class="dv">99</span><span class="ot">,</span><span class="dv">12</span> <span class="er">@@</span> Canvas::initialize<span class="ot">()</span> {</span>
<span id="cb1-37"><a href="#cb1-37"></a>   m_isInitialized = <span class="kw">true</span><span class="ot">;</span></span>
<span id="cb1-38"><a href="#cb1-38"></a> </span>
<span id="cb1-39"><a href="#cb1-39"></a>   initscr<span class="ot">();</span></span>
<span id="cb1-40"><a href="#cb1-40"></a>+  start_color<span class="ot">();</span></span>
<span id="cb1-41"><a href="#cb1-41"></a>+  use_default_colors<span class="ot">();</span></span>
<span id="cb1-42"><a href="#cb1-42"></a>+  init_pair<span class="ot">(</span><span class="dv">4</span><span class="ot">,</span> <span class="dv">-1</span><span class="ot">,</span> <span class="dv">-1</span><span class="ot">);</span></span>
<span id="cb1-43"><a href="#cb1-43"></a>+  init_pair<span class="ot">(</span><span class="dv">3</span><span class="ot">,</span> <span class="dv">-1</span><span class="ot">,</span> <span class="dv">-1</span><span class="ot">);</span></span>
<span id="cb1-44"><a href="#cb1-44"></a>+  init_pair<span class="ot">(</span><span class="dv">2</span><span class="ot">,</span> <span class="dv">-1</span><span class="ot">,</span> <span class="dv">-1</span><span class="ot">);</span></span>
<span id="cb1-45"><a href="#cb1-45"></a>+  init_pair<span class="ot">(</span><span class="dv">1</span><span class="ot">,</span> <span class="dv">-1</span><span class="ot">,</span> <span class="dv">-1</span><span class="ot">);</span></span>
<span id="cb1-46"><a href="#cb1-46"></a>   raw<span class="ot">();</span></span>
<span id="cb1-47"><a href="#cb1-47"></a>   noecho<span class="ot">();</span></span>
<span id="cb1-48"><a href="#cb1-48"></a>   nodelay<span class="ot">(</span>stdscr<span class="ot">,</span> <span class="kw">TRUE</span><span class="ot">);</span></span>
<span id="cb1-49"><a href="#cb1-49"></a>diff --git a/src/display/window_download_list.cc b/src/display/window_download_list.cc</span>
<span id="cb1-50"><a href="#cb1-50"></a>index ead4ddd..ffd79c9 <span class="dv">100644</span></span>
<span id="cb1-51"><a href="#cb1-51"></a>--- a/src/display/window_download_list.cc</span>
<span id="cb1-52"><a href="#cb1-52"></a>+++ b/src/display/window_download_list.cc</span>
<span id="cb1-53"><a href="#cb1-53"></a><span class="er">@@</span> <span class="dv">-37</span><span class="ot">,</span><span class="dv">6</span> +<span class="dv">37</span><span class="ot">,</span><span class="dv">7</span> <span class="er">@@</span></span>
<span id="cb1-54"><a href="#cb1-54"></a> <span class="co">#include &quot;config.h&quot;</span></span>
<span id="cb1-55"><a href="#cb1-55"></a> </span>
<span id="cb1-56"><a href="#cb1-56"></a> <span class="co">#include &lt;rak/algorithm.h&gt;</span></span>
<span id="cb1-57"><a href="#cb1-57"></a>+<span class="co">#include &lt;torrent/rate.h&gt;</span></span>
<span id="cb1-58"><a href="#cb1-58"></a> </span>
<span id="cb1-59"><a href="#cb1-59"></a> <span class="co">#include &quot;core/download.h&quot;</span></span>
<span id="cb1-60"><a href="#cb1-60"></a> <span class="co">#include &quot;core/view.h&quot;</span></span>
<span id="cb1-61"><a href="#cb1-61"></a><span class="er">@@</span> <span class="dv">-104</span><span class="ot">,</span><span class="dv">9</span> +<span class="dv">105</span><span class="ot">,</span><span class="dv">41</span> <span class="er">@@</span> WindowDownloadList::redraw<span class="ot">()</span> {</span>
<span id="cb1-62"><a href="#cb1-62"></a>     char buffer<span class="ot">[</span>m_canvas-&gt;width<span class="ot">()</span> + <span class="dv">1</span><span class="ot">];</span></span>
<span id="cb1-63"><a href="#cb1-63"></a>     char* last = buffer + m_canvas-&gt;width<span class="ot">()</span> - <span class="dv">2</span> + <span class="dv">1</span><span class="ot">;</span></span>
<span id="cb1-64"><a href="#cb1-64"></a> </span>
<span id="cb1-65"><a href="#cb1-65"></a>+    <span class="co">/*</span></span>
<span id="cb1-66"><a href="#cb1-66"></a><span class="co">+    There are four states where colors are applied:</span></span>
<span id="cb1-67"><a href="#cb1-67"></a><span class="co">+    1 inactive  # If inactive, e.g. user stopped down/upload</span></span>
<span id="cb1-68"><a href="#cb1-68"></a><span class="co">+    2 dead      # If active but no down/upload</span></span>
<span id="cb1-69"><a href="#cb1-69"></a><span class="co">+    3 active    # If active and download</span></span>
<span id="cb1-70"><a href="#cb1-70"></a><span class="co">+    4 finished  # If finished</span></span>
<span id="cb1-71"><a href="#cb1-71"></a><span class="co">+    */</span></span>
<span id="cb1-72"><a href="#cb1-72"></a>+</span>
<span id="cb1-73"><a href="#cb1-73"></a>     print_download_title<span class="ot">(</span>buffer<span class="ot">,</span> last<span class="ot">,</span> *<span class="fu">range</span>.first<span class="ot">);</span></span>
<span id="cb1-74"><a href="#cb1-74"></a>-    m_canvas-&gt;<span class="kw">print</span><span class="ot">(</span><span class="dv">0</span><span class="ot">,</span> <span class="fu">pos</span>++<span class="ot">,</span> <span class="st">&quot;%c %s&quot;</span><span class="ot">,</span> <span class="fu">range</span>.first == m_view-&gt;focus<span class="ot">()</span> <span class="ot">?</span> <span class="st">&#39;*&#39;</span> <span class="ot">:</span> <span class="st">&#39; &#39;</span><span class="ot">,</span> buffer<span class="ot">);</span></span>
<span id="cb1-75"><a href="#cb1-75"></a>-    </span>
<span id="cb1-76"><a href="#cb1-76"></a>+    m_canvas-&gt;<span class="kw">print</span><span class="ot">(</span><span class="dv">0</span><span class="ot">,</span> <span class="fu">pos</span><span class="ot">,</span> <span class="st">&quot;%c %s&quot;</span><span class="ot">,</span> <span class="fu">range</span>.first == m_view-&gt;focus<span class="ot">()</span> <span class="ot">?</span> <span class="st">&#39;*&#39;</span> <span class="ot">:</span> <span class="st">&#39; &#39;</span><span class="ot">,</span> buffer<span class="ot">);</span></span>
<span id="cb1-77"><a href="#cb1-77"></a>+    <span class="kw">if</span><span class="ot">(</span> <span class="ot">(</span>*<span class="fu">range</span>.first<span class="ot">)</span>-&gt;is_done<span class="ot">()</span> <span class="ot">)</span> {</span>
<span id="cb1-78"><a href="#cb1-78"></a>+      <span class="kw">if</span><span class="ot">(</span> <span class="ot">(</span>*<span class="fu">range</span>.first<span class="ot">)</span>-&gt;download<span class="ot">()</span>-&gt;info<span class="ot">()</span>-&gt;up_rate<span class="ot">()</span>-&gt;rate<span class="ot">()</span> != <span class="dv">0</span> <span class="ot">)</span> {</span>
<span id="cb1-79"><a href="#cb1-79"></a>+      m_canvas-&gt;set_attr<span class="ot">(</span><span class="dv">0</span><span class="ot">,</span> <span class="fu">pos</span><span class="ot">,</span> m_canvas-&gt;width<span class="ot">()</span>-<span class="dv">1</span><span class="ot">,</span> <span class="kw">A_BOLD</span><span class="ot">,</span> <span class="dv">4</span><span class="ot">);</span>       <span class="co">// Finished and uploading</span></span>
<span id="cb1-80"><a href="#cb1-80"></a>+      } <span class="kw">else</span> {</span>
<span id="cb1-81"><a href="#cb1-81"></a>+      m_canvas-&gt;set_attr<span class="ot">(</span><span class="dv">0</span><span class="ot">,</span> <span class="fu">pos</span><span class="ot">,</span> m_canvas-&gt;width<span class="ot">()</span>-<span class="dv">1</span><span class="ot">,</span> <span class="kw">A_NORMAL</span><span class="ot">,</span> <span class="dv">4</span><span class="ot">);</span>     <span class="co">// Finished</span></span>
<span id="cb1-82"><a href="#cb1-82"></a>+      }</span>
<span id="cb1-83"><a href="#cb1-83"></a>+    } <span class="kw">else</span> <span class="kw">if</span><span class="ot">(</span> <span class="ot">(</span>*<span class="fu">range</span>.first<span class="ot">)</span>-&gt;is_active<span class="ot">()</span> <span class="ot">)</span> {</span>
<span id="cb1-84"><a href="#cb1-84"></a>+      <span class="kw">if</span><span class="ot">(</span> <span class="ot">(</span>*<span class="fu">range</span>.first<span class="ot">)</span>-&gt;download<span class="ot">()</span>-&gt;info<span class="ot">()</span>-&gt;down_rate<span class="ot">()</span>-&gt;rate<span class="ot">()</span> != <span class="dv">0</span> <span class="ot">)</span> {</span>
<span id="cb1-85"><a href="#cb1-85"></a>+        <span class="kw">if</span><span class="ot">(</span> <span class="ot">(</span>*<span class="fu">range</span>.first<span class="ot">)</span>-&gt;download<span class="ot">()</span>-&gt;info<span class="ot">()</span>-&gt;up_rate<span class="ot">()</span>-&gt;rate<span class="ot">()</span> != <span class="dv">0</span> <span class="ot">)</span> {</span>
<span id="cb1-86"><a href="#cb1-86"></a>+          m_canvas-&gt;set_attr<span class="ot">(</span><span class="dv">0</span><span class="ot">,</span> <span class="fu">pos</span><span class="ot">,</span> m_canvas-&gt;width<span class="ot">()</span>-<span class="dv">1</span><span class="ot">,</span> <span class="kw">A_BOLD</span><span class="ot">,</span> <span class="dv">3</span><span class="ot">);</span>     <span class="co">// Active and uploading</span></span>
<span id="cb1-87"><a href="#cb1-87"></a>+        } <span class="kw">else</span> {</span>
<span id="cb1-88"><a href="#cb1-88"></a>+          m_canvas-&gt;set_attr<span class="ot">(</span><span class="dv">0</span><span class="ot">,</span> <span class="fu">pos</span><span class="ot">,</span> m_canvas-&gt;width<span class="ot">()</span>-<span class="dv">1</span><span class="ot">,</span> <span class="kw">A_NORMAL</span><span class="ot">,</span> <span class="dv">3</span><span class="ot">);</span>   <span class="co">// Active</span></span>
<span id="cb1-89"><a href="#cb1-89"></a>+        }</span>
<span id="cb1-90"><a href="#cb1-90"></a>+      } <span class="kw">else</span> {</span>
<span id="cb1-91"><a href="#cb1-91"></a>+        <span class="kw">if</span><span class="ot">(</span> <span class="ot">(</span>*<span class="fu">range</span>.first<span class="ot">)</span>-&gt;download<span class="ot">()</span>-&gt;info<span class="ot">()</span>-&gt;up_rate<span class="ot">()</span>-&gt;rate<span class="ot">()</span> != <span class="dv">0</span> <span class="ot">)</span> {</span>
<span id="cb1-92"><a href="#cb1-92"></a>+          m_canvas-&gt;set_attr<span class="ot">(</span><span class="dv">0</span><span class="ot">,</span> <span class="fu">pos</span><span class="ot">,</span> m_canvas-&gt;width<span class="ot">()</span>-<span class="dv">1</span><span class="ot">,</span> <span class="kw">A_BOLD</span><span class="ot">,</span> <span class="dv">2</span><span class="ot">);</span>     <span class="co">// Dead but still uploading</span></span>
<span id="cb1-93"><a href="#cb1-93"></a>+        } <span class="kw">else</span> {</span>
<span id="cb1-94"><a href="#cb1-94"></a>+          m_canvas-&gt;set_attr<span class="ot">(</span><span class="dv">0</span><span class="ot">,</span> <span class="fu">pos</span><span class="ot">,</span> m_canvas-&gt;width<span class="ot">()</span>-<span class="dv">1</span><span class="ot">,</span> <span class="kw">A_NORMAL</span><span class="ot">,</span> <span class="dv">2</span><span class="ot">);</span>   <span class="co">// Dead</span></span>
<span id="cb1-95"><a href="#cb1-95"></a>+        }</span>
<span id="cb1-96"><a href="#cb1-96"></a>+      }</span>
<span id="cb1-97"><a href="#cb1-97"></a>+    } <span class="kw">else</span> {</span>
<span id="cb1-98"><a href="#cb1-98"></a>+      m_canvas-&gt;set_attr<span class="ot">(</span><span class="dv">0</span><span class="ot">,</span> <span class="fu">pos</span><span class="ot">,</span> m_canvas-&gt;width<span class="ot">()</span>-<span class="dv">1</span><span class="ot">,</span> <span class="kw">A_NORMAL</span><span class="ot">,</span> <span class="dv">1</span><span class="ot">);</span>     <span class="co">// Inactive</span></span>
<span id="cb1-99"><a href="#cb1-99"></a>+    }</span>
<span id="cb1-100"><a href="#cb1-100"></a>+    <span class="fu">pos</span>++<span class="ot">;</span></span>
<span id="cb1-101"><a href="#cb1-101"></a>+</span>
<span id="cb1-102"><a href="#cb1-102"></a>     print_download_info<span class="ot">(</span>buffer<span class="ot">,</span> last<span class="ot">,</span> *<span class="fu">range</span>.first<span class="ot">);</span></span>
<span id="cb1-103"><a href="#cb1-103"></a>     m_canvas-&gt;<span class="kw">print</span><span class="ot">(</span><span class="dv">0</span><span class="ot">,</span> <span class="fu">pos</span>++<span class="ot">,</span> <span class="st">&quot;%c %s&quot;</span><span class="ot">,</span> <span class="fu">range</span>.first == m_view-&gt;focus<span class="ot">()</span> <span class="ot">?</span> <span class="st">&#39;*&#39;</span> <span class="ot">:</span> <span class="st">&#39; &#39;</span><span class="ot">,</span> buffer<span class="ot">);</span></span>
<span id="cb1-104"><a href="#cb1-104"></a> </span>
<span id="cb1-105"><a href="#cb1-105"></a><span class="er">@@</span> <span class="dv">-114</span><span class="ot">,</span><span class="dv">7</span> +<span class="dv">147</span><span class="ot">,</span><span class="dv">83</span> <span class="er">@@</span> WindowDownloadList::redraw<span class="ot">()</span> {</span>
<span id="cb1-106"><a href="#cb1-106"></a>     m_canvas-&gt;<span class="kw">print</span><span class="ot">(</span><span class="dv">0</span><span class="ot">,</span> <span class="fu">pos</span>++<span class="ot">,</span> <span class="st">&quot;%c %s&quot;</span><span class="ot">,</span> <span class="fu">range</span>.first == m_view-&gt;focus<span class="ot">()</span> <span class="ot">?</span> <span class="st">&#39;*&#39;</span> <span class="ot">:</span> <span class="st">&#39; &#39;</span><span class="ot">,</span> buffer<span class="ot">);</span></span>
<span id="cb1-107"><a href="#cb1-107"></a> </span>
<span id="cb1-108"><a href="#cb1-108"></a>     ++<span class="fu">range</span>.first<span class="ot">;</span></span>
<span id="cb1-109"><a href="#cb1-109"></a>-  }    </span>
<span id="cb1-110"><a href="#cb1-110"></a>+  }</span>
<span id="cb1-111"><a href="#cb1-111"></a>+}</span>
<span id="cb1-112"><a href="#cb1-112"></a>+</span>
<span id="cb1-113"><a href="#cb1-113"></a>+<span class="co">// Inactive</span></span>
<span id="cb1-114"><a href="#cb1-114"></a>+<span class="kw">void</span></span>
<span id="cb1-115"><a href="#cb1-115"></a>+WindowDownloadList::set_color_inactive_fg<span class="ot">(</span>int64_t color<span class="ot">)</span> {</span>
<span id="cb1-116"><a href="#cb1-116"></a>+  short fg<span class="ot">,</span> bg<span class="ot">;</span></span>
<span id="cb1-117"><a href="#cb1-117"></a>+  pair_content<span class="ot">(</span><span class="dv">1</span><span class="ot">,</span> &amp;fg<span class="ot">,</span> &amp;bg<span class="ot">);</span></span>
<span id="cb1-118"><a href="#cb1-118"></a>+  <span class="kw">if</span><span class="ot">(</span> color &lt; <span class="dv">0</span> <span class="ot">)</span> color = <span class="dv">-1</span><span class="ot">;</span></span>
<span id="cb1-119"><a href="#cb1-119"></a>+  color = color % <span class="dv">8</span><span class="ot">;</span></span>
<span id="cb1-120"><a href="#cb1-120"></a>+  init_pair<span class="ot">(</span><span class="dv">1</span><span class="ot">,</span> <span class="ot">(</span>short<span class="ot">)</span>color<span class="ot">,</span> bg<span class="ot">);</span></span>
<span id="cb1-121"><a href="#cb1-121"></a>+}</span>
<span id="cb1-122"><a href="#cb1-122"></a>+</span>
<span id="cb1-123"><a href="#cb1-123"></a>+<span class="kw">void</span></span>
<span id="cb1-124"><a href="#cb1-124"></a>+WindowDownloadList::set_color_inactive_bg<span class="ot">(</span>int64_t color<span class="ot">)</span> {</span>
<span id="cb1-125"><a href="#cb1-125"></a>+  short fg<span class="ot">,</span> bg<span class="ot">;</span></span>
<span id="cb1-126"><a href="#cb1-126"></a>+  pair_content<span class="ot">(</span><span class="dv">1</span><span class="ot">,</span> &amp;fg<span class="ot">,</span> &amp;bg<span class="ot">);</span></span>
<span id="cb1-127"><a href="#cb1-127"></a>+  <span class="kw">if</span><span class="ot">(</span> color &lt; <span class="dv">0</span> <span class="ot">)</span> color = <span class="dv">-1</span><span class="ot">;</span></span>
<span id="cb1-128"><a href="#cb1-128"></a>+  color = color % <span class="dv">8</span><span class="ot">;</span></span>
<span id="cb1-129"><a href="#cb1-129"></a>+  init_pair<span class="ot">(</span><span class="dv">1</span><span class="ot">,</span> fg<span class="ot">,</span> <span class="ot">(</span>short<span class="ot">)</span>color<span class="ot">);</span></span>
<span id="cb1-130"><a href="#cb1-130"></a>+}</span>
<span id="cb1-131"><a href="#cb1-131"></a>+</span>
<span id="cb1-132"><a href="#cb1-132"></a>+<span class="co">// Dead</span></span>
<span id="cb1-133"><a href="#cb1-133"></a>+<span class="kw">void</span></span>
<span id="cb1-134"><a href="#cb1-134"></a>+WindowDownloadList::set_color_dead_fg<span class="ot">(</span>int64_t color<span class="ot">)</span> {</span>
<span id="cb1-135"><a href="#cb1-135"></a>+  short fg<span class="ot">,</span> bg<span class="ot">;</span></span>
<span id="cb1-136"><a href="#cb1-136"></a>+  pair_content<span class="ot">(</span><span class="dv">2</span><span class="ot">,</span> &amp;fg<span class="ot">,</span> &amp;bg<span class="ot">);</span></span>
<span id="cb1-137"><a href="#cb1-137"></a>+  <span class="kw">if</span><span class="ot">(</span> color &lt; <span class="dv">0</span> <span class="ot">)</span> color = <span class="dv">-1</span><span class="ot">;</span></span>
<span id="cb1-138"><a href="#cb1-138"></a>+  color = color % <span class="dv">8</span><span class="ot">;</span></span>
<span id="cb1-139"><a href="#cb1-139"></a>+  init_pair<span class="ot">(</span><span class="dv">2</span><span class="ot">,</span> <span class="ot">(</span>short<span class="ot">)</span>color<span class="ot">,</span> bg<span class="ot">);</span></span>
<span id="cb1-140"><a href="#cb1-140"></a>+}</span>
<span id="cb1-141"><a href="#cb1-141"></a>+</span>
<span id="cb1-142"><a href="#cb1-142"></a>+<span class="kw">void</span></span>
<span id="cb1-143"><a href="#cb1-143"></a>+WindowDownloadList::set_color_dead_bg<span class="ot">(</span>int64_t color<span class="ot">)</span> {</span>
<span id="cb1-144"><a href="#cb1-144"></a>+  short fg<span class="ot">,</span> bg<span class="ot">;</span></span>
<span id="cb1-145"><a href="#cb1-145"></a>+  pair_content<span class="ot">(</span><span class="dv">2</span><span class="ot">,</span> &amp;fg<span class="ot">,</span> &amp;bg<span class="ot">);</span></span>
<span id="cb1-146"><a href="#cb1-146"></a>+  <span class="kw">if</span><span class="ot">(</span> color &lt; <span class="dv">0</span> <span class="ot">)</span> color = <span class="dv">-1</span><span class="ot">;</span></span>
<span id="cb1-147"><a href="#cb1-147"></a>+  color = color % <span class="dv">8</span><span class="ot">;</span></span>
<span id="cb1-148"><a href="#cb1-148"></a>+  init_pair<span class="ot">(</span><span class="dv">2</span><span class="ot">,</span> fg<span class="ot">,</span> <span class="ot">(</span>short<span class="ot">)</span>color<span class="ot">);</span></span>
<span id="cb1-149"><a href="#cb1-149"></a>+}</span>
<span id="cb1-150"><a href="#cb1-150"></a>+</span>
<span id="cb1-151"><a href="#cb1-151"></a>+<span class="co">// Active</span></span>
<span id="cb1-152"><a href="#cb1-152"></a>+<span class="kw">void</span></span>
<span id="cb1-153"><a href="#cb1-153"></a>+WindowDownloadList::set_color_active_fg<span class="ot">(</span>int64_t color<span class="ot">)</span> {</span>
<span id="cb1-154"><a href="#cb1-154"></a>+  short fg<span class="ot">,</span> bg<span class="ot">;</span></span>
<span id="cb1-155"><a href="#cb1-155"></a>+  pair_content<span class="ot">(</span><span class="dv">3</span><span class="ot">,</span> &amp;fg<span class="ot">,</span> &amp;bg<span class="ot">);</span></span>
<span id="cb1-156"><a href="#cb1-156"></a>+  <span class="kw">if</span><span class="ot">(</span> color &lt; <span class="dv">0</span> <span class="ot">)</span> color = <span class="dv">-1</span><span class="ot">;</span></span>
<span id="cb1-157"><a href="#cb1-157"></a>+  color = color % <span class="dv">8</span><span class="ot">;</span></span>
<span id="cb1-158"><a href="#cb1-158"></a>+  init_pair<span class="ot">(</span><span class="dv">3</span><span class="ot">,</span> <span class="ot">(</span>short<span class="ot">)</span>color<span class="ot">,</span> bg<span class="ot">);</span></span>
<span id="cb1-159"><a href="#cb1-159"></a>+}</span>
<span id="cb1-160"><a href="#cb1-160"></a>+</span>
<span id="cb1-161"><a href="#cb1-161"></a>+<span class="kw">void</span></span>
<span id="cb1-162"><a href="#cb1-162"></a>+WindowDownloadList::set_color_active_bg<span class="ot">(</span>int64_t color<span class="ot">)</span> {</span>
<span id="cb1-163"><a href="#cb1-163"></a>+  short fg<span class="ot">,</span> bg<span class="ot">;</span></span>
<span id="cb1-164"><a href="#cb1-164"></a>+  pair_content<span class="ot">(</span><span class="dv">3</span><span class="ot">,</span> &amp;fg<span class="ot">,</span> &amp;bg<span class="ot">);</span></span>
<span id="cb1-165"><a href="#cb1-165"></a>+  <span class="kw">if</span><span class="ot">(</span> color &lt; <span class="dv">0</span> <span class="ot">)</span> color = <span class="dv">-1</span><span class="ot">;</span></span>
<span id="cb1-166"><a href="#cb1-166"></a>+  color = color % <span class="dv">8</span><span class="ot">;</span></span>
<span id="cb1-167"><a href="#cb1-167"></a>+  init_pair<span class="ot">(</span><span class="dv">3</span><span class="ot">,</span> fg<span class="ot">,</span> <span class="ot">(</span>short<span class="ot">)</span>color<span class="ot">);</span></span>
<span id="cb1-168"><a href="#cb1-168"></a>+}</span>
<span id="cb1-169"><a href="#cb1-169"></a>+</span>
<span id="cb1-170"><a href="#cb1-170"></a>+<span class="co">// Finished</span></span>
<span id="cb1-171"><a href="#cb1-171"></a>+<span class="kw">void</span></span>
<span id="cb1-172"><a href="#cb1-172"></a>+WindowDownloadList::set_color_finished_fg<span class="ot">(</span>int64_t color<span class="ot">)</span> {</span>
<span id="cb1-173"><a href="#cb1-173"></a>+  short fg<span class="ot">,</span> bg<span class="ot">;</span></span>
<span id="cb1-174"><a href="#cb1-174"></a>+  pair_content<span class="ot">(</span><span class="dv">4</span><span class="ot">,</span> &amp;fg<span class="ot">,</span> &amp;bg<span class="ot">);</span></span>
<span id="cb1-175"><a href="#cb1-175"></a>+  <span class="kw">if</span><span class="ot">(</span> color &lt; <span class="dv">0</span> <span class="ot">)</span> color = <span class="dv">-1</span><span class="ot">;</span></span>
<span id="cb1-176"><a href="#cb1-176"></a>+  color = color % <span class="dv">8</span><span class="ot">;</span></span>
<span id="cb1-177"><a href="#cb1-177"></a>+  init_pair<span class="ot">(</span><span class="dv">4</span><span class="ot">,</span> <span class="ot">(</span>short<span class="ot">)</span>color<span class="ot">,</span> bg<span class="ot">);</span></span>
<span id="cb1-178"><a href="#cb1-178"></a>+}</span>
<span id="cb1-179"><a href="#cb1-179"></a>+</span>
<span id="cb1-180"><a href="#cb1-180"></a>+<span class="kw">void</span></span>
<span id="cb1-181"><a href="#cb1-181"></a>+WindowDownloadList::set_color_finished_bg<span class="ot">(</span>int64_t color<span class="ot">)</span> {</span>
<span id="cb1-182"><a href="#cb1-182"></a>+  short fg<span class="ot">,</span> bg<span class="ot">;</span></span>
<span id="cb1-183"><a href="#cb1-183"></a>+  pair_content<span class="ot">(</span><span class="dv">4</span><span class="ot">,</span> &amp;fg<span class="ot">,</span> &amp;bg<span class="ot">);</span></span>
<span id="cb1-184"><a href="#cb1-184"></a>+  <span class="kw">if</span><span class="ot">(</span> color &lt; <span class="dv">0</span> <span class="ot">)</span> color = <span class="dv">-1</span><span class="ot">;</span></span>
<span id="cb1-185"><a href="#cb1-185"></a>+  color = color % <span class="dv">8</span><span class="ot">;</span></span>
<span id="cb1-186"><a href="#cb1-186"></a>+  init_pair<span class="ot">(</span><span class="dv">4</span><span class="ot">,</span> fg<span class="ot">,</span> <span class="ot">(</span>short<span class="ot">)</span>color<span class="ot">);</span></span>
<span id="cb1-187"><a href="#cb1-187"></a> }</span>
<span id="cb1-188"><a href="#cb1-188"></a> </span>
<span id="cb1-189"><a href="#cb1-189"></a> }</span>
<span id="cb1-190"><a href="#cb1-190"></a>diff --git a/src/display/window_download_list.h b/src/display/window_download_list.h</span>
<span id="cb1-191"><a href="#cb1-191"></a>index <span class="fl">8e15</span>cac..4551a47 <span class="dv">100644</span></span>
<span id="cb1-192"><a href="#cb1-192"></a>--- a/src/display/window_download_list.h</span>
<span id="cb1-193"><a href="#cb1-193"></a>+++ b/src/display/window_download_list.h</span>
<span id="cb1-194"><a href="#cb1-194"></a><span class="er">@@</span> <span class="dv">-55</span><span class="ot">,</span><span class="dv">6</span> +<span class="dv">55</span><span class="ot">,</span><span class="dv">15</span> <span class="er">@@</span> <span class="kw">public</span>:</span>
<span id="cb1-195"><a href="#cb1-195"></a> </span>
<span id="cb1-196"><a href="#cb1-196"></a>   <span class="kw">void</span>                set_view<span class="ot">(</span>core::View* l<span class="ot">);</span></span>
<span id="cb1-197"><a href="#cb1-197"></a> </span>
<span id="cb1-198"><a href="#cb1-198"></a>+  <span class="kw">void</span>                set_color_inactive_fg<span class="ot">(</span>int64_t color<span class="ot">);</span></span>
<span id="cb1-199"><a href="#cb1-199"></a>+  <span class="kw">void</span>                set_color_inactive_bg<span class="ot">(</span>int64_t color<span class="ot">);</span></span>
<span id="cb1-200"><a href="#cb1-200"></a>+  <span class="kw">void</span>                set_color_dead_fg<span class="ot">(</span>int64_t color<span class="ot">);</span></span>
<span id="cb1-201"><a href="#cb1-201"></a>+  <span class="kw">void</span>                set_color_dead_bg<span class="ot">(</span>int64_t color<span class="ot">);</span></span>
<span id="cb1-202"><a href="#cb1-202"></a>+  <span class="kw">void</span>                set_color_active_fg<span class="ot">(</span>int64_t color<span class="ot">);</span></span>
<span id="cb1-203"><a href="#cb1-203"></a>+  <span class="kw">void</span>                set_color_active_bg<span class="ot">(</span>int64_t color<span class="ot">);</span></span>
<span id="cb1-204"><a href="#cb1-204"></a>+  <span class="kw">void</span>                set_color_finished_fg<span class="ot">(</span>int64_t color<span class="ot">);</span></span>
<span id="cb1-205"><a href="#cb1-205"></a>+  <span class="kw">void</span>                set_color_finished_bg<span class="ot">(</span>int64_t color<span class="ot">);</span></span>
<span id="cb1-206"><a href="#cb1-206"></a>+</span>
<span id="cb1-207"><a href="#cb1-207"></a> <span class="kw">private</span>:</span>
<span id="cb1-208"><a href="#cb1-208"></a>   core::View*         m_view<span class="ot">;</span></span>
<span id="cb1-209"><a href="#cb1-209"></a> </span>
<span id="cb1-210"><a href="#cb1-210"></a>diff --git a/src/main.cc b/src/main.cc</span>
<span id="cb1-211"><a href="#cb1-211"></a>index <span class="fl">5e826</span>bb..44faa21 <span class="dv">100644</span></span>
<span id="cb1-212"><a href="#cb1-212"></a>--- a/src/main.cc</span>
<span id="cb1-213"><a href="#cb1-213"></a>+++ b/src/main.cc</span>
<span id="cb1-214"><a href="#cb1-214"></a><span class="er">@@</span> <span class="dv">-388</span><span class="ot">,</span><span class="dv">6</span> +<span class="dv">388</span><span class="ot">,</span><span class="dv">15</span> <span class="er">@@</span> main<span class="ot">(</span><span class="kw">int</span> argc<span class="ot">,</span> char** argv<span class="ot">)</span> {</span>
<span id="cb1-215"><a href="#cb1-215"></a>     <span class="kw">CMD2_REDIRECT</span>        <span class="ot">(</span><span class="st">&quot;ip&quot;</span><span class="ot">,</span>         <span class="st">&quot;network.local_address.set&quot;</span><span class="ot">);</span></span>
<span id="cb1-216"><a href="#cb1-216"></a>     <span class="kw">CMD2_REDIRECT</span>        <span class="ot">(</span><span class="st">&quot;port_range&quot;</span><span class="ot">,</span> <span class="st">&quot;network.port_range.set&quot;</span><span class="ot">);</span></span>
<span id="cb1-217"><a href="#cb1-217"></a> </span>
<span id="cb1-218"><a href="#cb1-218"></a>+    <span class="kw">CMD2_REDIRECT</span>       <span class="ot">(</span><span class="st">&quot;color_inactive_fg&quot;</span><span class="ot">,</span> <span class="st">&quot;colors.color_inactive_fg.set&quot;</span><span class="ot">);</span></span>
<span id="cb1-219"><a href="#cb1-219"></a>+    <span class="kw">CMD2_REDIRECT</span>       <span class="ot">(</span><span class="st">&quot;color_inactive_bg&quot;</span><span class="ot">,</span> <span class="st">&quot;colors.color_inactive_bg.set&quot;</span><span class="ot">);</span></span>
<span id="cb1-220"><a href="#cb1-220"></a>+    <span class="kw">CMD2_REDIRECT</span>       <span class="ot">(</span><span class="st">&quot;color_dead_fg&quot;</span><span class="ot">,</span>     <span class="st">&quot;colors.color_dead_fg.set&quot;</span><span class="ot">);</span></span>
<span id="cb1-221"><a href="#cb1-221"></a>+    <span class="kw">CMD2_REDIRECT</span>       <span class="ot">(</span><span class="st">&quot;color_dead_bg&quot;</span><span class="ot">,</span>     <span class="st">&quot;colors.color_dead_bg.set&quot;</span><span class="ot">);</span></span>
<span id="cb1-222"><a href="#cb1-222"></a>+    <span class="kw">CMD2_REDIRECT</span>       <span class="ot">(</span><span class="st">&quot;color_active_fg&quot;</span><span class="ot">,</span>   <span class="st">&quot;colors.color_active_fg.set&quot;</span><span class="ot">);</span></span>
<span id="cb1-223"><a href="#cb1-223"></a>+    <span class="kw">CMD2_REDIRECT</span>       <span class="ot">(</span><span class="st">&quot;color_active_bg&quot;</span><span class="ot">,</span>   <span class="st">&quot;colors.color_active_bg.set&quot;</span><span class="ot">);</span></span>
<span id="cb1-224"><a href="#cb1-224"></a>+    <span class="kw">CMD2_REDIRECT</span>       <span class="ot">(</span><span class="st">&quot;color_finished_fg&quot;</span><span class="ot">,</span> <span class="st">&quot;colors.color_finished_fg.set&quot;</span><span class="ot">);</span></span>
<span id="cb1-225"><a href="#cb1-225"></a>+    <span class="kw">CMD2_REDIRECT</span>       <span class="ot">(</span><span class="st">&quot;color_finished_bg&quot;</span><span class="ot">,</span> <span class="st">&quot;colors.color_finished_bg.set&quot;</span><span class="ot">);</span></span>
<span id="cb1-226"><a href="#cb1-226"></a>+</span>
<span id="cb1-227"><a href="#cb1-227"></a>     <span class="kw">CMD2_REDIRECT_GENERIC</span><span class="ot">(</span><span class="st">&quot;dht&quot;</span><span class="ot">,</span>      <span class="st">&quot;dht.mode.set&quot;</span><span class="ot">);</span></span>
<span id="cb1-228"><a href="#cb1-228"></a>     <span class="kw">CMD2_REDIRECT_GENERIC</span><span class="ot">(</span><span class="st">&quot;dht_port&quot;</span><span class="ot">,</span> <span class="st">&quot;dht.port.set&quot;</span><span class="ot">);</span></span>
<span id="cb1-229"><a href="#cb1-229"></a> </span>
<span id="cb1-230"><a href="#cb1-230"></a>diff --git a/src/ui/download_list.cc b/src/ui/download_list.cc</span>
<span id="cb1-231"><a href="#cb1-231"></a>index e3abc9a..7dc7469 <span class="dv">100644</span></span>
<span id="cb1-232"><a href="#cb1-232"></a>--- a/src/ui/download_list.cc</span>
<span id="cb1-233"><a href="#cb1-233"></a>+++ b/src/ui/download_list.cc</span>
<span id="cb1-234"><a href="#cb1-234"></a><span class="er">@@</span> <span class="dv">-136</span><span class="ot">,</span><span class="dv">6</span> +<span class="dv">136</span><span class="ot">,</span><span class="dv">11</span> <span class="er">@@</span> DownloadList::unfocus_download<span class="ot">(</span>core::Download* d<span class="ot">)</span> {</span>
<span id="cb1-235"><a href="#cb1-235"></a>   current_view<span class="ot">()</span>-&gt;next_focus<span class="ot">();</span></span>
<span id="cb1-236"><a href="#cb1-236"></a> }</span>
<span id="cb1-237"><a href="#cb1-237"></a> </span>
<span id="cb1-238"><a href="#cb1-238"></a>+display::WindowDownloadList*</span>
<span id="cb1-239"><a href="#cb1-239"></a>+DownloadList::current_window_list<span class="ot">()</span> {</span>
<span id="cb1-240"><a href="#cb1-240"></a>+  <span class="kw">return</span> dynamic_cast&lt;ElementDownloadList*&gt;<span class="ot">(</span>m_uiArray<span class="ot">[</span><span class="kw">DISPLAY_DOWNLOAD_LIST</span><span class="ot">])</span>-&gt;window<span class="ot">();</span></span>
<span id="cb1-241"><a href="#cb1-241"></a>+}</span>
<span id="cb1-242"><a href="#cb1-242"></a>+</span>
<span id="cb1-243"><a href="#cb1-243"></a> <span class="kw">void</span></span>
<span id="cb1-244"><a href="#cb1-244"></a> DownloadList::activate_display<span class="ot">(</span>Display displayType<span class="ot">)</span> {</span>
<span id="cb1-245"><a href="#cb1-245"></a>   <span class="kw">if</span> <span class="ot">(</span>!is_active<span class="ot">())</span></span>
<span id="cb1-246"><a href="#cb1-246"></a>diff --git a/src/ui/download_list.h b/src/ui/download_list.h</span>
<span id="cb1-247"><a href="#cb1-247"></a>index 3712e36..7810f65 <span class="dv">100644</span></span>
<span id="cb1-248"><a href="#cb1-248"></a>--- a/src/ui/download_list.h</span>
<span id="cb1-249"><a href="#cb1-249"></a>+++ b/src/ui/download_list.h</span>
<span id="cb1-250"><a href="#cb1-250"></a><span class="er">@@</span> <span class="dv">-98</span><span class="ot">,</span><span class="dv">6</span> +<span class="dv">98</span><span class="ot">,</span><span class="dv">7</span> <span class="er">@@</span> <span class="kw">public</span>:</span>
<span id="cb1-251"><a href="#cb1-251"></a>   <span class="kw">void</span>                activate_display<span class="ot">(</span>Display d<span class="ot">);</span></span>
<span id="cb1-252"><a href="#cb1-252"></a> </span>
<span id="cb1-253"><a href="#cb1-253"></a>   core::View*         current_view<span class="ot">();</span></span>
<span id="cb1-254"><a href="#cb1-254"></a>+  display::WindowDownloadList* current_window_list<span class="ot">();</span></span>
<span id="cb1-255"><a href="#cb1-255"></a>   <span class="kw">void</span>                set_current_view<span class="ot">(</span><span class="kw">const</span> std::<span class="kw">string</span>&amp; name<span class="ot">);</span></span>
<span id="cb1-256"><a href="#cb1-256"></a> </span>
<span id="cb1-257"><a href="#cb1-257"></a>   <span class="kw">void</span>                slot_open_uri<span class="ot">(</span>slot_string s<span class="ot">)</span> { m_slot_open_uri = s<span class="ot">;</span> }</span>
<span id="cb1-258"><a href="#cb1-258"></a>diff --git a/src/ui/element_download_list.h b/src/ui/element_download_list.h</span>
<span id="cb1-259"><a href="#cb1-259"></a>index 20185b5..00ef880 <span class="dv">100644</span></span>
<span id="cb1-260"><a href="#cb1-260"></a>--- a/src/ui/element_download_list.h</span>
<span id="cb1-261"><a href="#cb1-261"></a>+++ b/src/ui/element_download_list.h</span>
<span id="cb1-262"><a href="#cb1-262"></a><span class="er">@@</span> <span class="dv">-60</span><span class="ot">,</span><span class="dv">6</span> +<span class="dv">60</span><span class="ot">,</span><span class="dv">7</span> <span class="er">@@</span> <span class="kw">public</span>:</span>
<span id="cb1-263"><a href="#cb1-263"></a>   <span class="kw">void</span>                disable<span class="ot">();</span></span>
<span id="cb1-264"><a href="#cb1-264"></a> </span>
<span id="cb1-265"><a href="#cb1-265"></a>   core::View*         view<span class="ot">()</span> { <span class="kw">return</span> m_view<span class="ot">;</span> }</span>
<span id="cb1-266"><a href="#cb1-266"></a>+  WDownloadList*      window<span class="ot">()</span> { <span class="kw">return</span> m_window<span class="ot">;</span> }</span>
<span id="cb1-267"><a href="#cb1-267"></a>   <span class="kw">void</span>                set_view<span class="ot">(</span>core::View* l<span class="ot">);</span></span>
<span id="cb1-268"><a href="#cb1-268"></a> </span>
<span id="cb1-269"><a href="#cb1-269"></a>   <span class="kw">void</span>                receive_command<span class="ot">(</span><span class="kw">const</span> char* cmd<span class="ot">);</span></span>
<span id="cb1-270"><a href="#cb1-270"></a>diff --git a/src/ui/root.cc b/src/ui/root.cc</span>
<span id="cb1-271"><a href="#cb1-271"></a>index 981fcc2..2df0f5a <span class="dv">100644</span></span>
<span id="cb1-272"><a href="#cb1-272"></a>--- a/src/ui/root.cc</span>
<span id="cb1-273"><a href="#cb1-273"></a>+++ b/src/ui/root.cc</span>
<span id="cb1-274"><a href="#cb1-274"></a><span class="er">@@</span> <span class="dv">-44</span><span class="ot">,</span><span class="dv">6</span> +<span class="dv">44</span><span class="ot">,</span><span class="dv">7</span> <span class="er">@@</span></span>
<span id="cb1-275"><a href="#cb1-275"></a> </span>
<span id="cb1-276"><a href="#cb1-276"></a> <span class="co">#include &quot;core/manager.h&quot;</span></span>
<span id="cb1-277"><a href="#cb1-277"></a> <span class="co">#include &quot;display/frame.h&quot;</span></span>
<span id="cb1-278"><a href="#cb1-278"></a>+<span class="co">#include &quot;display/window_download_list.h&quot;</span></span>
<span id="cb1-279"><a href="#cb1-279"></a> <span class="co">#include &quot;display/window_http_queue.h&quot;</span></span>
<span id="cb1-280"><a href="#cb1-280"></a> <span class="co">#include &quot;display/window_title.h&quot;</span></span>
<span id="cb1-281"><a href="#cb1-281"></a> <span class="co">#include &quot;display/window_input.h&quot;</span></span>
<span id="cb1-282"><a href="#cb1-282"></a><span class="er">@@</span> <span class="dv">-65</span><span class="ot">,</span><span class="dv">7</span> +<span class="dv">66</span><span class="ot">,</span><span class="dv">15</span> <span class="er">@@</span> Root::Root<span class="ot">()</span> :</span>
<span id="cb1-283"><a href="#cb1-283"></a>   m_windowTitle<span class="ot">(</span><span class="kw">NULL</span><span class="ot">),</span></span>
<span id="cb1-284"><a href="#cb1-284"></a>   m_windowHttpQueue<span class="ot">(</span><span class="kw">NULL</span><span class="ot">),</span></span>
<span id="cb1-285"><a href="#cb1-285"></a>   m_windowInput<span class="ot">(</span><span class="kw">NULL</span><span class="ot">),</span></span>
<span id="cb1-286"><a href="#cb1-286"></a>-  m_windowStatusbar<span class="ot">(</span><span class="kw">NULL</span><span class="ot">)</span> {</span>
<span id="cb1-287"><a href="#cb1-287"></a>+  m_windowStatusbar<span class="ot">(</span><span class="kw">NULL</span><span class="ot">),</span></span>
<span id="cb1-288"><a href="#cb1-288"></a>+  color_inactive_fg<span class="ot">(</span>-<span class="dv">1</span><span class="ot">),</span></span>
<span id="cb1-289"><a href="#cb1-289"></a>+  color_inactive_bg<span class="ot">(</span>-<span class="dv">1</span><span class="ot">),</span></span>
<span id="cb1-290"><a href="#cb1-290"></a>+  color_dead_fg<span class="ot">(</span>-<span class="dv">1</span><span class="ot">),</span></span>
<span id="cb1-291"><a href="#cb1-291"></a>+  color_dead_bg<span class="ot">(</span>-<span class="dv">1</span><span class="ot">),</span></span>
<span id="cb1-292"><a href="#cb1-292"></a>+  color_active_fg<span class="ot">(</span>-<span class="dv">1</span><span class="ot">),</span></span>
<span id="cb1-293"><a href="#cb1-293"></a>+  color_active_bg<span class="ot">(</span>-<span class="dv">1</span><span class="ot">),</span></span>
<span id="cb1-294"><a href="#cb1-294"></a>+  color_finished_fg<span class="ot">(</span>-<span class="dv">1</span><span class="ot">),</span></span>
<span id="cb1-295"><a href="#cb1-295"></a>+  color_finished_bg<span class="ot">(</span>-<span class="dv">1</span><span class="ot">)</span> {</span>
<span id="cb1-296"><a href="#cb1-296"></a> }</span>
<span id="cb1-297"><a href="#cb1-297"></a> </span>
<span id="cb1-298"><a href="#cb1-298"></a> <span class="kw">void</span></span>
<span id="cb1-299"><a href="#cb1-299"></a><span class="er">@@</span> <span class="dv">-97</span><span class="ot">,</span><span class="dv">6</span> +<span class="dv">106</span><span class="ot">,</span><span class="dv">14</span> <span class="er">@@</span> Root::init<span class="ot">(</span>Control* c<span class="ot">)</span> {</span>
<span id="cb1-300"><a href="#cb1-300"></a>   setup_keys<span class="ot">();</span></span>
<span id="cb1-301"><a href="#cb1-301"></a> </span>
<span id="cb1-302"><a href="#cb1-302"></a>   m_downloadList-&gt;activate<span class="ot">(</span>rootFrame-&gt;frame<span class="ot">(</span><span class="dv">1</span><span class="ot">));</span></span>
<span id="cb1-303"><a href="#cb1-303"></a>+  m_downloadList-&gt;current_window_list<span class="ot">()</span>-&gt;set_color_inactive_fg<span class="ot">(</span>color_inactive_fg<span class="ot">);</span></span>
<span id="cb1-304"><a href="#cb1-304"></a>+  m_downloadList-&gt;current_window_list<span class="ot">()</span>-&gt;set_color_inactive_bg<span class="ot">(</span>color_inactive_bg<span class="ot">);</span></span>
<span id="cb1-305"><a href="#cb1-305"></a>+  m_downloadList-&gt;current_window_list<span class="ot">()</span>-&gt;set_color_dead_fg<span class="ot">(</span>color_dead_fg<span class="ot">);</span></span>
<span id="cb1-306"><a href="#cb1-306"></a>+  m_downloadList-&gt;current_window_list<span class="ot">()</span>-&gt;set_color_dead_bg<span class="ot">(</span>color_dead_bg<span class="ot">);</span></span>
<span id="cb1-307"><a href="#cb1-307"></a>+  m_downloadList-&gt;current_window_list<span class="ot">()</span>-&gt;set_color_active_fg<span class="ot">(</span>color_active_fg<span class="ot">);</span></span>
<span id="cb1-308"><a href="#cb1-308"></a>+  m_downloadList-&gt;current_window_list<span class="ot">()</span>-&gt;set_color_active_bg<span class="ot">(</span>color_active_bg<span class="ot">);</span></span>
<span id="cb1-309"><a href="#cb1-309"></a>+  m_downloadList-&gt;current_window_list<span class="ot">()</span>-&gt;set_color_finished_fg<span class="ot">(</span>color_finished_fg<span class="ot">);</span></span>
<span id="cb1-310"><a href="#cb1-310"></a>+  m_downloadList-&gt;current_window_list<span class="ot">()</span>-&gt;set_color_finished_bg<span class="ot">(</span>color_finished_bg<span class="ot">);</span></span>
<span id="cb1-311"><a href="#cb1-311"></a> }</span>
<span id="cb1-312"><a href="#cb1-312"></a> </span>
<span id="cb1-313"><a href="#cb1-313"></a> <span class="kw">void</span></span>
<span id="cb1-314"><a href="#cb1-314"></a><span class="er">@@</span> <span class="dv">-272</span><span class="ot">,</span><span class="dv">4</span> +<span class="dv">289</span><span class="ot">,</span><span class="dv">88</span> <span class="er">@@</span> Root::current_input<span class="ot">()</span> {</span>
<span id="cb1-315"><a href="#cb1-315"></a>   <span class="kw">return</span> m_windowInput-&gt;input<span class="ot">();</span></span>
<span id="cb1-316"><a href="#cb1-316"></a> }</span>
<span id="cb1-317"><a href="#cb1-317"></a> </span>
<span id="cb1-318"><a href="#cb1-318"></a>+<span class="co">// Inactive</span></span>
<span id="cb1-319"><a href="#cb1-319"></a>+<span class="kw">int</span></span>
<span id="cb1-320"><a href="#cb1-320"></a>+Root::get_color_inactive_fg<span class="ot">()</span> {</span>
<span id="cb1-321"><a href="#cb1-321"></a>+  <span class="kw">return</span> color_inactive_fg<span class="ot">;</span></span>
<span id="cb1-322"><a href="#cb1-322"></a>+}</span>
<span id="cb1-323"><a href="#cb1-323"></a>+</span>
<span id="cb1-324"><a href="#cb1-324"></a>+<span class="kw">void</span></span>
<span id="cb1-325"><a href="#cb1-325"></a>+Root::set_color_inactive_fg<span class="ot">(</span>int64_t color<span class="ot">)</span> {</span>
<span id="cb1-326"><a href="#cb1-326"></a>+  color_inactive_fg = color<span class="ot">;</span></span>
<span id="cb1-327"><a href="#cb1-327"></a>+}</span>
<span id="cb1-328"><a href="#cb1-328"></a>+</span>
<span id="cb1-329"><a href="#cb1-329"></a>+<span class="kw">int</span></span>
<span id="cb1-330"><a href="#cb1-330"></a>+Root::get_color_inactive_bg<span class="ot">()</span> {</span>
<span id="cb1-331"><a href="#cb1-331"></a>+  <span class="kw">return</span> color_inactive_bg<span class="ot">;</span></span>
<span id="cb1-332"><a href="#cb1-332"></a>+}</span>
<span id="cb1-333"><a href="#cb1-333"></a>+</span>
<span id="cb1-334"><a href="#cb1-334"></a>+<span class="kw">void</span></span>
<span id="cb1-335"><a href="#cb1-335"></a>+Root::set_color_inactive_bg<span class="ot">(</span>int64_t color<span class="ot">)</span> {</span>
<span id="cb1-336"><a href="#cb1-336"></a>+  color_inactive_bg = color<span class="ot">;</span></span>
<span id="cb1-337"><a href="#cb1-337"></a>+}</span>
<span id="cb1-338"><a href="#cb1-338"></a>+</span>
<span id="cb1-339"><a href="#cb1-339"></a>+<span class="co">// Dead</span></span>
<span id="cb1-340"><a href="#cb1-340"></a>+<span class="kw">int</span></span>
<span id="cb1-341"><a href="#cb1-341"></a>+Root::get_color_dead_fg<span class="ot">()</span> {</span>
<span id="cb1-342"><a href="#cb1-342"></a>+  <span class="kw">return</span> color_dead_fg<span class="ot">;</span></span>
<span id="cb1-343"><a href="#cb1-343"></a>+}</span>
<span id="cb1-344"><a href="#cb1-344"></a>+</span>
<span id="cb1-345"><a href="#cb1-345"></a>+<span class="kw">void</span></span>
<span id="cb1-346"><a href="#cb1-346"></a>+Root::set_color_dead_fg<span class="ot">(</span>int64_t color<span class="ot">)</span> {</span>
<span id="cb1-347"><a href="#cb1-347"></a>+  color_dead_fg = color<span class="ot">;</span></span>
<span id="cb1-348"><a href="#cb1-348"></a>+}</span>
<span id="cb1-349"><a href="#cb1-349"></a>+</span>
<span id="cb1-350"><a href="#cb1-350"></a>+<span class="kw">int</span></span>
<span id="cb1-351"><a href="#cb1-351"></a>+Root::get_color_dead_bg<span class="ot">()</span> {</span>
<span id="cb1-352"><a href="#cb1-352"></a>+  <span class="kw">return</span> color_dead_bg<span class="ot">;</span></span>
<span id="cb1-353"><a href="#cb1-353"></a>+}</span>
<span id="cb1-354"><a href="#cb1-354"></a>+</span>
<span id="cb1-355"><a href="#cb1-355"></a>+<span class="kw">void</span></span>
<span id="cb1-356"><a href="#cb1-356"></a>+Root::set_color_dead_bg<span class="ot">(</span>int64_t color<span class="ot">)</span> {</span>
<span id="cb1-357"><a href="#cb1-357"></a>+  color_dead_bg = color<span class="ot">;</span></span>
<span id="cb1-358"><a href="#cb1-358"></a>+}</span>
<span id="cb1-359"><a href="#cb1-359"></a>+</span>
<span id="cb1-360"><a href="#cb1-360"></a>+<span class="co">// Active</span></span>
<span id="cb1-361"><a href="#cb1-361"></a>+<span class="kw">int</span></span>
<span id="cb1-362"><a href="#cb1-362"></a>+Root::get_color_active_fg<span class="ot">()</span> {</span>
<span id="cb1-363"><a href="#cb1-363"></a>+  <span class="kw">return</span> color_active_fg<span class="ot">;</span></span>
<span id="cb1-364"><a href="#cb1-364"></a>+}</span>
<span id="cb1-365"><a href="#cb1-365"></a>+</span>
<span id="cb1-366"><a href="#cb1-366"></a>+<span class="kw">void</span></span>
<span id="cb1-367"><a href="#cb1-367"></a>+Root::set_color_active_fg<span class="ot">(</span>int64_t color<span class="ot">)</span> {</span>
<span id="cb1-368"><a href="#cb1-368"></a>+  color_active_fg = color<span class="ot">;</span></span>
<span id="cb1-369"><a href="#cb1-369"></a>+}</span>
<span id="cb1-370"><a href="#cb1-370"></a>+</span>
<span id="cb1-371"><a href="#cb1-371"></a>+<span class="kw">int</span></span>
<span id="cb1-372"><a href="#cb1-372"></a>+Root::get_color_active_bg<span class="ot">()</span> {</span>
<span id="cb1-373"><a href="#cb1-373"></a>+  <span class="kw">return</span> color_active_bg<span class="ot">;</span></span>
<span id="cb1-374"><a href="#cb1-374"></a>+}</span>
<span id="cb1-375"><a href="#cb1-375"></a>+</span>
<span id="cb1-376"><a href="#cb1-376"></a>+<span class="kw">void</span></span>
<span id="cb1-377"><a href="#cb1-377"></a>+Root::set_color_active_bg<span class="ot">(</span>int64_t color<span class="ot">)</span> {</span>
<span id="cb1-378"><a href="#cb1-378"></a>+  color_active_bg = color<span class="ot">;</span></span>
<span id="cb1-379"><a href="#cb1-379"></a>+}</span>
<span id="cb1-380"><a href="#cb1-380"></a>+</span>
<span id="cb1-381"><a href="#cb1-381"></a>+<span class="co">// Finished</span></span>
<span id="cb1-382"><a href="#cb1-382"></a>+<span class="kw">int</span></span>
<span id="cb1-383"><a href="#cb1-383"></a>+Root::get_color_finished_fg<span class="ot">()</span> {</span>
<span id="cb1-384"><a href="#cb1-384"></a>+  <span class="kw">return</span> color_finished_fg<span class="ot">;</span></span>
<span id="cb1-385"><a href="#cb1-385"></a>+}</span>
<span id="cb1-386"><a href="#cb1-386"></a>+</span>
<span id="cb1-387"><a href="#cb1-387"></a>+<span class="kw">void</span></span>
<span id="cb1-388"><a href="#cb1-388"></a>+Root::set_color_finished_fg<span class="ot">(</span>int64_t color<span class="ot">)</span> {</span>
<span id="cb1-389"><a href="#cb1-389"></a>+  color_finished_fg = color<span class="ot">;</span></span>
<span id="cb1-390"><a href="#cb1-390"></a>+}</span>
<span id="cb1-391"><a href="#cb1-391"></a>+</span>
<span id="cb1-392"><a href="#cb1-392"></a>+<span class="kw">int</span></span>
<span id="cb1-393"><a href="#cb1-393"></a>+Root::get_color_finished_bg<span class="ot">()</span> {</span>
<span id="cb1-394"><a href="#cb1-394"></a>+  <span class="kw">return</span> color_finished_bg<span class="ot">;</span></span>
<span id="cb1-395"><a href="#cb1-395"></a>+}</span>
<span id="cb1-396"><a href="#cb1-396"></a>+</span>
<span id="cb1-397"><a href="#cb1-397"></a>+<span class="kw">void</span></span>
<span id="cb1-398"><a href="#cb1-398"></a>+Root::set_color_finished_bg<span class="ot">(</span>int64_t color<span class="ot">)</span> {</span>
<span id="cb1-399"><a href="#cb1-399"></a>+  color_finished_bg = color<span class="ot">;</span></span>
<span id="cb1-400"><a href="#cb1-400"></a>+}</span>
<span id="cb1-401"><a href="#cb1-401"></a>+</span>
<span id="cb1-402"><a href="#cb1-402"></a> }</span>
<span id="cb1-403"><a href="#cb1-403"></a>diff --git a/src/ui/root.h b/src/ui/root.h</span>
<span id="cb1-404"><a href="#cb1-404"></a>index cbc5ff4..a550aeb <span class="dv">100644</span></span>
<span id="cb1-405"><a href="#cb1-405"></a>--- a/src/ui/root.h</span>
<span id="cb1-406"><a href="#cb1-406"></a>+++ b/src/ui/root.h</span>
<span id="cb1-407"><a href="#cb1-407"></a><span class="er">@@</span> <span class="dv">-83</span><span class="ot">,</span><span class="dv">6</span> +<span class="dv">83</span><span class="ot">,</span><span class="dv">23</span> <span class="er">@@</span> <span class="kw">public</span>:</span>
<span id="cb1-408"><a href="#cb1-408"></a>   <span class="kw">void</span>                set_down_throttle_i64<span class="ot">(</span>int64_t throttle<span class="ot">)</span> { set_down_throttle<span class="ot">(</span>throttle &gt;&gt; <span class="dv">10</span><span class="ot">);</span> }</span>
<span id="cb1-409"><a href="#cb1-409"></a>   <span class="kw">void</span>                set_up_throttle_i64<span class="ot">(</span>int64_t throttle<span class="ot">)</span>   { set_up_throttle<span class="ot">(</span>throttle &gt;&gt; <span class="dv">10</span><span class="ot">);</span> }</span>
<span id="cb1-410"><a href="#cb1-410"></a> </span>
<span id="cb1-411"><a href="#cb1-411"></a>+  <span class="kw">int</span>                 get_color_inactive_fg<span class="ot">();</span></span>
<span id="cb1-412"><a href="#cb1-412"></a>+  <span class="kw">void</span>                set_color_inactive_fg<span class="ot">(</span>int64_t color<span class="ot">);</span></span>
<span id="cb1-413"><a href="#cb1-413"></a>+  <span class="kw">int</span>                 get_color_inactive_bg<span class="ot">();</span></span>
<span id="cb1-414"><a href="#cb1-414"></a>+  <span class="kw">void</span>                set_color_inactive_bg<span class="ot">(</span>int64_t color<span class="ot">);</span></span>
<span id="cb1-415"><a href="#cb1-415"></a>+  <span class="kw">int</span>                 get_color_dead_fg<span class="ot">();</span></span>
<span id="cb1-416"><a href="#cb1-416"></a>+  <span class="kw">void</span>                set_color_dead_fg<span class="ot">(</span>int64_t color<span class="ot">);</span></span>
<span id="cb1-417"><a href="#cb1-417"></a>+  <span class="kw">int</span>                 get_color_dead_bg<span class="ot">();</span></span>
<span id="cb1-418"><a href="#cb1-418"></a>+  <span class="kw">void</span>                set_color_dead_bg<span class="ot">(</span>int64_t color<span class="ot">);</span></span>
<span id="cb1-419"><a href="#cb1-419"></a>+  <span class="kw">int</span>                 get_color_active_fg<span class="ot">();</span></span>
<span id="cb1-420"><a href="#cb1-420"></a>+  <span class="kw">void</span>                set_color_active_fg<span class="ot">(</span>int64_t color<span class="ot">);</span></span>
<span id="cb1-421"><a href="#cb1-421"></a>+  <span class="kw">int</span>                 get_color_active_bg<span class="ot">();</span></span>
<span id="cb1-422"><a href="#cb1-422"></a>+  <span class="kw">void</span>                set_color_active_bg<span class="ot">(</span>int64_t color<span class="ot">);</span></span>
<span id="cb1-423"><a href="#cb1-423"></a>+  <span class="kw">int</span>                 get_color_finished_fg<span class="ot">();</span></span>
<span id="cb1-424"><a href="#cb1-424"></a>+  <span class="kw">void</span>                set_color_finished_fg<span class="ot">(</span>int64_t color<span class="ot">);</span></span>
<span id="cb1-425"><a href="#cb1-425"></a>+  <span class="kw">int</span>                 get_color_finished_bg<span class="ot">();</span></span>
<span id="cb1-426"><a href="#cb1-426"></a>+  <span class="kw">void</span>                set_color_finished_bg<span class="ot">(</span>int64_t color<span class="ot">);</span></span>
<span id="cb1-427"><a href="#cb1-427"></a>+</span>
<span id="cb1-428"><a href="#cb1-428"></a>   <span class="kw">void</span>                adjust_down_throttle<span class="ot">(</span><span class="kw">int</span> throttle<span class="ot">);</span></span>
<span id="cb1-429"><a href="#cb1-429"></a>   <span class="kw">void</span>                adjust_up_throttle<span class="ot">(</span><span class="kw">int</span> throttle<span class="ot">);</span></span>
<span id="cb1-430"><a href="#cb1-430"></a> </span>
<span id="cb1-431"><a href="#cb1-431"></a><span class="er">@@</span> <span class="dv">-105</span><span class="ot">,</span><span class="dv">6</span> +<span class="dv">122</span><span class="ot">,</span><span class="dv">15</span> <span class="er">@@</span> <span class="kw">private</span>:</span>
<span id="cb1-432"><a href="#cb1-432"></a>   WStatusbar*         m_windowStatusbar<span class="ot">;</span></span>
<span id="cb1-433"><a href="#cb1-433"></a> </span>
<span id="cb1-434"><a href="#cb1-434"></a>   input::Bindings     m_bindings<span class="ot">;</span></span>
<span id="cb1-435"><a href="#cb1-435"></a>+</span>
<span id="cb1-436"><a href="#cb1-436"></a>+  int64_t             color_inactive_fg<span class="ot">;</span></span>
<span id="cb1-437"><a href="#cb1-437"></a>+  int64_t             color_inactive_bg<span class="ot">;</span></span>
<span id="cb1-438"><a href="#cb1-438"></a>+  int64_t             color_dead_fg<span class="ot">;</span></span>
<span id="cb1-439"><a href="#cb1-439"></a>+  int64_t             color_dead_bg<span class="ot">;</span></span>
<span id="cb1-440"><a href="#cb1-440"></a>+  int64_t             color_active_fg<span class="ot">;</span></span>
<span id="cb1-441"><a href="#cb1-441"></a>+  int64_t             color_active_bg<span class="ot">;</span></span>
<span id="cb1-442"><a href="#cb1-442"></a>+  int64_t             color_finished_fg<span class="ot">;</span></span>
<span id="cb1-443"><a href="#cb1-443"></a>+  int64_t             color_finished_bg<span class="ot">;</span></span>
<span id="cb1-444"><a href="#cb1-444"></a> }<span class="ot">;</span></span>
<span id="cb1-445"><a href="#cb1-445"></a> </span>
<span id="cb1-446"><a href="#cb1-446"></a> }</span></code></pre></div>
<hr />
</details>
<p>Скачиваем и распаковываем исходники с официального сайта rtorrent. Нам нужна версия <code>0.9.6</code>, так как в репозитории Debian 9 именно такая версия:</p>
<pre><code>$ wget -qO - http://rtorrent.net/downloads/rtorrent-0.9.6.tar.gz | tar zxvf -
</code></pre>
<p>Патч <code>rtorrent-0.9.6_color.patch</code> необходимо положить в папку с нашими исходниками <code>rtorrent-0.9.6</code>:</p>
<pre><code>$ mv rtorrent-0.9.6_color.patch /home/user_name/rtorrent-0.9.6/
</code></pre>
<p>Теперь переходим в папку с исходниками, накладываем наш патч и собираем rtorrent:</p>
<hr />
<pre><code>$ cd rtorrent-0.9.6
$ patch -uNp1 -i rtorrent-0.9.6_color.patch
$ sed &#39;/AM_PATH_CPPUNIT/d&#39; -i configure.ac
$ ./autogen.sh
$ CPPFLAGS=&quot;-I/usr/include/ncursesw/&quot; ./configure --with-xmlrpc-c --prefix=/usr
$ make
$ sudo make install
</code></pre>
<hr />
<blockquote>
<p>Если сборка заканчивается неудачей - это свидетельствует об отсутствии в вашей системе необходимых библиотек. Их нужно будет доустановить, после чего запустить сборку повторно.</p>
</blockquote>
<p>Теперь остаётся задать необходимые цвета в конфигурационном файле rtorrent’a <code>.rtorrent.rc</code>:</p>
<hr />
<div class="sourceCode" id="cb5"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb5-1"><a href="#cb5-1"></a><span class="co"># Colors</span></span>
<span id="cb5-2"><a href="#cb5-2"></a><span class="co"># Colors: 0 = black  1 = red  </span></span>
<span id="cb5-3"><a href="#cb5-3"></a><span class="co">#         2 = green  3 = yellow </span></span>
<span id="cb5-4"><a href="#cb5-4"></a><span class="co">#         4 = blue   5 = magenta </span></span>
<span id="cb5-5"><a href="#cb5-5"></a><span class="co">#         6 = cyan   7 = white</span></span>
<span id="cb5-6"><a href="#cb5-6"></a></span>
<span id="cb5-7"><a href="#cb5-7"></a><span class="ex">color_active_fg</span>   = 3</span>
<span id="cb5-8"><a href="#cb5-8"></a><span class="ex">color_inactive_fg</span> = 2</span>
<span id="cb5-9"><a href="#cb5-9"></a><span class="ex">color_dead_fg</span>     = 1</span>
<span id="cb5-10"><a href="#cb5-10"></a><span class="ex">color_finished_fg</span> = 6</span>
<span id="cb5-11"><a href="#cb5-11"></a><span class="ex">color_active_bg</span>   = 4</span>
<span id="cb5-12"><a href="#cb5-12"></a><span class="ex">color_inactive_bg</span> = 0</span>
<span id="cb5-13"><a href="#cb5-13"></a><span class="ex">color_dead_bg</span>     = 0</span>
<span id="cb5-14"><a href="#cb5-14"></a><span class="ex">color_finished_bg</span> = 0</span></code></pre></div>
<hr />
<p>Запускаем rtorrent и смотрим результат:</p>
<p><img src="http://images2.imagebam.com/b9/6f/81/8fbe551008897814.png" /></p>]]></description>
    <pubDate>Sun, 11 Nov 2018 00:00:00 UT</pubDate>
    <guid>https://chubaduba.github.io//posts/2018-11-11-1.html</guid>
    <dc:creator>ChubaDuba</dc:creator>
</item>
<item>
    <title>ncdc – консольный клиент DC++</title>
    <link>https://chubaduba.github.io//posts/2018-07-22-1.html</link>
    <description><![CDATA[<p>Многие скажут, что <a href="https://ru.wikipedia.org/wiki/Direct_Connect">Direct Connect</a> давно умер, но как не странно, лично я переодически этим пользуюсь. Тем более, под Linux сущетвует лёгковесный, шустрый и надёжный консольный клиент <a href="https://dev.yorhel.nl/ncdc">ncdc</a>. Сегодня речь пойдёт о его настройке и использовании в Debian GNU/Linux.</p>
<p>Первое, что нужно сделать - это подготовить порты, которые будет использовать <code>ncdc</code>. У каждого эта настройка будет зависеть от того, как ваш компьютер подключён к интернету. Я опишу свой вариант: имеется динамический IP адрес, интернет раздаёт Wi-Fi роутер. Т.е. другими словами нахожусь я за NAT.</p>
<p>Настраиваем роутер…<br />
Сделаем так, чтобы наш компьютер всегда получал один и тот же внутренний IP адрес. Для этого из диапазона IP адресов, которые выдаёт<code>DHCP Server</code> зададим произвольный IP адрес и привяжем его к MAC адресу сетевой карты нашего компьютера. В разных роутерах интерфейс выглядит по разному. В моём случае это выглядит вот так:</p>
<p><a href="http://www.imagebam.com/image/88f0e1905072814"><img src="http://thumbs2.imagebam.com/23/65/f3/88f0e1905072814.jpg" alt="imagebam.com"></a></p>
<p>Узнать MAC адрес сетевой карты можно выполнив в терминале команду:</p>
<pre><code>$ ip a
</code></pre>
<p>Теперь наш компьютер при подключении будет иметь постоянный внутренний IP адрес. В моём примере 192.168.1.100. Следующим шагом нужно пробросить порты, с которыми будет работать <code>ncdc</code>. Я для себя выбрал 20000 порт tcp и 21000 порт udp. Заходим в настройки <code>NAT Setting - Virtual Server</code> и вносим изменения:</p>
<p><a href="http://www.imagebam.com/image/284a9c905079134"><img src="http://thumbs2.imagebam.com/2d/23/4e/284a9c905079134.jpg" alt="imagebam.com"></a></p>
<p>На этом настройка роутера закончена. Теперь необходимо открыть порты. Опять же сделать это можно по разному в зависимости от того, чем вы пользуетесь в вашей системе. У меня установлен фаервол <code>ufw</code> поэтому открою я порты следующими командами:</p>
<pre><code>$ sudo ufw allow 20000
$ sudo ufw allow 21000
</code></pre>
<p>Всё, с портами мы закончили, можно переходить к клиенту <code>ncdc</code>. В репозиториях Debian его нет. Как его установить можно прочитать на <a href="https://dev.yorhel.nl/ncdc/install">сайте</a> разработчика. Чтобы при запуске <code>ncdc</code> не ругался на отсутствие <code>GeoIP</code> установим в систему пакет <code>geoip-database</code>:</p>
<pre><code>$ sudo apt-get install geoip-database
</code></pre>
<p>После первого запуска увидим вот такое окно:</p>
<p><a href="http://www.imagebam.com/image/0153df905086114"><img src="http://thumbs2.imagebam.com/85/d0/f6/0153df905086114.jpg" alt="imagebam.com"></a></p>
<p>Пропишем наши подготовленные порты:</p>
<pre><code>/set active_port 20000
/set active_udp_port 21000
/set active true 
</code></pre>
<p>Установим количество соединений:</p>
<pre><code>/set connection 10
</code></pre>
<p>Задаём свой ник по умолчанию:</p>
<pre><code> /set nick ваш_nickname
 </code></pre>
<p>Установим русскую кодировку по умолчанию:</p>
<pre><code>/set encoding CP1251
</code></pre>
<p>Теперь можно подключиться к какому-нибудь хабу.</p>
<blockquote>
<p>Список доступных хабов можно посмотреть по этой <a href="https://dchublist.ru/">ссылке</a>.</p>
</blockquote>
<p>Например, подключимся к хабу с названием <code>*Новосибирск - Forever*</code>. Обзовём его <code>novosibirsk</code>. Подключаемся:</p>
<pre><code>/open novosibirsk
/connect dchub://novosibirsk-forever.ru
</code></pre>
<p><a href="http://www.imagebam.com/image/318143905095054"><img src="http://thumbs2.imagebam.com/c4/f7/47/318143905095054.jpg" alt="imagebam.com"></a></p>
<p>Для того чтобы открыть окно со списком пользователей, нужно нажать комбинацию клавиш <code>Alt + u</code>:</p>
<p><a href="http://www.imagebam.com/image/ccf778905096814"><img src="http://thumbs2.imagebam.com/a5/7a/4f/ccf778905096814.jpg" alt="imagebam.com"></a></p>
<p>Переход между окнами осуществляется нажатием клавиши <code>Alt</code> и цифры, соответствующей номеру окна. Писать о всех возможных командах и доступных горячих клавишах смысла не вижу, так как всё это подробно описано в <a href="https://dev.yorhel.nl/ncdc/man">мануале</a> на сайте разработчика программы.</p>]]></description>
    <pubDate>Sun, 22 Jul 2018 00:00:00 UT</pubDate>
    <guid>https://chubaduba.github.io//posts/2018-07-22-1.html</guid>
    <dc:creator>ChubaDuba</dc:creator>
</item>
<item>
    <title>Использование сервиса pastebin.</title>
    <link>https://chubaduba.github.io//posts/2018-05-28-1.html</link>
    <description><![CDATA[<p>Очень часто, при решении каких-то вопросов, связанных с использованием Linux, люди, пытающиеся вам помочь, просят, чтобы вы показали им какой-либо файл с логами или результат работы (выхлоп) команды, введённой в терминале. Первое, что придёт вам на ум в этой ситуации - это сделать скриншот своего экрана или вообще взять и сфотографировать свой монитор. Согласистесь, очень часто на форумах, на которых пользователи Linux ищут ответы на свои вопросы можно увидеть вот такие фотографии:</p>
<p><img src="http://images2.imagebam.com/1f/95/29/9c2c63827428223.JPG" /></p>
<p>Хорошо, если фотография хорошего качества, вся информация полностью умещается на мониторе и удобно читаемая. Но такое бывает далеко не всегда. Сегодня речь пойдёт о работе с сервисом <code>pasebin</code>, который позволяет загружать отрывки текста, фрагменты исходного кода и т.д. для возможности просмотра окружающими.</p>
<p>Для работы с сервисом установим в нашу систему два пакета <a href="https://packages.debian.org/stretch/pastebinit">pastebinit</a> и <a href="https://packages.debian.org/stretch/xclip">xclip</a>. <code>pastebinit</code> - это инструмент командной строки для отправки данных на сайт, который позволяет пользователям размещать отрывки текста для публичного просмотра, а <code>xclip</code> — это утилита, предоставляющая интерфейс к буферу обмена из командной строки:</p>
<pre><code>$ sudo apt-get install pastebinit
$ sudo apt-get install xclip
</code></pre>
<p>Чтобы посмотреть с какими сервисами работает <code>pastebinit</code>, нужно в терминале ввести команду:</p>
<pre><code>$ pastebinit -l
</code></pre>
<p><img src="http://images2.imagebam.com/c5/d4/44/88c0c8851554954.png" /></p>
<p>Стоит отметить, что на самом деле, не со всеми сервисами из этого списка <code>pastebinit</code> работает. Причины этому две: либо сам сервис не работает (недоступен), либо у сервиса поменялся API и <code>pastebinit</code> перестал корректно с ним работать. Какой сервис выбрать для себя дело сугубо ваших предпочтений. Я пользуюсь сервисом по умолчанию <code>paste.debian.net</code>.</p>
<blockquote>
<p>В Debian 9 Stratch <code>pastebinit</code> имеет ошибки, которые не позволяют ему корректно работать с сервисом <code>paste.debian.net</code>. Поэтому рекомендую поставить более свежую версию пакета из Debian testing или Debian sid.</p>
</blockquote>
<p>Чтобы каждый раз не вводить в терминале длинные команды, создадим <code>alias</code>, обзовём его <code>paste</code>, который будем использовать когда нужно будет что-то скопировать. Добавляем в наш файл <code>~/.bashrc</code> строчку :</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb3-1"><a href="#cb3-1"></a><span class="bu">alias</span> paste=<span class="st">&#39;pastebinit -b paste.debian.net -a ChubaDuba | xclip -selection &quot;clipboard&quot; &#39;</span></span></code></pre></div>
<p>параметр <code>-a</code> задаёт имя автора. Параметр не обязательный, если вы его не будите прописывать, то автоматически вам будет присвоено имя <code>anonymous</code>.</p>
<p>Теперь всё готово для работы. Посмотрим на практике как это работает.<br />
Например, нам нужно показать вывод команды <code>lspci</code>. Открываем терминал и вводим следующую команду:</p>
<pre><code>$ lspci | paste
</code></pre>
<p>После её выполнения в буфере обмена у нас будет ссылка, перейдя по которой можно увидеть результат работы введённой нами команды. В нашем примере <code>lspci</code>. Остаётся поделиться этой ссылкой, нажав клавиши <code>Ctrl + v</code> там, где нам нужно: на форуме, чате или отправить её по e-mail. Если перейти по этой ссылке, откроется страничка выбранного нами ресурса, на которой в удобной для просмотра форме будет показан результат работы вводимой нами команды:</p>
<p><a href="http://www.imagebam.com/image/dffeb7895532484"><img src="http://thumbs2.imagebam.com/e1/fe/50/dffeb7895532484.jpg" alt="imagebam.com"></a></p>]]></description>
    <pubDate>Mon, 28 May 2018 00:00:00 UT</pubDate>
    <guid>https://chubaduba.github.io//posts/2018-05-28-1.html</guid>
    <dc:creator>ChubaDuba</dc:creator>
</item>
<item>
    <title>Xmonad. Чем сделать скриншот?</title>
    <link>https://chubaduba.github.io//posts/2018-04-02-1.html</link>
    <description><![CDATA[<p>Cогласитесь, частенько возникает ситуация, когда необходимо сделать скриншот экрана. Сегодня поговорим как это сделать в xmonad без использования таких монстров как <a href="http://shutter-project.org/">shutter</a>, <a href="https://git.gnome.org/browse/gnome-screenshot">gnome-screenshot</a>, <a href="https://www.kde.org/applications/graphics/ksnapshot">ksnapshot</a> и т.д., которые при установке тянут за собой кучу пакетов.</p>
<p>Существует маленькая консольная утилита, специально разработанная для создания скриншотов. Называется она <a href="http://freshmeat.sourceforge.net/projects/scrot">scrot</a>.</p>
<p>В репозиториях Debian она конечно есть, устанавливается с минимумом зависимостей командой:</p>
<pre><code>$ sudo apt-get install scrot
</code></pre>
<p>Сначала определимся, куда мы будем складывать свои скриншоты. Я создал папку <code>~/Изображения/ScreenShots</code>.</p>
<p>Чтобы постоянно не лезть в консоль и не вводить руками команды, напишем скрипт, который будет создавать скриншот и сохранять его в папке, которую мы заранее подготовили. А запуск скрипта повесим на нужную нам клавишу.</p>
<blockquote>
<p>Ознакомиться со всеми возможными параметрами запуска утилиты можно на <a href="https://www.systutorials.com/docs/linux/man/1-scrot/">этой страничке</a>.</p>
</blockquote>
<p>Вот такой скрипт я использую:</p>
<hr />
<div class="sourceCode" id="cb2"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb2-1"><a href="#cb2-1"></a><span class="co">#!/bin/bash</span></span>
<span id="cb2-2"><a href="#cb2-2"></a></span>
<span id="cb2-3"><a href="#cb2-3"></a><span class="va">name=</span><span class="kw">`</span><span class="fu">date</span> +%x-%X-%N.png<span class="kw">`</span></span>
<span id="cb2-4"><a href="#cb2-4"></a></span>
<span id="cb2-5"><a href="#cb2-5"></a><span class="ex">scrot</span> ~/Изображения/ScreenShots/<span class="va">$name</span> -q 100 -d 10</span>
<span id="cb2-6"><a href="#cb2-6"></a><span class="ex">mpv</span> ~/путь_до_звукового_файла/photosound.mp3</span></code></pre></div>
<hr />
<p>где<br />
<code>name</code> - формат имени создаваемого файла;<br />
<code>q</code> - качество картинки;<br />
<code>d</code>- отсрочка выполнения в секундах.</p>
<p>Иногда бывают ситуации, когда в нужный момент нажать клавишу для создания скриншота не получится. Например, когда открыто какое-нибудь окно, которое блокирует нажатие любых клавиш. Ну а чтобы понимать создался ли у вас скриншот, я добавил звуковое оповещение. Звуковой файл проигрывает консольный плеер <a href="https://mpv.io/">mpv</a>. У вас это может быть любое приложение или утилита, способная издавать звуки. Сам звуковой файл тоже может быть любым. Я для себя выбрал <a href="https://mega.nz/#!5VFhCTQK!uH3bBX4etq8496Zmd4asDHbWbHVksLgTFWsWW0Ydchw">звук затвора фотоаппарата</a>.</p>
<p>Осталось назначить клавишу, по нажатию на которую будет запускаться наш скрипт. Я выбрал клавишу <code>PrtSc</code>. Определяем код клавиши с помошью утилиты <code>xev</code> и редактируем наш файл <code>xmonad.hs</code>:</p>
<hr />
<div class="sourceCode" id="cb3"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb3-1"><a href="#cb3-1"></a>myKeys <span class="ot">=</span> [</span>
<span id="cb3-2"><a href="#cb3-2"></a>         <span class="op">...</span></span>
<span id="cb3-3"><a href="#cb3-3"></a>         , ((<span class="dv">0</span>    , <span class="bn">0xff61</span>), spawn <span class="st">&quot;путь_до_нашего_скрипта&quot;</span>)</span>
<span id="cb3-4"><a href="#cb3-4"></a>         <span class="op">...</span></span>
<span id="cb3-5"><a href="#cb3-5"></a>         ]</span></code></pre></div>
<hr />
<blockquote>
<p>Я обычно делаю скриншот целого экрана. Всё равно, практически всегда, открываю созданный скриншот в редакторе <code>Gimp</code> и делаю нужные мне изменения. Если у вас есть необходимость постоянно делать скриншот выделенной области экрана, то работу scrot в таком режиме можно настроить, используя параметр <code>-s</code>.</p>
</blockquote>]]></description>
    <pubDate>Mon, 02 Apr 2018 00:00:00 UT</pubDate>
    <guid>https://chubaduba.github.io//posts/2018-04-02-1.html</guid>
    <dc:creator>ChubaDuba</dc:creator>
</item>
<item>
    <title>Xmonad+xmobar+ALSA.</title>
    <link>https://chubaduba.github.io//posts/2018-03-25-1.html</link>
    <description><![CDATA[<p>Сегодня речь пойдёт о настройке в <code>xmonad</code> горячих клавиш для управления громкостью, а также о выводе в <code>xmobar</code> некоторой информации о звуковых настройках в системе.</p>
<blockquote>
<p>Всё нижеописанное справедливо для <a href="http://www.alsa-project.org/main/index.php/Main_Page">ALSA</a>.</p>
</blockquote>
<p>После того как я отказался от <a href="https://ru.wikipedia.org/wiki/Desktop_environment">DE</a> и стал использовать только <a href="https://ru.wikipedia.org/wiki/X_window_manager">WM</a>, управление громкостью сводилось к открытию <a href="https://en.wikipedia.org/wiki/Alsamixer">alsamixer</a> и последующей регулировке необходимых параметров. Скажем так, стандартный вариант у многих пользователей, которые не используют DE на своём компьютере:</p>
<p><img src="/images/alsamixer.png" /></p>
<p>Всё как бы хорошо, но согласитесь, во время просмотра какого-нибудь очередного сериальчика, для того чтобы сделать чуть потише или громче, нужно было делать все эти манипуляции. Про жену вообще молчу! Первое время фраза: “Сделай чуть погромче”, вводила её в лёгкий ступор. Поэтому я решил всё это дело как-то облагородить. Вот, что у меня получилось…</p>
<p>Первое, что пришло на ум, это назначить в xmonad горячие клавиши для быстрого запуска <code>alsamixer</code>. Сделал:</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb1-1"><a href="#cb1-1"></a><span class="op">...</span></span>
<span id="cb1-2"><a href="#cb1-2"></a><span class="kw">import</span> <span class="dt">XMonad.Util.EZConfig</span>            (additionalKeys)</span>
<span id="cb1-3"><a href="#cb1-3"></a><span class="op">...</span></span>
<span id="cb1-4"><a href="#cb1-4"></a>myConfig <span class="ot">=</span> defaultConfig</span>
<span id="cb1-5"><a href="#cb1-5"></a>         { modMask <span class="ot">=</span> mod4Mask</span>
<span id="cb1-6"><a href="#cb1-6"></a>         , <span class="op">...</span></span>
<span id="cb1-7"><a href="#cb1-7"></a>         } <span class="ot">`additionalKeys`</span> myKeys</span>
<span id="cb1-8"><a href="#cb1-8"></a><span class="op">...</span></span>
<span id="cb1-9"><a href="#cb1-9"></a>myKeys <span class="ot">=</span> [</span>
<span id="cb1-10"><a href="#cb1-10"></a>         <span class="op">...</span></span>
<span id="cb1-11"><a href="#cb1-11"></a>         , ((mod4Mask <span class="op">.|.</span> controlMask,    xK_a), spawn <span class="st">&quot;urxvt -e alsamixer&quot;</span>)</span>
<span id="cb1-12"><a href="#cb1-12"></a>         ]</span>
<span id="cb1-13"><a href="#cb1-13"></a><span class="op">...</span></span></code></pre></div>
<p>По прошествии некоторого времени, в интернете было найдено решение как в xmonad назначить горячие клавиши для уменьшения (увеличения) громкости и для включения и выключения режима <code>Mute</code>. На моей<br />
клавиатуре есть специальные клавиши для громкости и для Mute. Если на вашей их нет, то назначить действия можно на любые, которые вам нравятся. Редактируем конфиг <code>xmonad</code>, добавляем наши клавиши:</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb2-1"><a href="#cb2-1"></a><span class="op">...</span></span>
<span id="cb2-2"><a href="#cb2-2"></a>myKeys <span class="ot">=</span> [</span>
<span id="cb2-3"><a href="#cb2-3"></a>         <span class="op">...</span></span>
<span id="cb2-4"><a href="#cb2-4"></a>         , ((<span class="dv">0</span>    , <span class="bn">0x1008ff11</span>), spawn <span class="st">&quot;amixer set Master 2-&quot;</span>)</span>
<span id="cb2-5"><a href="#cb2-5"></a>         , ((<span class="dv">0</span>    , <span class="bn">0x1008ff13</span>), spawn <span class="st">&quot;amixer set Master 2+&quot;</span>)</span>
<span id="cb2-6"><a href="#cb2-6"></a>         , ((<span class="dv">0</span>    , <span class="bn">0x1008ff12</span>), spawn <span class="st">&quot;amixer set Master toggle&quot;</span>)</span>
<span id="cb2-7"><a href="#cb2-7"></a>         ]</span>
<span id="cb2-8"><a href="#cb2-8"></a><span class="op">...</span></span></code></pre></div>
<blockquote>
<p>Код нужной клавиши можно определить с помощью утилиты <a href="https://linux.die.net/man/1/xev">xev</a>, набрав в терминале команду <code>xev | grep keycode</code>, и после этого нажать нужную клавишу.</p>
</blockquote>
<p>Стало совсем хорошо! И жена уже не в ступоре :)</p>
<p>Но как говорится, аппетит приходит во время еды. Захотелось реализовать ещё несколько нужных мне фишек. Дело в том, что на данный момент у нас в хозяйстве моноблок <a href="http://static.highspeedbackbone.net/pdf/Lenovo%20C325%20All-In-One%20PC%20Data%20Sheet.pdf">Lenovo C325</a>, у которого есть встроенные динамики. Частенько бывает так, что музыку мы слушаем (а это с женой мы очень любим!) через внешний <a href="http://ldsound.ru/odissej-u-010-stereo-hi-fi/">усилитель</a> и <a href="http://ldsound.ru/75-as-001-kliver/">колонки</a>, подключая моноблок через выход на наушники к усилителю. И не раз было так, что звук идёт и через динамики моноблока, и через внешние колонки. Приходилось открывать <code>alsamixer</code> и выключать звук из динамиков моноблока. Просто, но опять же напряжно, тем более, если дома гости и т.д. Это первое, что хотелось бы сделать. Второе, вывести в <code>xmobar</code> показания уровня громкости.</p>
<p>Реализовать я это решил с помощью скриптов, а результат их работы вывести в xmobar. Первым делом написал вот такой скрипт и обозвал его <code>vol</code>:</p>
<hr />
<div class="sourceCode" id="cb3"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb3-1"><a href="#cb3-1"></a><span class="co">#!/bin/bash</span></span>
<span id="cb3-2"><a href="#cb3-2"></a></span>
<span id="cb3-3"><a href="#cb3-3"></a><span class="va">vol=$(</span><span class="ex">amixer</span> get Master <span class="kw">|</span> <span class="fu">awk</span> -F<span class="st">&#39;[]%[]&#39;</span> <span class="st">&#39;/%/ {if ($7 == &quot;off&quot;) \</span></span>
<span id="cb3-4"><a href="#cb3-4"></a><span class="st">	 { print &quot;MM&quot; } else { print $2 }}&#39;</span> <span class="kw">|</span> <span class="fu">head</span> -n 1<span class="va">)</span></span>
<span id="cb3-5"><a href="#cb3-5"></a></span>
<span id="cb3-6"><a href="#cb3-6"></a><span class="va">COLOR=</span><span class="st">&quot;#DBA3A2&quot;</span></span>
<span id="cb3-7"><a href="#cb3-7"></a><span class="va">volume=</span><span class="st">&quot;[on]&quot;</span></span>
<span id="cb3-8"><a href="#cb3-8"></a></span>
<span id="cb3-9"><a href="#cb3-9"></a><span class="va">Volume_s=</span><span class="st">&quot;</span><span class="kw">`</span><span class="ex">amixer</span> get Speaker Playback Volume <span class="kw">|</span> <span class="fu">sed</span> <span class="st">&#39;6!d&#39;</span> <span class="kw">|</span> <span class="kw">\</span></span>
<span id="cb3-10"><a href="#cb3-10"></a>         <span class="fu">sed</span> -r <span class="st">&#39;s/^[^B]+//&#39;</span> <span class="kw">|</span> <span class="fu">sed</span> -r <span class="st">&#39;s/^[^[]+//&#39;</span><span class="kw">`</span><span class="st">&quot;</span></span>
<span id="cb3-11"><a href="#cb3-11"></a></span>
<span id="cb3-12"><a href="#cb3-12"></a><span class="va">Volume_h=</span><span class="st">&quot;</span><span class="kw">`</span><span class="ex">amixer</span> get Headphone Playback Volume <span class="kw">|</span> <span class="fu">sed</span> <span class="st">&#39;6!d&#39;</span> <span class="kw">|</span> <span class="kw">\</span></span>
<span id="cb3-13"><a href="#cb3-13"></a>         <span class="fu">sed</span> -r <span class="st">&#39;s/^[^B]+//&#39;</span> <span class="kw">|</span> <span class="fu">sed</span> -r <span class="st">&#39;s/^[^[]+//&#39;</span><span class="kw">`</span><span class="st">&quot;</span></span>
<span id="cb3-14"><a href="#cb3-14"></a></span>
<span id="cb3-15"><a href="#cb3-15"></a><span class="kw">if [[</span> <span class="va">$Volume_s</span> <span class="ot">==</span> *<span class="st">&quot;</span><span class="va">$volume</span><span class="st">&quot;</span>*<span class="kw"> ]]</span> <span class="kw">&amp;&amp; [[</span> <span class="va">$Volume_h</span> <span class="ot">!=</span> *<span class="st">&quot;</span><span class="va">$volume</span><span class="st">&quot;</span>*<span class="kw"> ]]</span>; <span class="kw">then</span></span>
<span id="cb3-16"><a href="#cb3-16"></a>   <span class="bu">echo</span> <span class="st">&quot;&lt;fc=</span><span class="va">$COLOR</span><span class="st">&gt;(d)&lt;/fc&gt;&lt;fc=#8CD0D3&gt;</span><span class="va">$vol</span><span class="st">%&lt;/fc&gt;&quot;</span></span>
<span id="cb3-17"><a href="#cb3-17"></a><span class="kw">fi</span></span>
<span id="cb3-18"><a href="#cb3-18"></a></span>
<span id="cb3-19"><a href="#cb3-19"></a>   <span class="kw">if [[</span> <span class="va">$Volume_s</span> <span class="ot">==</span> *<span class="st">&quot;</span><span class="va">$volume</span><span class="st">&quot;</span>*<span class="kw"> ]]</span> <span class="kw">&amp;&amp; [[</span> <span class="va">$Volume_s</span> <span class="ot">==</span> *<span class="st">&quot;</span><span class="va">$volume</span><span class="st">&quot;</span>*<span class="kw"> ]]</span>; <span class="kw">then</span></span>
<span id="cb3-20"><a href="#cb3-20"></a>   <span class="bu">echo</span> <span class="st">&quot;&lt;fc=</span><span class="va">$COLOR</span><span class="st">&gt;(dh)&lt;/fc&gt;&lt;fc=#8CD0D3&gt;</span><span class="va">$vol</span><span class="st">%&lt;/fc&gt;&quot;</span></span>
<span id="cb3-21"><a href="#cb3-21"></a>   <span class="kw">fi</span></span>
<span id="cb3-22"><a href="#cb3-22"></a></span>
<span id="cb3-23"><a href="#cb3-23"></a>      <span class="kw">if [[</span> <span class="va">$Volume_s</span> <span class="ot">==</span> *<span class="st">&quot;</span><span class="va">$volume</span><span class="st">&quot;</span>*<span class="kw"> ]]</span> <span class="kw">&amp;&amp; [[</span> <span class="va">$Volume_h</span> <span class="ot">!=</span> *<span class="st">&quot;</span><span class="va">$volume</span><span class="st">&quot;</span>*<span class="kw"> ]]</span>; <span class="kw">then</span></span>
<span id="cb3-24"><a href="#cb3-24"></a>         <span class="bu">echo</span> <span class="st">&quot;&lt;fc=</span><span class="va">$COLOR</span><span class="st">&gt;(d)&lt;/fc&gt;&lt;fc=#8CD0D3&gt;</span><span class="va">$vol</span><span class="st">%&lt;/fc&gt;&quot;</span></span>
<span id="cb3-25"><a href="#cb3-25"></a>      <span class="kw">else</span></span>
<span id="cb3-26"><a href="#cb3-26"></a>           <span class="kw">if [[</span> <span class="va">$Volume_h</span> <span class="ot">==</span> *<span class="st">&quot;</span><span class="va">$volume</span><span class="st">&quot;</span>*<span class="kw"> ]]</span>; <span class="kw">then</span></span>
<span id="cb3-27"><a href="#cb3-27"></a>              <span class="bu">echo</span> <span class="st">&quot;&lt;fc=</span><span class="va">$COLOR</span><span class="st">&gt;(h)&lt;/fc&gt;&lt;fc=#8CD0D3&gt;</span><span class="va">$vol</span><span class="st">%&lt;/fc&gt;&quot;</span></span>
<span id="cb3-28"><a href="#cb3-28"></a>           <span class="kw">else</span></span>
<span id="cb3-29"><a href="#cb3-29"></a>              <span class="bu">echo</span> <span class="st">&quot;&lt;fc=#8CD0D3&gt;MM&lt;/fc&gt;&quot;</span></span>
<span id="cb3-30"><a href="#cb3-30"></a>           <span class="kw">fi</span></span>
<span id="cb3-31"><a href="#cb3-31"></a>      <span class="kw">fi</span></span>
<span id="cb3-32"><a href="#cb3-32"></a></span>
<span id="cb3-33"><a href="#cb3-33"></a><span class="bu">exit</span> 0</span></code></pre></div>
<hr />
<p>Этот скрипт выводит на экран текущий уровень громкости в процентах и показывает какой выходной канал является активным на данный момент. Всего может быть семь вариантов:</p>
<ul>
<li><code>(d)80%</code> - звук идёт через динамики;</li>
<li><code>(h)80%</code> - звук идёт через наушники;</li>
<li><code>(d)MM%</code> - звук идёт через динамики, режим Mute;</li>
<li><code>(h)MM%</code> - звук идёт через наушники; режим Mute;</li>
<li><code>(dh)80%</code> - звук идёт через динамики и наушники;</li>
<li><code>(dh)MM%</code> - звук идёт через динамики и наушники, режим Mute.</li>
</ul>
<blockquote>
<p>С утра, проснувшись с бодуна<br />
Mеня трясёт и глючит…<br />
© Сергей Шнуров</p>
</blockquote>
<p>Согласитесь, что в жизни всякое бывает, и такое тоже. И на этот случай я предусмотрел ещё один вариант:</p>
<ul>
<li><code>MM</code> - динамики и наушники отключены.</li>
</ul>
<p>Выводим результат работы скрипта в xmobar. Вносим изменения в файл конфигурации <code>.xmobarrc</code>:</p>
<pre><code>...
commands = [
           ...
           Run Com &quot;/путь_до_нашего_скрипта/vol&quot; [] &quot;vol&quot; 10,
           ...
           ]
...
, template = &quot; %StdinReader% }{ ... %vol% ...}
</code></pre>
<p>Теперь в xmobar’е есть информация о текущем уровне громкости и и звуковом канале. И мы можем с помощью горячих клавиш уменьшать или увеличивать громкость, либо выключить её совсем, включив режим Mute.</p>
<p>Настала очередь для второй хотелки - переключателе между выходами с динамиков на наушники и наоборот. Для этого я написал второй скрипт, обозвав его <code>alsamixer</code>:</p>
<hr />
<div class="sourceCode" id="cb5"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb5-1"><a href="#cb5-1"></a><span class="co">#! /bin/bash</span></span>
<span id="cb5-2"><a href="#cb5-2"></a></span>
<span id="cb5-3"><a href="#cb5-3"></a><span class="va">volume=</span><span class="st">&quot;[on]&quot;</span></span>
<span id="cb5-4"><a href="#cb5-4"></a></span>
<span id="cb5-5"><a href="#cb5-5"></a><span class="va">Volume_s=</span><span class="st">&quot;</span><span class="kw">`</span><span class="ex">amixer</span> get Speaker Playback Volume <span class="kw">|</span> <span class="fu">sed</span> <span class="st">&#39;6!d&#39;</span> <span class="kw">|</span> <span class="kw">\</span></span>
<span id="cb5-6"><a href="#cb5-6"></a>         <span class="fu">sed</span> -r <span class="st">&#39;s/^[^B]+//&#39;</span> <span class="kw">|</span> <span class="fu">sed</span> -r <span class="st">&#39;s/^[^[]+//&#39;</span><span class="kw">`</span><span class="st">&quot;</span></span>
<span id="cb5-7"><a href="#cb5-7"></a>         </span>
<span id="cb5-8"><a href="#cb5-8"></a><span class="va">Volume_h=</span><span class="st">&quot;</span><span class="kw">`</span><span class="ex">amixer</span> get Headphone Playback Volume <span class="kw">|</span> <span class="fu">sed</span> <span class="st">&#39;6!d&#39;</span> <span class="kw">|</span> <span class="kw">\</span></span>
<span id="cb5-9"><a href="#cb5-9"></a>         <span class="fu">sed</span> -r <span class="st">&#39;s/^[^B]+//&#39;</span> <span class="kw">|</span> <span class="fu">sed</span> -r <span class="st">&#39;s/^[^[]+//&#39;</span><span class="kw">`</span><span class="st">&quot;</span></span>
<span id="cb5-10"><a href="#cb5-10"></a></span>
<span id="cb5-11"><a href="#cb5-11"></a><span class="kw">if [[</span> <span class="va">$Volume_s</span> <span class="ot">==</span> *<span class="st">&quot;</span><span class="va">$volume</span><span class="st">&quot;</span>*<span class="kw"> ]]</span> <span class="kw">&amp;&amp; [[</span> <span class="va">$Volume_s</span> <span class="ot">==</span> *<span class="st">&quot;</span><span class="va">$volume</span><span class="st">&quot;</span>*<span class="kw"> ]]</span>; <span class="kw">then</span></span>
<span id="cb5-12"><a href="#cb5-12"></a>   <span class="ex">amixer</span> sset Headphone mute</span>
<span id="cb5-13"><a href="#cb5-13"></a>   <span class="ex">amixer</span> sset Speaker unmute</span>
<span id="cb5-14"><a href="#cb5-14"></a><span class="kw">fi</span></span>
<span id="cb5-15"><a href="#cb5-15"></a></span>
<span id="cb5-16"><a href="#cb5-16"></a></span>
<span id="cb5-17"><a href="#cb5-17"></a><span class="kw">if [[</span> <span class="va">$Volume_s</span> <span class="ot">==</span> *<span class="st">&quot;</span><span class="va">$volume</span><span class="st">&quot;</span>*<span class="kw"> ]]</span> <span class="kw">&amp;&amp; [[</span> <span class="va">$Volume_h</span> <span class="ot">!=</span> *<span class="st">&quot;</span><span class="va">$volume</span><span class="st">&quot;</span>*<span class="kw"> ]]</span>; <span class="kw">then</span></span>
<span id="cb5-18"><a href="#cb5-18"></a>   <span class="ex">amixer</span> sset Headphone unmute</span>
<span id="cb5-19"><a href="#cb5-19"></a>   <span class="ex">amixer</span> sset Speaker mute</span>
<span id="cb5-20"><a href="#cb5-20"></a><span class="kw">else</span></span>
<span id="cb5-21"><a href="#cb5-21"></a></span>
<span id="cb5-22"><a href="#cb5-22"></a>     <span class="kw">if [[</span> <span class="va">$Volume_h</span> <span class="ot">==</span> *<span class="st">&quot;</span><span class="va">$volume</span><span class="st">&quot;</span>*<span class="kw"> ]]</span>; <span class="kw">then</span></span>
<span id="cb5-23"><a href="#cb5-23"></a>        <span class="ex">amixer</span> sset Headphone mute</span>
<span id="cb5-24"><a href="#cb5-24"></a>        <span class="ex">amixer</span> sset Speaker unmute</span>
<span id="cb5-25"><a href="#cb5-25"></a>     <span class="kw">fi</span></span>
<span id="cb5-26"><a href="#cb5-26"></a><span class="kw">fi</span></span>
<span id="cb5-27"><a href="#cb5-27"></a></span>
<span id="cb5-28"><a href="#cb5-28"></a><span class="bu">exit</span> 0</span></code></pre></div>
<hr />
<p>Тут всё просто. Если включены динамики, то скрипт отрабатывает на их выключение и включение наушников. Также и наоборот, с наушников на динамики. В случае, когда в <code>xmobar</code> будет значение <code>MM</code>, скрипт включит динамики. Осталось определить горячую клавишу, по нажатию которой, будет выполняться скрипт. Редактируем <code>xmonad.hs</code>:</p>
<div class="sourceCode" id="cb6"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb6-1"><a href="#cb6-1"></a><span class="op">...</span></span>
<span id="cb6-2"><a href="#cb6-2"></a>myKeys <span class="ot">=</span> [</span>
<span id="cb6-3"><a href="#cb6-3"></a>         <span class="op">...</span></span>
<span id="cb6-4"><a href="#cb6-4"></a>         , ((<span class="dv">0</span>   , <span class="bn">0x0</span>), spawn <span class="st">&quot;/путь_до_нашего_скрипта/alsamixer&quot;</span>)</span>
<span id="cb6-5"><a href="#cb6-5"></a>         <span class="op">...</span></span>
<span id="cb6-6"><a href="#cb6-6"></a>         ]</span></code></pre></div>
<p>На этом сегодня всё. Вопрос об управлении громкостью и её визуальном контроле в системе без использования каких-либо дополнительных программ снят.</p>]]></description>
    <pubDate>Sun, 25 Mar 2018 00:00:00 UT</pubDate>
    <guid>https://chubaduba.github.io//posts/2018-03-25-1.html</guid>
    <dc:creator>ChubaDuba</dc:creator>
</item>
<item>
    <title>Мой выбор - Alpine e-mail клиент.</title>
    <link>https://chubaduba.github.io//posts/2018-03-21-1.html</link>
    <description><![CDATA[<p>В своё время, когда в качестве рабочего окружения я использовал <code>Gnome 2</code>, работу почтового клиента выполнял <a href="http://www.claws-mail.org/">Claws Mail</a>. Почтовик, кстати, отличный, всё что от него требовалось, выполнял на 100%. Но после отказа от использования на десктопе рабочих окружений, встал вопрос о его замене на что-то более легковесное, с минимумом зависимостей и консольное. Консольное по той причине, что считаю отправку и получение электронной почты задачей тривиальной, которая должна решаться легко и быстро.</p>
<p>И такое решение было найдено! Консольный почтовый клиент <a href="https://www.washington.edu/alpine/">Alpine</a>, который разработали в <a href="https://www.washington.edu/">Вашингтонском Университете</a>. В репозиториях Debian он есть, устанавливается обычным способом:</p>
<pre><code>$ sudo apt-get install alpine
</code></pre>
<p>После успешной установки, запустить программу можно из терминала командой:</p>
<pre><code>$ alpine
</code></pre>
<figure>
<img src="/images/alpine.png" alt="" /><figcaption>Alpine. Главное окно.</figcaption>
</figure>
<p>Стоит отметить, что программа не имеет русского интерфейса, но это не мешает комфортно ей пользоваться. Я не буду в этом посте подробно описывать настройки и работу Alpine. Заинтересовавшимся найти эту информацию в интернете не составит труда. А вот разместить ссылку на видеоролик, в котором показано как настроить Alpine на работу с почтовым ящиком <code>Gmail</code>, думаю будет не лишним, пусть на забугорном языке, но всё очень подробно показано:</p>
<iframe width="100%" height="240" src="https://www.youtube.com/embed/SNYLDDx4Mro" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen>
</iframe>]]></description>
    <pubDate>Wed, 21 Mar 2018 00:00:00 UT</pubDate>
    <guid>https://chubaduba.github.io//posts/2018-03-21-1.html</guid>
    <dc:creator>ChubaDuba</dc:creator>
</item>

    </channel>
</rss>
