<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"
    xmlns:dc="http://purl.org/dc/elements/1.1/">
    <channel>
        <title>ChubaDuba - Все посты</title>
        <link>https://chubaduba.github.io/</link>
        <description><![CDATA[Блог ChubaDuba]]></description>
        <atom:link href="https://chubaduba.github.io//rss.xml" rel="self"
                   type="application/rss+xml" />
        <lastBuildDate>Fri, 07 Sep 2018 00:00:00 UT</lastBuildDate>
        <item>
    <title>Debian 9 Stretch. Атомонтическое монтирование USB флешек, карточек SD и дисков CD.</title>
    <link>https://chubaduba.github.io//posts/2018-09-07-1.html</link>
    <description><![CDATA[<p>Если вы как и я не используете в своей системе окружение рабочего стола, а пользуетесь каким-либо оконным менеджером, то рано или поздно столкнётесь с таким вопросом как организовать автоматическое монтирование USB флешек, карточек SD и дисков СD.</p>
<p>Существует много способов реализовать это. В сети можно найти кучу информации по этому вопросу. Сегодня я расскажу как решил эту задачу у себя в системе.</p>
<p>Для монтирования я решил использовать <a href="https://packages.debian.org/stretch/udisks2">udisks2</a>. Чтобы не возникало проблем с правами на чтение и запись примонтированного устройства, потребуется установить пакет <a href="https://packages.debian.org/stretch/policykit-1">policykit-1</a>. Само монтирование будет осуществлять утилита <a href="https://packages.debian.org/stretch/udiskie">udiskie</a> - это фронтенд для <code>Udisks</code> написаный на языке Python.</p>
<blockquote>
<p>Страничку разработчика udiskie можно посмотреть <a href="https://github.com/coldfix/udiskie">тут</a>.</p>
</blockquote>
<p>Устанавливаем все эти три пакета. Чтобы не тащить в систему ненужные пакеты, пропишем, что ставить будем без рекомендованных зависимостей:</p>
<pre><code>$ sudo apt-get install udisks2 policykit-1 udiskie --no-install-recommends
</code></pre>
<p>По умолчанию <code>udisks2</code> будет монтировать устройства в директорию <code>/media/$USER/</code>. Я посчитал это лишним и решил монтировать в директорию <code>/media</code>. Для этого создал правило <code>/etc/udev/rules.d/99-udisks2.rules</code>:</p>
<pre><code># UDISKS_FILESYSTEM_SHARED
# ==1: mount filesystem to a shared directory (/media/VolumeName)
# ==0: mount filesystem to a private directory (/run/media/$USER/VolumeName)
# See udisks(8)
ENV{ID_FS_USAGE}==&quot;filesystem|other|crypto&quot;, ENV{UDISKS_FILESYSTEM_SHARED}=&quot;1&quot;
</code></pre>
<p>Осталось сделать последний шаг, настроить запуск <code>udiskie</code> при старте нашего оконного менеджера. Для этого в файл <code>~/.xinitrc</code> я добавил следующую строчку:</p>
<pre><code>udiskie --use-udisks2 &amp;
</code></pre>
<p>На этом настройку монтирования можно считать законченной.</p>]]></description>
    <pubDate>Fri, 07 Sep 2018 00:00:00 UT</pubDate>
    <guid>https://chubaduba.github.io//posts/2018-09-07-1.html</guid>
    <dc:creator>ChubaDuba</dc:creator>
</item>
<item>
    <title>Делаем десятичную точку вместо запятой.</title>
    <link>https://chubaduba.github.io//posts/2018-08-06-1.html</link>
    <description><![CDATA[<p>Раньше я уже <a href="https://chubaduba.github.io/posts/2018-06-04-1.html">упоминал</a> о том, что на своём компьютере использую калькулятор <code>calc</code>. В этом калькуляторе десятичным разделителем является точка. В тоже время, например, в <code>OpenOffice Calc</code> в качестве разделителя целой и дробной части выступает запятая. Чтобы привести всё к единому знаменателю и сделать во всей системе точку разделителем целой и дробной части, нужно внести следующие изменения:</p>
<p>Делаем точку разделителем целой и дробной части во всей системе.<br />
Редактируем файл <code>/usr/share/i18n/locales/ru_RU</code>. Находим строчку:</p>
<pre><code>decimal_point &quot;&lt;U002C&gt;&quot;
</code></pre>
<p>меняем на строчку:</p>
<pre><code>decimal_point &quot;&lt;U002E&gt;&quot;
</code></pre>
<p>После сохранения изменений в файле, необходимо переконфигурировать локаль, выполнив следующую команду в терминале:</p>
<pre><code># dpkg-reconfigure locales
</code></pre>
<p>Меняем запятую на точку на цифровой клавиатуре.<br />
Открываем на редактирование файл <code>/usr/share/X11/xkb/symbols/ru</code>. Находим строчку:</p>
<pre><code>include &quot;kpdl(comma)&quot;
</code></pre>
<p>Eё нужно закомментировать следующим образом:</p>
<pre><code>//include &quot;kpdl(comma)&quot;
</code></pre>
<p>Остаётся заменить запятую на точку в OpenOffice. Для этого я поменял параметр в настройках языка в “Локальные настройки” на “Английский (США)”:</p>
<p><a href="http://www.imagebam.com/image/c2844d938023714"><img src="http://thumbs2.imagebam.com/f0/3d/df/c2844d938023714.jpg" alt="imagebam.com"></a></p>]]></description>
    <pubDate>Mon, 06 Aug 2018 00:00:00 UT</pubDate>
    <guid>https://chubaduba.github.io//posts/2018-08-06-1.html</guid>
    <dc:creator>ChubaDuba</dc:creator>
</item>
<item>
    <title>Minimalistic wallpaper</title>
    <link>https://chubaduba.github.io//posts/2018-07-25-1.html</link>
    <description><![CDATA[<blockquote>
<p>Идею взял <a href="https://stmed.net/wallpaper-25966">отюда</a></p>
</blockquote>
<p><a href="http://www.imagebam.com/image/5113f1928355524" target="_blank"><img src="http://thumbs2.imagebam.com/23/40/9c/5113f1928355524.jpg" alt="imagebam.com"></a></p>]]></description>
    <pubDate>Wed, 25 Jul 2018 00:00:00 UT</pubDate>
    <guid>https://chubaduba.github.io//posts/2018-07-25-1.html</guid>
    <dc:creator>ChubaDuba</dc:creator>
</item>
<item>
    <title>ncdc – консольный клиент DC++</title>
    <link>https://chubaduba.github.io//posts/2018-07-22-1.html</link>
    <description><![CDATA[<p>Многие скажут, что <a href="https://ru.wikipedia.org/wiki/Direct_Connect">Direct Connect</a> давно умер, но как не странно, лично я переодически этим пользуюсь. Тем более, под Linux сущетвует лёгковесный, шустрый и надёжный консольный клиент <a href="https://dev.yorhel.nl/ncdc">ncdc</a>. Сегодня речь пойдёт о его настройке и использовании в Debian GNU/Linux.</p>
<p>Первое, что нужно сделать - это подготовить порты, которые будет использовать <code>ncdc</code>. У каждого эта настройка будет зависеть от того, как ваш компьютер подключён к интернету. Я опишу свой вариант: имеется динамический IP адрес, интернет раздаёт Wi-Fi роутер. Т.е. другими словами нахожусь я за NAT.</p>
<p>Настраиваем роутер…<br />
Сделаем так, чтобы наш компьютер всегда получал один и тот же внутренний IP адрес. Для этого из диапазона IP адресов, которые выдаёт<code>DHCP Server</code> зададим произвольный IP адрес и привяжем его к MAC адресу сетевой карты нашего компьютера. В разных роутерах интерфейс выглядит по разному. В моём случае это выглядит вот так:</p>
<p><a href="http://www.imagebam.com/image/88f0e1905072814"><img src="http://thumbs2.imagebam.com/23/65/f3/88f0e1905072814.jpg" alt="imagebam.com"></a></p>
<p>Узнать MAC адрес сетевой карты можно выполнив в терминале команду:</p>
<pre><code>$ ip a
</code></pre>
<p>Теперь наш компьютер при подключении будет иметь постоянный внутренний IP адрес. В моём примере 192.168.1.100. Следующим шагом нужно пробросить порты, с которыми будет работать <code>ncdc</code>. Я для себя выбрал 20000 порт tcp и 21000 порт udp. Заходим в настройки <code>NAT Setting - Virtual Server</code> и вносим изменения:</p>
<p><a href="http://www.imagebam.com/image/284a9c905079134"><img src="http://thumbs2.imagebam.com/2d/23/4e/284a9c905079134.jpg" alt="imagebam.com"></a></p>
<p>На этом настройка роутера закончена. Теперь необходимо открыть порты. Опять же сделать это можно по разному в зависимости от того, чем вы пользуетесь в вашей системе. У меня установлен фаервол <code>ufw</code> поэтому открою я порты следующими командами:</p>
<pre><code>$ sudo ufw allow 20000
$ sudo ufw allow 21000
</code></pre>
<p>Всё, с портами мы закончили, можно переходить к клиенту <code>ncdc</code>. В репозиториях Debian его нет. Как его установить можно прочитать на <a href="https://dev.yorhel.nl/ncdc/install">сайте</a> разработчика. Чтобы при запуске <code>ncdc</code> не ругался на отсутствие <code>GeoIP</code> установим в систему пакет <code>geoip-database</code>:</p>
<pre><code>$ sudo apt-get install geoip-database
</code></pre>
<p>После первого запуска увидим вот такое окно:</p>
<p><a href="http://www.imagebam.com/image/0153df905086114"><img src="http://thumbs2.imagebam.com/85/d0/f6/0153df905086114.jpg" alt="imagebam.com"></a></p>
<p>Пропишем наши подготовленные порты:</p>
<pre><code>/set active_port 20000
/set active_udp_port 21000
/set active true 
</code></pre>
<p>Установим количество соединений:</p>
<pre><code>/set connection 10
</code></pre>
<p>Задаём свой ник по умолчанию:</p>
<pre><code> /set nick ваш_nickname
 </code></pre>
<p>Установим русскую кодировку по умолчанию:</p>
<pre><code>/set encoding CP1251
</code></pre>
<p>Теперь можно подключиться к какому-нибудь хабу.</p>
<blockquote>
<p>Список доступных хабов можно посмотреть по этой <a href="https://dchublist.ru/">ссылке</a>.</p>
</blockquote>
<p>Например, подключимся к хабу с названием <code>*Новосибирск - Forever*</code>. Обзовём его <code>novosibirsk</code>. Подключаемся:</p>
<pre><code>/open novosibirsk
/connect dchub://novosibirsk-forever.ru
</code></pre>
<p><a href="http://www.imagebam.com/image/318143905095054"><img src="http://thumbs2.imagebam.com/c4/f7/47/318143905095054.jpg" alt="imagebam.com"></a></p>
<p>Для того чтобы открыть окно со списком пользователей, нужно нажать комбинацию клавиш <code>Alt + u</code>:</p>
<p><a href="http://www.imagebam.com/image/ccf778905096814"><img src="http://thumbs2.imagebam.com/a5/7a/4f/ccf778905096814.jpg" alt="imagebam.com"></a></p>
<p>Переход между окнами осуществляется нажатием клавиши <code>Alt</code> и цифры, соответствующей номеру окна. Писать о всех возможных командах и доступных горячих клавишах смысла не вижу, так как всё это подробно описано в <a href="https://dev.yorhel.nl/ncdc/man">мануале</a> на сайте разработчика программы.</p>]]></description>
    <pubDate>Sun, 22 Jul 2018 00:00:00 UT</pubDate>
    <guid>https://chubaduba.github.io//posts/2018-07-22-1.html</guid>
    <dc:creator>ChubaDuba</dc:creator>
</item>
<item>
    <title>Zenburn GTK2 color theme</title>
    <link>https://chubaduba.github.io//posts/2018-07-06-1.html</link>
    <description><![CDATA[<p>Очень давно использую у себя перекрашенную в цвета <code>zenburn</code> тему <code>Clearlooks</code>:</p>
<p><a href="http://www.imagebam.com/image/f60449912122864"><img src="http://thumbs2.imagebam.com/f3/f1/7b/f60449912122864.jpg" alt="imagebam.com"></a></p>
<details>
<p><summary><code>gtkrc</code></summary></p>
<hr />
<pre><code># gtkrc Clearlooks Zenburn colors.

gtk-color-scheme = &quot;base_color:#3F3F3F\nfg_color:#DCDCCC\ntooltip_fg_color:#000000\nselected_bg_color:#1E2320\nselected_fg_color:#F0E0AF\ntext_color:#DCDCCC\nbg_color:#4F4F4F\ntooltip_bg_color:#F5F5B5&quot;

style &quot;default&quot; {
	xthickness = 1
	ythickness = 1

	#######################
	# Style Properties
	#######################
	GtkButton::child-displacement-x = 1
	GtkButton::child-displacement-y = 1
	GtkButton::default-border = { 0, 0, 0, 0 }
	GtkButton::image-spacing = 4
	GtkToolButton::icon-spacing = 4

	GtkCheckButton::indicator-size = 14

	GtkPaned::handle-size = 6

	GtkRange::trough-border = 0
	GtkRange::slider-width = 15
	GtkRange::stepper-size = 15

	GtkScale::slider-length = 23
	GtkScale::trough-side-details = 1

	GtkScrollbar::min-slider-length = 30
	GtkMenuBar::internal-padding = 0
	GtkExpander::expander-size = 16
	GtkToolbar::internal-padding = 1
	GtkTreeView::expander-size = 14
	GtkTreeView::vertical-separator = 0

	GtkMenu::horizontal-padding = 0
	GtkMenu::vertical-padding = 0

	WnckTasklist::fade-overlay-rect = 0
	# The following line hints to gecko (and possibly other appliations)
	# that the entry should be drawn transparently on the canvas.
	# Without this, gecko will fill in the background of the entry.
	GtkEntry::honors-transparent-bg-hint = 1

	GtkEntry::progress-border = { 2, 2, 2, 2 }

	####################
	# Color Definitions
	####################
	bg[NORMAL]        = @bg_color
	bg[PRELIGHT]      = shade (1.02, @bg_color)
	bg[SELECTED]      = @selected_bg_color
	bg[INSENSITIVE]   = @bg_color
	bg[ACTIVE]        = shade (0.9, @bg_color)

	fg[NORMAL]        = @fg_color
	fg[PRELIGHT]      = @fg_color
	fg[SELECTED]      = @selected_fg_color
	fg[INSENSITIVE]   = darker (@bg_color)
	fg[ACTIVE]        = @fg_color

	text[NORMAL]      = @text_color
	text[PRELIGHT]    = @text_color
	text[SELECTED]    = @selected_fg_color
	text[INSENSITIVE] = darker (@bg_color)
	text[ACTIVE]      = @selected_fg_color

	base[NORMAL]      = @base_color
	base[PRELIGHT]    = shade (0.95, @bg_color)
	base[SELECTED]    = @selected_bg_color
	base[INSENSITIVE] = @bg_color
	base[ACTIVE]      = shade (0.9, @selected_bg_color)

	engine &quot;clearlooks&quot; {
		colorize_scrollbar = FALSE
		reliefstyle = 1
		menubarstyle = 2
		toolbarstyle = 1
		animation = FALSE
		radius = 3.0
		style = GUMMY

		# Set a hint to disable backward compatibility fallbacks.
		hint = &quot;use-hints&quot;
	}
}

style &quot;wide&quot; {
	xthickness = 2
	ythickness = 2
}

style &quot;wider&quot; {
	xthickness = 3
	ythickness = 3
}

style &quot;entry&quot; {
	xthickness = 3
	ythickness = 3

	bg[SELECTED] = mix (0.4, @selected_bg_color, @base_color)
	fg[SELECTED] = @text_color

	engine &quot;clearlooks&quot; {
		focus_color = shade (0.65, @selected_bg_color)
	}
}

style &quot;spinbutton&quot; {

	engine &quot;clearlooks&quot; {
		hint = &quot;spinbutton&quot;
	}
}

style &quot;scale&quot; {
	xthickness = 2
	ythickness = 2

	engine &quot;clearlooks&quot; {
		hint = &quot;scale&quot;
	}
}

style &quot;vscale&quot; {

	engine &quot;clearlooks&quot; {
		hint = &quot;vscale&quot;
	}
}

style &quot;hscale&quot; {

	engine &quot;clearlooks&quot; {
		hint = &quot;hscale&quot;
	}
}

style &quot;scrollbar&quot; {
	xthickness = 2
	ythickness = 2

	engine &quot;clearlooks&quot; {
		hint = &quot;scrollbar&quot;
	}
}

style &quot;hscrollbar&quot; {

	engine &quot;clearlooks&quot; {
		hint = &quot;hscrollbar&quot;
	}
}

style &quot;vscrollbar&quot; {

	engine &quot;clearlooks&quot; {
		hint = &quot;vscrollbar&quot;
	}
}

style &quot;notebook_bg&quot; {

	bg[NORMAL]        = shade (1.02, @bg_color)
}

style &quot;button&quot; {
	xthickness = 3
	ythickness = 3

	bg[NORMAL]        = shade (1.04, @bg_color)
	bg[PRELIGHT]      = shade (1.06, @bg_color)
	bg[ACTIVE]        = shade (0.85, @bg_color)
}

# The color is changed by the notebook_bg style, this style
# changes the x/ythickness
style &quot;notebook&quot; {
	xthickness = 3
	ythickness = 3
}

style &quot;statusbar&quot; {

	engine &quot;clearlooks&quot; {
		hint = &quot;statusbar&quot;
	}
}

style &quot;comboboxentry&quot; {

	engine &quot;clearlooks&quot; {
		# Note:
		# If you set the appears-as-list option on comboboxes in the theme,
		# then you should set this hint on the combobox instead.
		hint = &quot;comboboxentry&quot;
	}
}

style &quot;menubar&quot; {

	engine &quot;clearlooks&quot; {
		hint = &quot;menubar&quot;
	}
}

style &quot;menu&quot; {
	xthickness = 0
	ythickness = 0

	bg[NORMAL]        = shade (1.08, @bg_color)

	engine &quot;clearlooks&quot; {
		radius = 0.0
	}
}

style &quot;menu_item&quot; {
	xthickness = 2
	ythickness = 3

	fg[PRELIGHT]      = @selected_fg_color
}

# This style is there to modify the separator menu items. The goals are:
# 1. Get a specific height.
# 2. The line should go to the edges (ie. no border at the left/right)
style &quot;separator_menu_item&quot; {
	xthickness = 1
	ythickness = 0

	GtkSeparatorMenuItem::horizontal-padding = 0
	GtkWidget::wide-separators = 1
	GtkWidget::separator-width = 1
	GtkWidget::separator-height = 7
}

style &quot;frame_title&quot; {

	fg[NORMAL]        = lighter (@fg_color)
}

style &quot;treeview&quot; {

	engine &quot;clearlooks&quot; {
		hint = &quot;treeview&quot;
	}
}

# The almost useless progress bar style
style &quot;progressbar&quot; {
	xthickness = 1
	ythickness = 1

	fg[PRELIGHT]      = @selected_fg_color

	engine &quot;clearlooks&quot; {
		# Explicitly set the radius for the progress bars inside menu items.
		radius = 3.0

		hint = &quot;progressbar&quot;
	}
}

# This style is based on the default style, so that the colors from the button
# style are overriden again.
style &quot;treeview_header&quot; = &quot;default&quot; {
	xthickness = 2
	ythickness = 1

	engine &quot;clearlooks&quot; {
		hint = &quot;treeview-header&quot;
	}
}

style &quot;tooltips&quot; {
	xthickness = 4
	ythickness = 4

	bg[NORMAL]        = @tooltip_bg_color
	fg[NORMAL]        = @tooltip_fg_color
}

style &quot;nautilus_location&quot; {

	bg[NORMAL]        = mix (0.60, shade (1.05, @bg_color), @selected_bg_color)
}

# Wrokaroudn style for places where the text color is used instead of the fg color.
style &quot;text_is_fg_color_workaround&quot; {

	text[NORMAL]      = @fg_color
	text[PRELIGHT]    = @fg_color
	text[SELECTED]    = @selected_fg_color
	text[ACTIVE]      = @fg_color
	text[INSENSITIVE] = darker (@bg_color)
}

# Workaround style for menus where the text color is used instead of the fg color.
style &quot;menuitem_text_is_fg_color_workaround&quot; {

	text[NORMAL]      = @fg_color
	text[PRELIGHT]    = @selected_fg_color
	text[SELECTED]    = @selected_fg_color
	text[ACTIVE]      = @fg_color
	text[INSENSITIVE] = darker (@bg_color)
}

# Workaround style for places where the fg color is used instead of the text color.
style &quot;fg_is_text_color_workaround&quot; {

	fg[NORMAL]        = @text_color
	fg[PRELIGHT]      = @text_color
	fg[SELECTED]      = @selected_fg_color
	fg[ACTIVE]        = @selected_fg_color
	fg[INSENSITIVE]   = darker (@bg_color)
}

# Style to set the toolbar to use a flat style. This is because the &quot;New&quot; button in
# Evolution is not drawn transparent. So if there is a gradient in the background it will
# look really wrong.
# See http://bugzilla.gnome.org/show_bug.cgi?id=446953.
style &quot;evo_new_button_workaround&quot; {

	engine &quot;clearlooks&quot; {
		toolbarstyle = 0
	}
}


###############################################################################
# The following part of the gtkrc applies the different styles to the widgets.
###############################################################################

# The default style is applied to every widget
class &quot;GtkWidget&quot; style &quot;default&quot;

class &quot;GtkSeparator&quot; style &quot;wide&quot;
class &quot;GtkFrame&quot; style &quot;wide&quot;
class &quot;GtkCalendar&quot; style &quot;wide&quot;
class &quot;GtkEntry&quot; style &quot;entry&quot;

class &quot;GtkSpinButton&quot; style &quot;spinbutton&quot;
class &quot;GtkScale&quot; style &quot;scale&quot;
class &quot;GtkVScale&quot; style &quot;vscale&quot;
class &quot;GtkHScale&quot; style &quot;hscale&quot;
class &quot;GtkScrollbar&quot; style &quot;scrollbar&quot;
class &quot;GtkHScrollbar&quot; style &quot;hscrollbar&quot;
class &quot;GtkVScrollbar&quot; style &quot;vscrollbar&quot;

# General matching follows. The order is choosen so that the right styles override
# each other. EG. progressbar needs to be more important than the menu match.
widget_class &quot;*&lt;GtkNotebook&gt;&quot; style &quot;notebook_bg&quot;
# This is not perfect, it could be done better.
# (That is modify *every* widget in the notebook, and change those back that
# we really don&#39;t want changed)
widget_class &quot;*&lt;GtkNotebook&gt;*&lt;GtkEventBox&gt;&quot; style &quot;notebook_bg&quot;
widget_class &quot;*&lt;GtkNotebook&gt;*&lt;GtkDrawingArea&gt;&quot; style &quot;notebook_bg&quot;
widget_class &quot;*&lt;GtkNotebook&gt;*&lt;GtkLayout&gt;&quot; style &quot;notebook_bg&quot;
widget_class &quot;*&lt;GtkNotebook&gt;*&lt;GtkViewport&gt;&quot; style &quot;notebook_bg&quot;
widget_class &quot;*&lt;GtkNotebook&gt;*&lt;GtkScrolledWindow&gt;&quot; style &quot;notebook_bg&quot;

widget_class &quot;*&lt;GtkButton&gt;&quot; style &quot;button&quot;
widget_class &quot;*&lt;GtkNotebook&gt;&quot; style &quot;notebook&quot;
widget_class &quot;*&lt;GtkStatusbar&gt;*&quot; style &quot;statusbar&quot;

widget_class &quot;*&lt;GtkComboBoxEntry&gt;*&quot; style &quot;comboboxentry&quot;
widget_class &quot;*&lt;GtkCombo&gt;*&quot; style &quot;comboboxentry&quot;

widget_class &quot;*&lt;GtkMenuBar&gt;*&quot; style &quot;menubar&quot;
widget_class &quot;*&lt;GtkMenu&gt;*&quot; style &quot;menu&quot;
widget_class &quot;*&lt;GtkMenuItem&gt;*&quot; style &quot;menu_item&quot;
widget_class &quot;*&lt;GtkSeparatorMenuItem&gt;*&quot; style &quot;separator_menu_item&quot;

widget_class &quot;*.&lt;GtkFrame&gt;.&lt;GtkLabel&gt;&quot; style &quot;frame_title&quot;
widget_class &quot;*.&lt;GtkTreeView&gt;*&quot; style &quot;treeview&quot;

widget_class &quot;*&lt;GtkProgress&gt;&quot; style &quot;progressbar&quot;

# Treeview headers (and similar stock GTK+ widgets)
widget_class &quot;*.&lt;GtkTreeView&gt;.&lt;GtkButton&gt;&quot; style &quot;treeview_header&quot;
widget_class &quot;*.&lt;GtkCTree&gt;.&lt;GtkButton&gt;&quot; style &quot;treeview_header&quot;
widget_class &quot;*.&lt;GtkList&gt;.&lt;GtkButton&gt;&quot; style &quot;treeview_header&quot;
widget_class &quot;*.&lt;GtkCList&gt;.&lt;GtkButton&gt;&quot; style &quot;treeview_header&quot;

# The window of the tooltip is called &quot;gtk-tooltip&quot;
##################################################################
# FIXME:
# This will not work if one embeds eg. a button into the tooltip.
# As far as I can tell right now we will need to rework the theme
# quite a bit to get this working correctly.
# (It will involve setting different priorities, etc.)
##################################################################
widget &quot;gtk-tooltip*&quot; style &quot;tooltips&quot;

##########################################################################
# Following are special cases and workarounds for issues in applications.
##########################################################################

# Workaround for the evolution ETable (bug #527532)
widget_class &quot;*.&lt;ETable&gt;.&lt;ECanvas&gt;&quot; style &quot;treeview_header&quot;
# Workaround for the evolution ETree
widget_class &quot;*.&lt;ETree&gt;.&lt;ECanvas&gt;&quot; style &quot;treeview_header&quot;

# Special case the nautilus-extra-view-widget
# ToDo: A more generic approach for all applications that have a widget like this.
widget &quot;*.nautilus-extra-view-widget&quot; style : highest &quot;nautilus_location&quot;

# Work around for http://bugzilla.gnome.org/show_bug.cgi?id=382646
# Note that this work around assumes that the combobox is _not_ in appears-as-list mode.
widget_class &quot;*.&lt;GtkComboBox&gt;.&lt;GtkCellView&gt;&quot; style &quot;text_is_fg_color_workaround&quot;
# This is the part of the workaround that fixes the menus
widget &quot;*.gtk-combobox-popup-menu.*&quot; style &quot;menuitem_text_is_fg_color_workaround&quot;

# Work around the usage of GtkLabel inside GtkListItems to display text.
# This breaks because the label is shown on a background that is based on the base color.
widget_class &quot;*&lt;GtkListItem&gt;*&quot; style &quot;fg_is_text_color_workaround&quot;
# GtkCList also uses the fg color to draw text on top of the base colors.
widget_class &quot;*&lt;GtkCList&gt;&quot; style &quot;fg_is_text_color_workaround&quot;
# Nautilus when renaming files, and maybe other places.
widget_class &quot;*&lt;EelEditableLabel&gt;&quot; style &quot;fg_is_text_color_workaround&quot;

# See the documentation of the style.
widget_class &quot;EShellWindow.GtkVBox.BonoboDock.BonoboDockBand.BonoboDockItem*&quot; style &quot;evo_new_button_workaround&quot;
</code></pre>
<hr />
</details>]]></description>
    <pubDate>Fri, 06 Jul 2018 00:00:00 UT</pubDate>
    <guid>https://chubaduba.github.io//posts/2018-07-06-1.html</guid>
    <dc:creator>ChubaDuba</dc:creator>
</item>
<item>
    <title>Xmobar с поддержкой иконок в формате xpm.</title>
    <link>https://chubaduba.github.io//posts/2018-06-21-1.html</link>
    <description><![CDATA[<p>Сравнительно недавно в <code>xmobar</code> появилась возможность использовать иконки в формате <code>xpm</code>. Чтобы воспользоваться этим новшеством, нужно при сборке <code>xmobar</code> установить флаг <code>with_xpm</code>. Например, если устанавливать <code>xmobar</code> из <code>cabal</code>, то команда будет иметь такой вид:</p>
<pre><code>$ cabal install xmobar --flags=&quot;with_xpm&quot;
</code></pre>
<p>также для сборки потребуется установить библиотеку <code>libxpm-dev</code>:</p>
<pre><code>$ sudo apt-get install libxpm-dev
</code></pre>
<p>Для конвертации изображений в формат <code>XPM</code> можно воспользоваться <a href="https://www.online-utility.org/image/convert/to/XPM">онлайн конвертером</a>.</p>
<p>В конфигурационном файле <code>.xmobarrc</code> необходимо указать местонахождение иконок, добавив в секцию <code>Config</code> строчку:</p>
<pre><code>iconRoot = &quot;путь_до_директории_с иконками&quot;
</code></pre>
<blockquote>
<p>Также можно задать действие, которое будет выполняться по клику на иконке!</p>
</blockquote>
<p>И теперь осталось определиться с местом, где будет распологаться иконка, и, если необходимо, действие по клику. Я подготовил <a href="https://mega.nz/#!4c9kCSqa!mVtLEVM9bMsKfpMBQfmTiXCjgOyi0rDwUucD8LX5pg8">иконку</a> с логотипом <code>Debian</code> и решил расположить её в левом углу <code>xmobar</code>, а по клику на иконке будет запускаться <a href="https://chubaduba.github.io/posts/2018-02-25-1.html">myGtkMenu</a>. Редактируем <code>template</code>:</p>
<pre><code>, template = &quot;&lt;action=`ваше_действие`&gt;&lt;icon=debian_logo.xpm/&gt;&lt;/action&gt;%StdinReader% } ... 
</code></pre>
<p>Остаётся перезагрузить <code>xmobar</code> и увидеть изменения:</p>
<p><a href="http://www.imagebam.com/image/c4f5ba900960824"><img src="http://thumbs2.imagebam.com/57/78/bc/c4f5ba900960824.jpg" alt="imagebam.com"></a></p>]]></description>
    <pubDate>Thu, 21 Jun 2018 00:00:00 UT</pubDate>
    <guid>https://chubaduba.github.io//posts/2018-06-21-1.html</guid>
    <dc:creator>ChubaDuba</dc:creator>
</item>
<item>
    <title>Русская консоль (tty) в Debian 9 Stratch i386</title>
    <link>https://chubaduba.github.io//posts/2018-06-15-1.html</link>
    <description><![CDATA[<p>Сразу отмечу, что баг был замечен при неоднократных установках Debian. Во всех случаях использовался образ диска <code>netinstall</code>, устанавливалась минимальная конфигурация без графического интерфейса. Проявляется баг только на дистрибутиве <code>Debian 9 Stratch i386</code>, на 64-х битной версии он отсутствует. Заключается он в некорректном отображении кириллицы (вместо букв квадраты) при правильно сконфигурированной русской локали.</p>
<p>Проблема решилась после изменения юнита <code>systemd</code> под названием <code>console-setup.service</code>. Расположен он в <code>/etc/systemd/system/multi-user.target.wants/</code>. Вот его содержимое по умолчанию:</p>
<pre><code>[Unit]
Description=Set console font and keymap
DefaultDependencies=no
After=console-screen.service kbd.service local-fs.target
RequiresMountsFor=/usr
ConditionPathExists=/bin/setupcon

[Service]
Type=oneshot
ExecStart=/lib/console-setup/console-setup.sh
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
</code></pre>
<p>Нужно изменить одну строчку:</p>
<pre><code>ExecStart=/lib/console-setup/console-setup.sh
</code></pre>
<p>на</p>
<pre><code>ExecStart=/bin/setupcon
</code></pre>
<p>После перезапуска юнита всё встаёт на свои места, и в консоли теперь русские буквы отображаются корректно.</p>]]></description>
    <pubDate>Fri, 15 Jun 2018 00:00:00 UT</pubDate>
    <guid>https://chubaduba.github.io//posts/2018-06-15-1.html</guid>
    <dc:creator>ChubaDuba</dc:creator>
</item>
<item>
    <title>Xmonad. Загоняем калькулятор в Prompt.</title>
    <link>https://chubaduba.github.io//posts/2018-06-04-1.html</link>
    <description><![CDATA[<p>Давно хотелось сделать работу с калькулятором в xmonad удобной. Чтобы он был всегда под рукой, и чтобы не делать лишних телодвижений с окном программы.</p>
<p>В своей системе я пользуюсь консольным калькулятором <a href="http://www.isthe.com/chongo/tech/comp/calc/calc-mirror.html">Calc</a>. Было найдено оригинальное решение, которое позволяет расположить калькулятор в строке ввода команд <code>Prompt</code>. Что такое <code>Prompt</code> и как это работает, я уже <a href="https://chubaduba.github.io/posts/2018-04-19-1.html">писал раньше</a>.</p>
<p>Все изменения будем делать в файле конфигурации xmonad <code>xmonad.hs</code>. Первое, что я сделал - сконфигурировал саму строку ввода, в которой будет открываться калькулятор:</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode haskell"><code class="sourceCode haskell"><a class="sourceLine" id="cb1-1" data-line-number="1"><span class="co">-- Calc Prompt</span></a>
<a class="sourceLine" id="cb1-2" data-line-number="2">myCalcConfig <span class="fu">=</span> def</a>
<a class="sourceLine" id="cb1-3" data-line-number="3">        { font                <span class="fu">=</span> myFont</a>
<a class="sourceLine" id="cb1-4" data-line-number="4">        , bgColor             <span class="fu">=</span> <span class="st">&quot;#1E2320&quot;</span></a>
<a class="sourceLine" id="cb1-5" data-line-number="5">        , fgColor             <span class="fu">=</span> <span class="st">&quot;#DBA3A2&quot;</span></a>
<a class="sourceLine" id="cb1-6" data-line-number="6">        , promptBorderWidth   <span class="fu">=</span> <span class="dv">0</span> </a>
<a class="sourceLine" id="cb1-7" data-line-number="7">        , position            <span class="fu">=</span> <span class="dt">Top</span></a>
<a class="sourceLine" id="cb1-8" data-line-number="8">        }</a></code></pre></div>
<p>Тут всё просто. Задал шрифт, цвет фона и цвет шрифта, а также месторасположение строки. В моём случае окно калькулятора будет распологаться вверху экрана, перекрывая <code>xmobar</code>.</p>
<p>Вторым шагом добавляем саму функцию, которая будет открывать калькулятор:</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode haskell"><code class="sourceCode haskell"><a class="sourceLine" id="cb2-1" data-line-number="1"><span class="co">-- Calculator</span></a>
<a class="sourceLine" id="cb2-2" data-line-number="2"><span class="ot">calcPrompt ::</span> <span class="dt">XPConfig</span> <span class="ot">-&gt;</span> <span class="dt">String</span> <span class="ot">-&gt;</span> <span class="dt">X</span> () </a>
<a class="sourceLine" id="cb2-3" data-line-number="3">calcPrompt c ans <span class="fu">=</span></a>
<a class="sourceLine" id="cb2-4" data-line-number="4">    inputPrompt c (trim ans) <span class="fu">?+</span> \input <span class="ot">-&gt;</span> </a>
<a class="sourceLine" id="cb2-5" data-line-number="5">        liftIO(runProcessWithInput <span class="st">&quot;calc&quot;</span> [input] <span class="st">&quot;&quot;</span>) <span class="fu">&gt;&gt;=</span> calcPrompt c </a>
<a class="sourceLine" id="cb2-6" data-line-number="6">    <span class="kw">where</span></a>
<a class="sourceLine" id="cb2-7" data-line-number="7">        trim  <span class="fu">=</span> f <span class="fu">.</span> f</a>
<a class="sourceLine" id="cb2-8" data-line-number="8">            <span class="kw">where</span> f <span class="fu">=</span> reverse <span class="fu">.</span> dropWhile isSpace</a></code></pre></div>
<p>И последнее, что нужно сделать, это добавить в конфигурационный файл комбинацию клавиш, при нажатии которой будет открываться калькулятор:</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode haskell"><code class="sourceCode haskell"><a class="sourceLine" id="cb3-1" data-line-number="1">, ((mod4Mask,     xK_c), calcPrompt myCalcConfig <span class="st">&quot;calc&quot;</span>)</a></code></pre></div>
<p>Теперь при нажатии клавиш <code>mod4 + c</code> на месте <code>xmobar</code> открывается окно калькулятора. Закрыть его можно, нажав кнопку <code>Esc</code>.</p>
<p><img src="http://images2.imagebam.com/b9/e6/76/20f91e885153304.png" /></p>]]></description>
    <pubDate>Mon, 04 Jun 2018 00:00:00 UT</pubDate>
    <guid>https://chubaduba.github.io//posts/2018-06-04-1.html</guid>
    <dc:creator>ChubaDuba</dc:creator>
</item>
<item>
    <title>Использование сервиса pastebin.</title>
    <link>https://chubaduba.github.io//posts/2018-05-28-1.html</link>
    <description><![CDATA[<p>Очень часто, при решении каких-то вопросов, связанных с использованием Linux, люди, пытающиеся вам помочь, просят, чтобы вы показали им какой-либо файл с логами или результат работы (выхлоп) команды, введённой в терминале. Первое, что придёт вам на ум в этой ситуации - это сделать скриншот своего экрана или вообще взять и сфотографировать свой монитор. Согласистесь, очень часто на форумах, на которых пользователи Linux ищут ответы на свои вопросы можно увидеть вот такие фотографии:</p>
<p><img src="http://images2.imagebam.com/1f/95/29/9c2c63827428223.JPG" /></p>
<p>Хорошо, если фотография хорошего качества, вся информация полностью умещается на мониторе и удобно читаемая. Но такое бывает далеко не всегда. Сегодня речь пойдёт о работе с сервисом <code>pasebin</code>, который позволяет загружать отрывки текста, фрагменты исходного кода и т.д. для возможности просмотра окружающими.</p>
<p>Для работы с сервисом установим в нашу систему два пакета <a href="https://packages.debian.org/stretch/pastebinit">pastebinit</a> и <a href="https://packages.debian.org/stretch/xclip">xclip</a>. <code>pastebinit</code> - это инструмент командной строки для отправки данных на сайт, который позволяет пользователям размещать отрывки текста для публичного просмотра, а <code>xclip</code> — это утилита, предоставляющая интерфейс к буферу обмена из командной строки:</p>
<pre><code>$ sudo apt-get install pastebinit
$ sudo apt-get install xclip
</code></pre>
<p>Чтобы посмотреть с какими сервисами работает <code>pastebinit</code>, нужно в терминале ввести команду:</p>
<pre><code>$ pastebinit -l
</code></pre>
<p><img src="http://images2.imagebam.com/c5/d4/44/88c0c8851554954.png" /></p>
<p>Стоит отметить, что на самом деле, не со всеми сервисами из этого списка <code>pastebinit</code> работает. Причины этому две: либо сам сервис не работает (недоступен), либо у сервиса поменялся API и <code>pastebinit</code> перестал корректно с ним работать. Какой сервис выбрать для себя дело сугубо ваших предпочтений. Я пользуюсь сервисом по умолчанию <code>paste.debian.net</code>.</p>
<blockquote>
<p>В Debian 9 Stratch <code>pastebinit</code> имеет ошибки, которые не позволяют ему корректно работать с сервисом <code>paste.debian.net</code>. Поэтому рекомендую поставить более свежую версию пакета из Debian testing или Debian sid.</p>
</blockquote>
<p>Чтобы каждый раз не вводить в терминале длинные команды, создадим <code>alias</code>, обзовём его <code>paste</code>, который будем использовать когда нужно будет что-то скопировать. Добавляем в наш файл <code>~/.bashrc</code> строчку :</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode bash"><code class="sourceCode bash"><a class="sourceLine" id="cb3-1" data-line-number="1"><span class="bu">alias</span> paste=<span class="st">&#39;pastebinit -b paste.debian.net -a ChubaDuba | xclip -selection &quot;clipboard&quot; &#39;</span></a></code></pre></div>
<p>параметр <code>-a</code> задаёт имя автора. Параметр не обязательный, если вы его не будите прописывать, то автоматически вам будет присвоено имя <code>anonymous</code>.</p>
<p>Теперь всё готово для работы. Посмотрим на практике как это работает.<br />
Например, нам нужно показать вывод команды <code>lspci</code>. Открываем терминал и вводим следующую команду:</p>
<pre><code>$ lspci | paste
</code></pre>
<p>После её выполнения в буфере обмена у нас будет ссылка, перейдя по которой можно увидеть результат работы введённой нами команды. В нашем примере <code>lspci</code>. Остаётся поделиться этой ссылкой, нажав клавиши <code>Ctrl + v</code> там, где нам нужно: на форуме, чате или отправить её по e-mail. Если перейти по этой ссылке, откроется страничка выбранного нами ресурса, на которой в удобной для просмотра форме будет показан результат работы вводимой нами команды:</p>
<p><a href="http://www.imagebam.com/image/dffeb7895532484" target="_blank"><img src="http://thumbs2.imagebam.com/e1/fe/50/dffeb7895532484.jpg" alt="imagebam.com"></a></p>]]></description>
    <pubDate>Mon, 28 May 2018 00:00:00 UT</pubDate>
    <guid>https://chubaduba.github.io//posts/2018-05-28-1.html</guid>
    <dc:creator>ChubaDuba</dc:creator>
</item>
<item>
    <title>Xmonad. Middle Column Layout</title>
    <link>https://chubaduba.github.io//posts/2018-05-15-1.html</link>
    <description><![CDATA[<p><code>Middle Column Layout</code> - компоновка окон для xmonad, которая подойдёт владельцам широких экранов.</p>
<p><a href="http://www.imagebam.com/image/0fd3a3855481774"><img src="http://thumbs2.imagebam.com/ad/e6/6a/0fd3a3855481774.jpg" alt="ImageBam image upload"></a></p>
<p><a href="https://github.com/chrissound/XMonadLayouts">Страничка автора на GitHub</a></p>
<p>Демо ролик: <iframe width=100% height="240" src="https://www.youtube.com/embed/e5GTCpzL3OY" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe></p>]]></description>
    <pubDate>Tue, 15 May 2018 00:00:00 UT</pubDate>
    <guid>https://chubaduba.github.io//posts/2018-05-15-1.html</guid>
    <dc:creator>ChubaDuba</dc:creator>
</item>

    </channel>
</rss>
