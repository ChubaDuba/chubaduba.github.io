<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"
    xmlns:dc="http://purl.org/dc/elements/1.1/">
    <channel>
        <title>ChubaDuba - Все посты</title>
        <link>https://chubaduba.github.io/</link>
        <description><![CDATA[Блог ChubaDuba]]></description>
        <atom:link href="https://chubaduba.github.io//rss.xml" rel="self"
                   type="application/rss+xml" />
        <lastBuildDate>Wed, 15 Apr 2020 00:00:00 UT</lastBuildDate>
        <item>
    <title>Teamviewer в топку!</title>
    <link>https://chubaduba.github.io//posts/2020-04-15-1.html</link>
    <description><![CDATA[<p>Уже на протяжении нескольких лет в <a href="https://www.teamviewer.com/ru/">Teamviewer</a> присутствует баг, а может это их фирменная <a href="https://www.youtube.com/watch?v=w9laH3q1hBM">фисечка</a>? Дело в том, что по непонятным причинам современный <code>Teamviewer</code> требует в системе <i>обязательного</i> присутствия установленного <a href="https://wiki.debian.org/DisplayManager">DM (Display Manager)</a>. Говоря простым языком, если вход в графический интерфейс выполняется без использования <code>Display  Manager</code>, а настроен, например, <a href="https://chubaduba.github.io/posts/2018-03-06-1.html">таким образом</a>, или вы просто пользуетесь командой <code>startx</code>, то <code>Teamviewer</code> работать не будет Он тупо не запустится! Пользоваться или не пользоваться программой с таким ограничением, решать только вам. Я давно отказался от его использования. Последняя установленная на моём ПК версия была <code>v10.0.223993</code>.</p>
<p>Сейчас я использую <a href="https://anydesk.com/ru">AnyDesk</a>. Отличный вариант, если нет возможности настроить <code>VNC</code> на удалённом компьютере. Мультиплатформенный - можно установить на: <code>Windows</code>, <code>macOS</code>, <code>iOS</code>, <code>Android</code>, <code>Linux</code>, <code>FreeBSD</code>, <code>Raspberry Pi</code>, <code>Chrome OS</code>. В работе точно не хуже <code>Teamviewer'a</code>. Одним словом рекомендую попробовать!</p>
<blockquote>
<p>Пока не разобрался почему AnyDesk полностью не подхватывает мою тёмную тему GTK2, ниже на скриншоте это можно заметить. Но, как говорится, на ход поршней это не влияет…</p>
</blockquote>
<p>В <code>Debian</code> его можно установить по фэншую - из репозитория. Добавляем в наш источник пакетов репозиторий, добавляем ключ, обновляемся и устанавливаем программу:</p>
<hr />
<pre><code># wget -qO - https://keys.anydesk.com/repos/DEB-GPG-KEY | apt-key add -
# echo &quot;deb http://deb.anydesk.com/ all main&quot; &gt; /etc/apt/sources.list.d/anydesk-stable.list
# apt-get update
# apt-get install anydesk
</code></pre>
<hr />
<p>Запуск программы осуществляется командой <code>anydesk</code>.</p>
<p><a href="http://www.imagebam.com/image/f707371340444636"><img src="https://thumbs2.imagebam.com/d8/cb/1b/f707371340444636.jpg" alt="imagebam.com"></a></p>]]></description>
    <pubDate>Wed, 15 Apr 2020 00:00:00 UT</pubDate>
    <guid>https://chubaduba.github.io//posts/2020-04-15-1.html</guid>
    <dc:creator>ChubaDuba</dc:creator>
</item>
<item>
    <title>FFmpeg + Winff. Как перекодировать аудио дорожку видеофайла в формат MP3.</title>
    <link>https://chubaduba.github.io//posts/2020-04-12-1.html</link>
    <description><![CDATA[<p>Я, как и многие, в связи с переходом на цифровое телевидение, купил для своих старых телеков ТВ приставки. При выборе делал упор на качество сигнала, а на другие “навороты” особо не смотрел. Как известно, практически во всех этих приставках есть видео плеер, который позволяет смотреть видео с USB носителей. Но не все приставки умеют проигрывать видеофайлы, у которых звук записан в формате не <code>mp3</code>. Т.е. картинка есть, а звука нет.</p>
<p>Как же перекодировать в Debian отдельно аудио дорожку в формат mp3, а формат видео оставить без изменений?</p>
<p>Я попробовал два варианта. Первый - это программа <a href="http://avidemux.sourceforge.net/">Avidemux</a>. В Debian её можно найти, если подключить репозиторий <a href="http://www.deb-multimedia.org/">deb-multimedia</a>. Скажу сразу, что именно с моей задачей она справлялась нелучшим образом, а может я просто не осилил её. В готовом файле звук постоянно или отставал от видео, или наоборот - опережал. В настройках есть пункт, в котором можно указать в милисекундах время синхронизации. Но от чего это время зависит, я так и не понял. А если перекодировать многосерийный сериал и для каждого файла подбирать этот параметр, то это становится жутко не удобно.</p>
<p>Поэтому для себя я остановился на втором варианте - это <a href="https://packages.debian.org/stretch/ffmpeg">ffmpeg</a> и графическая оболочка для него <a href="https://packages.debian.org/stretch/winff">winff</a>. В репозитории есть два варианта оболочки: для <code>Qt</code> и <code>GTK2</code>. Я буду использовать второй. Устанавливаем:</p>
<hr />
<pre><code>$ sudo apt-get install winff-gtk2
</code></pre>
<hr />
<blockquote>
<p>Для работы с разными кодеками, они долны быть установлены у вас в системе. Например, для кодирования аудио в формат <code>mp3</code> должен быть установлен пакет <a href="https://packages.debian.org/stretch/lame">lame</a>.</p>
</blockquote>
<p>Запускаем редактор командой:</p>
<pre><code>winff-gtk2
</code></pre>
<figure>
<img src="https://images2.imagebam.com/19/16/ea/5c06ce1339910329.png" alt="" /><figcaption>Главное окно видео редактора Winnf</figcaption>
</figure>
<p>Чтобы при использовании редактора постоянно не вводить мудрёные команды для <code>ffmpeg</code>, существуют готовые настройки, так называемые <code>пресеты</code>, которые можно редактировать в соответствии с вашими задачами:</p>
<p><img src="https://images2.imagebam.com/9b/09/65/d79ed41339876707.png" /></p>
<figure>
<img src="https://images2.imagebam.com/dd/80/b4/be1a6a1339911770.png" alt="" /><figcaption>Окно редактирования пресетов</figcaption>
</figure>
<p>В категорию <code>Audio</code> я добавил два пресета: <code>AVI with MP3 audio</code> и <code>MKV with MP3 audio</code>:</p>
<p><img src="https://images2.imagebam.com/d5/52/01/795af61339912978.png" /></p>
<p>Отличаются они друг от друга только параметром <code>Расширение  выходного файла</code>, а параметр <code>Командная строка</code> у них одинаковый и имеет такой вид:</p>
<hr />
<pre><code>-vcodec copy -acodec libmp3lame -ar 44100 -ac 2 -ab 192k
</code></pre>
<hr />
<figure>
<img src="https://images2.imagebam.com/58/7e/4a/c25f501339914927.png" alt="" /><figcaption>Пресет “AVI with MP3 audio”</figcaption>
</figure>
<figure>
<img src="https://images2.imagebam.com/86/0f/ec/8e7da81339915463.png" alt="" /><figcaption>Пресет “MKV with MP3 audio”</figcaption>
</figure>
<p>Пресеты готовы, можно приступать к кодированию. Добавляем файл и в соответствии с его расширением выбераем пресет:</p>
<p><img src="https://images2.imagebam.com/58/c8/9b/44d7f31339917943.png" /></p>
<p>Ради интереса посмотрим в терминале какую звуковую дорожку имеет этот файл:</p>
<pre><code>chubaduba:~$ mediainfo video_1.mkv | sed -n &#39;/Audio/,$p&#39;
Audio
ID                      : 2
Format                  : AAC
Format/Info             : Advanced Audio Codec
Format profile          : LC
Codec ID                : A_AAC
Duration                : 49 min 23 s
Channel(s)              : 2 channels
Channel positions       : Front: L R
Sampling rate           : 48.0 kHz
Frame rate              : 46.875 FPS (1024 spf)
Compression mode        : Lossy
Delay relative to video : 9 ms
Default                 : Yes
Forced                  : No
 </code></pre>
<p>Нажимаем кнопку <code>Преобразовать</code> и ждём результат… В настройках можно выбрать с каким приоритетом будет проходить процесс кодирования. Отмечу, что при выбранном приоритете “Нормальный” <code>Winff</code> справляется с задачей быстрее, чем <code>Avidemux</code>.</p>
<p>Посмотрим характеристики аудио новоиспечённого файла:</p>
<pre><code>chubaduba:~/temp$ mediainfo video_1.mkv | sed -n &#39;/Audio/,$p&#39;
Audio
ID                      : 2
Format                  : MPEG Audio
Format version          : Version 1
Format profile          : Layer 3
Mode                    : Joint stereo
Mode extension          : MS Stereo
Codec ID                : A_MPEG/L3
Codec ID/Hint           : MP3
Duration                : 49 min 23 s
Bit rate mode           : Constant
Bit rate                : 192 kb/s
Channel(s)              : 2 channels
Sampling rate           : 44.1 kHz
Compression mode        : Lossy
Stream size             : 67.8 MiB (11%)
Writing library         : Lavc57.64.101 libmp3lame
Default                 : Yes
Forced                  : No
DURATION                : 00:49:23.843000000
</code></pre>
<p>Остаётся записать файл на флешку, воткнуть её в приставку, развалиться на диване и посмотреть наше видео :)</p>]]></description>
    <pubDate>Sun, 12 Apr 2020 00:00:00 UT</pubDate>
    <guid>https://chubaduba.github.io//posts/2020-04-12-1.html</guid>
    <dc:creator>ChubaDuba</dc:creator>
</item>
<item>
    <title>Xmobar. Мониторинг статуса подключения к сети интернет (online/offline).</title>
    <link>https://chubaduba.github.io//posts/2020-04-04-1.html</link>
    <description><![CDATA[<p>Последнее время периодически стал отваливаться интернет. Решил автоматизировать процедуру проверки, а результат проверки вывести в <code>xmobar</code> с помощью скрипта:</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb1-1"><a href="#cb1-1"></a><span class="co">#!/bin/bash</span></span>
<span id="cb1-2"><a href="#cb1-2"></a></span>
<span id="cb1-3"><a href="#cb1-3"></a><span class="va">color1=</span><span class="st">&quot;#709180&quot;</span></span>
<span id="cb1-4"><a href="#cb1-4"></a><span class="va">color2=</span><span class="st">&quot;#DC8BC3&quot;</span></span>
<span id="cb1-5"><a href="#cb1-5"></a><span class="va">ip=</span><span class="st">&quot;8.8.8.8&quot;</span></span>
<span id="cb1-6"><a href="#cb1-6"></a><span class="va">count=</span>3</span>
<span id="cb1-7"><a href="#cb1-7"></a><span class="va">default_status=</span><span class="st">&quot;0%&quot;</span></span>
<span id="cb1-8"><a href="#cb1-8"></a></span>
<span id="cb1-9"><a href="#cb1-9"></a><span class="va">count_loss=$(</span><span class="fu">ping</span> -c <span class="va">${count}</span> <span class="va">${ip}</span> <span class="kw">|</span> <span class="kw">\</span></span>
<span id="cb1-10"><a href="#cb1-10"></a><span class="fu">sed</span> -e <span class="st">&#39;$!{h;d;}&#39;</span> -e x <span class="kw">|</span> <span class="kw">\</span></span>
<span id="cb1-11"><a href="#cb1-11"></a><span class="fu">sed</span> -r <span class="st">&#39;s!^[^0]+!!&#39;</span> <span class="kw">|</span> <span class="kw">\</span></span>
<span id="cb1-12"><a href="#cb1-12"></a><span class="fu">sed</span> <span class="st">&#39;s/^\(..\).*/\1/&#39;</span><span class="va">)</span></span>
<span id="cb1-13"><a href="#cb1-13"></a></span>
<span id="cb1-14"><a href="#cb1-14"></a><span class="kw">if [[</span> <span class="va">$count_loss</span> <span class="ot">==</span> *<span class="st">&quot;</span><span class="va">$default_status</span><span class="st">&quot;</span>*<span class="kw"> ]]</span>; <span class="kw">then</span></span>
<span id="cb1-15"><a href="#cb1-15"></a>	<span class="bu">echo</span> <span class="st">&quot;&lt;fc=</span><span class="va">$color1</span><span class="st">&gt;online&lt;/fc&gt;&quot;</span></span>
<span id="cb1-16"><a href="#cb1-16"></a><span class="kw">else</span></span>
<span id="cb1-17"><a href="#cb1-17"></a>	<span class="bu">echo</span> <span class="st">&quot;&lt;fc=</span><span class="va">$color2</span><span class="st">&gt;offline&lt;/fc&gt;&quot;</span></span>
<span id="cb1-18"><a href="#cb1-18"></a><span class="kw">fi</span></span></code></pre></div>
<p><a href="http://www.imagebam.com/image/aa0d2a1339159850"><img src="https://thumbs2.imagebam.com/10/32/19/aa0d2a1339159850.jpg" alt="ImageBam image upload"></a></p>]]></description>
    <pubDate>Sat, 04 Apr 2020 00:00:00 UT</pubDate>
    <guid>https://chubaduba.github.io//posts/2020-04-04-1.html</guid>
    <dc:creator>ChubaDuba</dc:creator>
</item>
<item>
    <title>Сервис systemd для noip2.</title>
    <link>https://chubaduba.github.io//posts/2020-04-02-1.html</link>
    <description><![CDATA[<p>Создаём в <code>/etc/systemd/system</code> сервис с именем <code>noip2.service</code>:</p>
<hr />
<pre><code>[Unit]
Description=No-ip.com dynamic IP address updater
After=network.target
After=syslog.target

[Install]
WantedBy=multi-user.target
Alias=noip.service

[Service]
# Start main service
ExecStart=/usr/local/bin/noip2
Restart=always
Type=forking
</code></pre>
<hr />
<p>Обновляем сервисы, ставим новый сервис в автозагрузку, запускаем сервис:</p>
<pre><code>$ sudo systemctl daemon-reload
$ sudo systemctl enable noip2
$ sudo systemctl start noip2
</code></pre>]]></description>
    <pubDate>Thu, 02 Apr 2020 00:00:00 UT</pubDate>
    <guid>https://chubaduba.github.io//posts/2020-04-02-1.html</guid>
    <dc:creator>ChubaDuba</dc:creator>
</item>
<item>
    <title>Debian 9 --> Debian 10 --> CentOS 6.10.</title>
    <link>https://chubaduba.github.io//posts/2020-03-22-1.html</link>
    <description><![CDATA[<p>Сегодня я расскажу свою историю обновления с Debian 9 до Debian 10, и почему я его всё же снёс и поставил CentOS 6.10</p>
<p>Скажу сразу, что Debian 9 Stretch простоял у меня на домашнем ПК полный срок. Претензий к нему не было никаких. Установил, один раз настроил и забыл.<br />
В новогодние праздники решил обновиться до текущего стабильного релиза Debian 10 Buster, неспеша всё настроить и, в очередной раз, забыть на несколько лет. Но пошло всё не совсем так, как было задумано…</p>
<p>Так как при установке Debian 9 я сразу подсунул ему пропатченный freetype от <code>Infinality</code>, то решил не обновляться, а ставить 10-ку начисто. Как обычно скачал <a href="https://cdimage.debian.org/images/unofficial/non-free/images-including-firmware/10.3.0+nonfree/amd64/iso-cd/">неофициальный образ диска netinstall с firmware в комплекте</a>, записал образ на болванку, подключился по LAN к интернету и приступил к установке. 20 минут и минимальный Debian Buster у меня на компьютере. Настроил подключение по Wi-Fi и приступил к установке софта.</p>
<p>Начал с установки оконного менеджера. Установил <code>cabal</code>, собрал <code>xmonad</code> и <code>xmobar</code>. Всё прошло без запинок.</p>
<p>Первое, что отметил для себя, это то, что хоть и завезли в 10-ку новый freetype, но из коробки отображение шрифтов, мягко говоря, печальное. Как говорится, глаза потекли сразу. Дальнейшие поиски решения этой проблемы ни к чему хорошему не привели. Да, удалось настроить чуть лучше, но совсем не так, как это было на Debian 9 с патчем от Infinality.</p>
<blockquote>
<p>Как всё это дело было на Debian 9 Stretch c патчем от Infinality можно посмотреть <a href="https://debianforum.ru/index.php/topic,12773.0.html">тут</a>.</p>
</blockquote>
<p>С софтом ситуация такая же, как и в остальных дистрибутивах Linux, полная каша из GTK2, GTK3, Qt4, Qt5, что напрочь убивает возможность сконфигурировать единообразие пользовательского интерфейса. На Debian 9 я вполне обходился только GTK2, Qt4 и консольными приложениями.</p>
<p>Ещё одним новшеством стоит отметить то, что основной звуковой картой моего моноблока Debian Buster назначил встроенную веб камеру. Пришлось лезть в файлы конфигурации ALSA и ручками прописывать то, что мне нужно. Появились непонятные щелчки в динамиках при старте системы и при открытии некоторых приложений.</p>
<p>Так же стоит отметить общее снижение отзывчивости полученной системы. Но тут скорее не в Debian дело, а в общем утяжелении софта. Справедливости ради, нужно сказать, что моему моноблоку скоро будет 9 лет.</p>
<p>В течении трёх дней использования было принято решение снести Debian Buster, а вместо него поставить другой дистрибутив. У меня был пятилетний опыт использования CentOS 6.x на домашнем компьютере, поэтому, взвесив все за и против, решил вернуться на CentOS 6.10 i386. Думаю, этот дистрибутив я буду использовать точно до конца его срока поддержки, а, возможно, и больше. На мой взгляд, единственный на сегодняшний день сбалансированный в плане интерфейса дистрибутив. Все мои домашние задачи он выполняет с лихвой. А установка современного дистрибутива Linux откладывается до покупки нового железа…</p>
<figure>
<img src="https://images2.imagebam.com/8b/93/41/a31c4a1337823408.png" alt="" /><figcaption>CentOS 6.10 с окружением рабочего стола Gnome 2</figcaption>
</figure>]]></description>
    <pubDate>Sun, 22 Mar 2020 00:00:00 UT</pubDate>
    <guid>https://chubaduba.github.io//posts/2020-03-22-1.html</guid>
    <dc:creator>ChubaDuba</dc:creator>
</item>
<item>
    <title>Audacious Winamp v.1.x skin.</title>
    <link>https://chubaduba.github.io//posts/2020-03-16-1.html</link>
    <description><![CDATA[<p>Для любителей олдскульного интерфейса скин для аудио проигрывателя <code>Audacious</code> на основе скина Winamp v.1.x.<br />
Забрать можно <a href="https://www.dropbox.com/s/dqdtikyt0ir6qyh/winamp1_rus.tar.gz?dl=0">тут</a><br />
P.S. Использую на Audacious v.3.2 (GTK2)</p>
<p><img src="https://images2.imagebam.com/13/db/1f/a064521337266800.png" /></p>]]></description>
    <pubDate>Mon, 16 Mar 2020 00:00:00 UT</pubDate>
    <guid>https://chubaduba.github.io//posts/2020-03-16-1.html</guid>
    <dc:creator>ChubaDuba</dc:creator>
</item>
<item>
    <title>Walk with Canon Magic Drainpipe.</title>
    <link>https://chubaduba.github.io//posts/2020-02-12-1.html</link>
    <description><![CDATA[<p>Last week we had a lot of snow, which is a rarity lately. Therefore, my wife and I decided to take a walk in the grove and at the same time take a walk with our old man - <code>Canon Magic Drainpipe</code> (<a href="https://global.canon/en/c-museum/product/ef285.html">Canon EF 80-200mm f/2.8L</a>). All photos below were shot on a <a href="https://global.canon/en/c-museum/product/dslr785.html">Canon 1D Mark II</a>. Shooting modes are indicated for each photograph.</p>
<figure>
<img src="https://live.staticflickr.com/65535/49519560918_15191d7793_o.jpg" alt="" /><figcaption>ISO 100, f/8, 80mm, 1/400sec</figcaption>
</figure>
<figure>
<img src="https://live.staticflickr.com/65535/49520296057_8f14e10641_o.jpg" alt="" /><figcaption>ISO 100, f/8, 85mm, 1/500sec</figcaption>
</figure>
<figure>
<img src="https://live.staticflickr.com/65535/49519559058_fa36fc4821_o.jpg" alt="" /><figcaption>ISO 100, f/3.2, 110mm, 1/2000sec</figcaption>
</figure>
<figure>
<img src="https://live.staticflickr.com/65535/49519559983_7c6e1022da_o.jpg" alt="" /><figcaption>ISO 100, f/3.2, 200mm, 1/1250sec</figcaption>
</figure>
<figure>
<img src="https://live.staticflickr.com/65535/49520298812_17231b27d1_o.jpg" alt="" /><figcaption>ISO 100, f/3.2, 200mm, 1/2000sec</figcaption>
</figure>]]></description>
    <pubDate>Wed, 12 Feb 2020 00:00:00 UT</pubDate>
    <guid>https://chubaduba.github.io//posts/2020-02-12-1.html</guid>
    <dc:creator>ChubaDuba</dc:creator>
</item>
<item>
    <title>Запуск браузера Lynx через Tor.</title>
    <link>https://chubaduba.github.io//posts/2019-09-21-1.html</link>
    <description><![CDATA[<p>Если у вас в системе не установлент <code>Tor</code>, то его нужно сначала установить…</p>
<blockquote>
<p>Все последующие действия по установке <code>Tor</code> справедливы для <code>Debian 9 Stretch</code>.</p>
</blockquote>
<p>Добавим репозиторий для <code>Tor</code>. Для этого создадим в <code>/etc/apt/sources.list.d</code> файл <code>tor.list</code> со следующим содержимым:</p>
<hr />
<pre><code># Tor
# deb http://deb.torproject.org/torproject.org stretch main
deb-src http://deb.torproject.org/torproject.org stretch main
</code></pre>
<hr />
<p>После этого нужно обновить список пакетов и установить сам <code>Tor</code>:</p>
<pre><code>$ sudo apt-get update
$ sudo apt-get install tor
</code></pre>
<p>После того как всё установилось, на всякий пожарный проверим что <code>Tor</code> у нас заработал:</p>
<p><a href="http://www.imagebam.com/image/13f6ca1314793291"><img src="https://thumbs2.imagebam.com/9e/3c/59/13f6ca1314793291.jpg" alt="imagebam.com"></a></p>
<p>Из выхлопа видно, что <code>Tor</code> у нас работает. Теперь осталось настроить работу браузера <code>Lynx</code> через <code>Tor</code>…</p>
<p>Пишем скрипт, я обозвал его <code>lynxtor</code>:</p>
<hr />
<div class="sourceCode" id="cb3"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb3-1"><a href="#cb3-1"></a><span class="co">#!/bin/bash</span></span>
<span id="cb3-2"><a href="#cb3-2"></a></span>
<span id="cb3-3"><a href="#cb3-3"></a><span class="va">PATH=$PATH</span>:/etc/torsocks.conf</span>
<span id="cb3-4"><a href="#cb3-4"></a><span class="bu">export</span> <span class="va">PATH</span></span>
<span id="cb3-5"><a href="#cb3-5"></a><span class="ex">torsocks</span> lynx -noreferer <span class="op">2&gt;</span> /dev/null</span></code></pre></div>
<hr />
<p>И последнее, что остаётся сделать - назначить в <code>xmonad</code> горячую клавишу для запуска этого скрипта. У себя в <code>xmonad.hs</code> я добавил:</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb4-1"><a href="#cb4-1"></a><span class="co">-- Keybindings</span></span>
<span id="cb4-2"><a href="#cb4-2"></a>myKeys <span class="ot">=</span> [ <span class="op">...</span></span>
<span id="cb4-3"><a href="#cb4-3"></a>         , ((mod4Mask <span class="op">.|.</span> controlMask, xK_i), spawn <span class="st">&quot;urxvt -e /home/chubaduba/scripts/lynxtor&quot;</span>)</span>
<span id="cb4-4"><a href="#cb4-4"></a>         <span class="op">...</span></span>
<span id="cb4-5"><a href="#cb4-5"></a>         ]</span></code></pre></div>
<p>Остаётся перекомпилировать и перезагрузить <code>xmonad</code>, чтобы все изменения вступили в силу. Теперь при нажатии комбинации клавиш <code>mod4Mask + Ctrl + i</code> у нас будет запускаться браузер <code>Lynx</code> трафик которого будет идти через <code>Tor</code>.</p>]]></description>
    <pubDate>Sat, 21 Sep 2019 00:00:00 UT</pubDate>
    <guid>https://chubaduba.github.io//posts/2019-09-21-1.html</guid>
    <dc:creator>ChubaDuba</dc:creator>
</item>
<item>
    <title>Xmonad. XMonad.Actions.Search</title>
    <link>https://chubaduba.github.io//posts/2019-06-30-1.html</link>
    <description><![CDATA[<p><a href="http://hackage.haskell.org/package/xmonad-contrib-0.15/docs/XMonad-Actions-Search.html">XMonad.Actions.Search</a> - удобный инструмент для быстрого поиска информации в internet. Как видно из описания, модуль поддерживает большое количество поисковых движков. Я сравнительно часто пользуюсь тремя:</p>
<p><code>deb</code> - Debian package search;<br />
<code>duckduckgo</code> - DuckDuckGo search engine;<br />
<code>youtube</code> - Youtube video search.</p>
<p>поэтому и добавил функционал только для них.</p>
<p>Чтобы всё это у нас заработало, первым делом добавим модуль <code>XMonad.Actions.Search</code> в наш файл конфигурации <code>xmonad.hs</code>:</p>
<hr />
<div class="sourceCode" id="cb1"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb1-1"><a href="#cb1-1"></a><span class="kw">import</span> <span class="dt">XMonad.Actions.Search</span></span></code></pre></div>
<hr />
<p>Второе, что необходимо сделать - это сконфигурировать окно, в которое мы будем вводить поисковый запрос. Добавляем в <code>xmonad.hs</code>:</p>
<hr />
<div class="sourceCode" id="cb2"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb2-1"><a href="#cb2-1"></a><span class="co">-- Search Prompt</span></span>
<span id="cb2-2"><a href="#cb2-2"></a>mySearchConfig <span class="ot">=</span> def</span>
<span id="cb2-3"><a href="#cb2-3"></a>        { font                <span class="ot">=</span> myFont</span>
<span id="cb2-4"><a href="#cb2-4"></a>        , bgColor             <span class="ot">=</span> <span class="st">&quot;#1E2320&quot;</span></span>
<span id="cb2-5"><a href="#cb2-5"></a>        , fgColor             <span class="ot">=</span> <span class="st">&quot;#E0AF8F&quot;</span></span>
<span id="cb2-6"><a href="#cb2-6"></a>        , promptBorderWidth   <span class="ot">=</span> <span class="dv">0</span> </span>
<span id="cb2-7"><a href="#cb2-7"></a>        , position            <span class="ot">=</span> <span class="dt">Top</span></span>
<span id="cb2-8"><a href="#cb2-8"></a>        , historySize         <span class="ot">=</span> <span class="dv">0</span></span>
<span id="cb2-9"><a href="#cb2-9"></a>        , historyFilter       <span class="ot">=</span> deleteConsecutive</span>
<span id="cb2-10"><a href="#cb2-10"></a>        }</span></code></pre></div>
<hr />
<p>Здесь ничего объяснять, думаю, не нужно. Все параметры задаются в зависимости от личных предпочтений пользователя.</p>
<p>И последнее, что нужно сделать - это добавить в конфигурационный файл сочетания горячих клавиш для каждого поискового движка.<br />
Я выбрал следующие сочетания:</p>
<p><code>deb</code> - mod4 + Shift + d;<br />
<code>duckduckgo</code> - mod4 + Shift + s;<br />
<code>youtube</code> - mod4 + Shift + y.</p>
<p>Соответственно добавляем в конфиг:</p>
<hr />
<div class="sourceCode" id="cb3"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb3-1"><a href="#cb3-1"></a><span class="co">-- Search prompt</span></span>
<span id="cb3-2"><a href="#cb3-2"></a>, ((mod4Mask <span class="op">.|.</span> shiftMask, xK_s), promptSearchBrowser mySearchConfig myBrowser duckduckgo)</span>
<span id="cb3-3"><a href="#cb3-3"></a>, ((mod4Mask <span class="op">.|.</span> shiftMask, xK_y), promptSearchBrowser mySearchConfig myBrowser youtube)</span>
<span id="cb3-4"><a href="#cb3-4"></a>, ((mod4Mask <span class="op">.|.</span> shiftMask, xK_d), promptSearchBrowser mySearchConfig myBrowser deb)</span></code></pre></div>
<hr />
<p>где</p>
<p><code>mySearchConfig</code> - имя нашего окна, которое мы сконфигурировали ранее; <code>myBrowser</code> - браузер используемый по умолчанию.</p>
<p>Я пользуюсь браузером <code>Chromium</code> поэтому в <code>hmonad.hs</code> прописал константу:</p>
<hr />
<div class="sourceCode" id="cb4"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb4-1"><a href="#cb4-1"></a>myBrowser <span class="ot">=</span> <span class="st">&quot;chromium&quot;</span></span></code></pre></div>
<hr />
<blockquote>
<p>Если вы используете несколько браузеров, то вместо <code>myBrowser</code> можно прописать имя конкретного браузера. Тогда результаты поискового запроса для каждого движка будут открываться в разных браузерах, согласно тому, что вы указали.</p>
</blockquote>
<p>Остаётся перекомпилировать и перезагрузить <code>xmonad</code>, чтобы все изменения вступили в силу.</p>
<p>А вот как это выглядит, например, при нажатии сочетания клавиш <code>mod4 + Shift + s</code>:</p>
<p><a href="http://www.imagebam.com/image/6c72731264837784"><img src="http://thumbs2.imagebam.com/69/d0/d0/6c72731264837784.jpg" alt="imagebam.com"></a></p>]]></description>
    <pubDate>Sun, 30 Jun 2019 00:00:00 UT</pubDate>
    <guid>https://chubaduba.github.io//posts/2019-06-30-1.html</guid>
    <dc:creator>ChubaDuba</dc:creator>
</item>
<item>
    <title>Xmobar. Индикатор раскладки клавиатуры.</title>
    <link>https://chubaduba.github.io//posts/2019-05-02-1.html</link>
    <description><![CDATA[<p>По умолчанию <code>xmobar</code> не показывает индикатор раскладки клавиатуры, но это легко исправить, проведя несложные настройки.</p>
<p>Для начала зададим комбинацию клавиш, при нажатии которой будет переключаться язык на клавиатуре. Я по привычке использую левый <code>Alt+Shift</code>. Изменим в файле <code>/etc/default/keyboard</code> параметр <code>XKBOPTIONS</code> на то, что нам нужно:</p>
<pre><code>XKBOPTIONS=&quot;grp:alt_shift_toggle,grp_led:scroll&quot;
</code></pre>
<blockquote>
<p>Чтобы изменения вступили в силу, нужно перезагрузить систему.</p>
</blockquote>
<p>Ещё нам потребуется установить в систему пакет <a href="https://packages.debian.org/stretch/kbdd">kbdd</a>:</p>
<pre><code>$ sudo apt-get install kbdd
</code></pre>
<p>Ну и теперь остаётся настроить сам <code>xmobar</code>. Для этого открываем файл конфигурации <code>.xmobarrc</code> и добавляем в секцию <code>commands</code> строчку:</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb3-1"><a href="#cb3-1"></a><span class="dt">Run</span> <span class="dt">Kbd</span> [(<span class="st">&quot;us&quot;</span>, <span class="st">&quot;&lt;fc=#ffeeba&gt;usa&lt;/fc&gt;&quot;</span>), (<span class="st">&quot;ru&quot;</span>, <span class="st">&quot;&lt;fc=#ffeeba&gt;rus&lt;/fc&gt;&quot;</span>)]</span></code></pre></div>
<p>Здесь я указал каким цветом будет отображать индикатор при разных раскладках. Если вам это не нужно, параметр <code>&lt;fc&gt;&lt;/fc&gt;</code> можно не использовать.</p>
<p>В <code>template</code>, в нужном нам месте, добавляем вывод индикатора на экран:</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode haskell"><code class="sourceCode haskell"><span id="cb4-1"><a href="#cb4-1"></a>, template <span class="ot">=</span> <span class="op">...</span> <span class="op">%</span>kbd<span class="op">%</span> <span class="op">...</span></span></code></pre></div>
<p>Сохраняем файл <code>.xmobarrc</code> и перезагружаем <code>xmobar</code>. Теперь у нас есть индикатор раскладки:</p>
<p><a href="http://www.imagebam.com/image/7cee4e1211317614"><img src="http://thumbs2.imagebam.com/ce/2a/36/7cee4e1211317614.jpg" alt="imagebam.com"></a> <a href="http://www.imagebam.com/image/4f5c911211317634"><img src="http://thumbs2.imagebam.com/0b/dd/cd/4f5c911211317634.jpg" alt="imagebam.com"></a></p>]]></description>
    <pubDate>Thu, 02 May 2019 00:00:00 UT</pubDate>
    <guid>https://chubaduba.github.io//posts/2019-05-02-1.html</guid>
    <dc:creator>ChubaDuba</dc:creator>
</item>

    </channel>
</rss>
